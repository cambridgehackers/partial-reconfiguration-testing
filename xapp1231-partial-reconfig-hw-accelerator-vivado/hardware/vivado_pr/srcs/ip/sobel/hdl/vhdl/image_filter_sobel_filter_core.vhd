-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.4
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity image_filter_sobel_filter_core is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    src_data_stream_0_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src_data_stream_0_V_empty_n : IN STD_LOGIC;
    src_data_stream_0_V_read : OUT STD_LOGIC;
    src_data_stream_1_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    src_data_stream_1_V_empty_n : IN STD_LOGIC;
    src_data_stream_1_V_read : OUT STD_LOGIC;
    dst_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_data_stream_0_V_full_n : IN STD_LOGIC;
    dst_data_stream_0_V_write : OUT STD_LOGIC;
    dst_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_data_stream_1_V_full_n : IN STD_LOGIC;
    dst_data_stream_1_V_write : OUT STD_LOGIC;
    rows : IN STD_LOGIC_VECTOR (10 downto 0);
    cols : IN STD_LOGIC_VECTOR (10 downto 0);
    C_XR0C0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR0C1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR0C2 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR1C0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR1C1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR1C2 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR2C0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR2C1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_XR2C2 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR0C0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR0C1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR0C2 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR1C0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR1C1 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR1C2 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR2C0 : IN STD_LOGIC_VECTOR (31 downto 0);
    C_YR2C1 : IN STD_LOGIC_VECTOR (31 downto 0);
    c_high_thresh : IN STD_LOGIC_VECTOR (31 downto 0);
    c_low_thresh : IN STD_LOGIC_VECTOR (31 downto 0);
    c_invert : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of image_filter_sobel_filter_core is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_pp0_stg0_fsm_2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv16_FF : STD_LOGIC_VECTOR (15 downto 0) := "0000000011111111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_22 : BOOLEAN;
    signal col_assign_reg_403 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_reg_ppstg_col_assign_reg_403_pp0_it1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_cseq_ST_pp0_stg0_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_75 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it0 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it1 : STD_LOGIC := '0';
    signal tmp_1_reg_1324 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_1_reg_1324_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_1353 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond_reg_1353_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_96 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it2 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it3 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it4 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it5 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it6 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it7 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it8 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it9 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it10 : STD_LOGIC := '0';
    signal ap_reg_ppiten_pp0_it11 : STD_LOGIC := '0';
    signal or_cond3_reg_1357 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_reg_1357_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_127 : BOOLEAN;
    signal ap_reg_ppiten_pp0_it12 : STD_LOGIC := '0';
    signal ap_sig_bdd_139 : BOOLEAN;
    signal cols_cast2_cast_fu_416_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal cols_cast2_cast_reg_1175 : STD_LOGIC_VECTOR (11 downto 0);
    signal rows_cast1_cast_fu_420_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal rows_cast1_cast_reg_1180 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_424_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_reg_1185 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_fu_430_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_s_reg_1190 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_5_cast_fu_442_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_5_cast_reg_1195 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_6_cast_fu_452_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_6_cast_reg_1200 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_36_0_i_fu_524_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_0_i_reg_1205 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_0_i_fu_528_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_0_i_reg_1210 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_0_1_i_fu_532_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_0_1_i_reg_1215 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_0_1_i_fu_536_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_0_1_i_reg_1220 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_0_2_i_fu_540_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_0_2_i_reg_1225 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_0_2_i_fu_544_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_0_2_i_reg_1230 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_1_i_fu_548_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_1_i_reg_1235 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_1_i_fu_552_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_1_i_reg_1240 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_1_1_i_fu_556_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_1_1_i_reg_1245 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_1_1_i_fu_560_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_1_1_i_reg_1250 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_1_2_i_fu_564_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_1_2_i_reg_1255 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_1_2_i_fu_568_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_1_2_i_reg_1260 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_2_i_fu_572_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_2_i_reg_1265 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_2_i_fu_576_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_2_i_reg_1270 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_2_1_i_fu_580_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_2_1_i_reg_1275 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_2_1_i_fu_584_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_38_2_1_i_reg_1280 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_2_2_i_fu_588_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_36_2_2_i_reg_1285 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_33_i_fu_592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_i_reg_1290 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_199 : BOOLEAN;
    signal row_1_fu_607_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal row_1_reg_1299 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_8_fu_613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_reg_1304 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_fu_628_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_1309 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_634_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1314 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_640_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_reg_1319 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_1_reg_1324_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_1_reg_1324_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_fu_650_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal col_reg_1328 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_11_fu_656_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_reg_1333 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_11_reg_1333_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_tmp_11_reg_1333_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_661_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_12_reg_1337 : STD_LOGIC_VECTOR (63 downto 0);
    signal buff_A_val_1_addr_reg_1342 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_cond_fu_667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond3_fu_678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_reg_1357_pp0_it1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_reg_1357_pp0_it2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_reg_1357_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_reg_1357_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_reg_1357_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_reg_1357_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_reg_1357_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_reg_1357_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_reg_1357_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond3_reg_1357_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal buff_C_val_1_0_1_load_reg_1361 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_cond4_fu_741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond4_reg_1371 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond4_reg_1371_pp0_it3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond4_reg_1371_pp0_it4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond4_reg_1371_pp0_it5 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond4_reg_1371_pp0_it6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond4_reg_1371_pp0_it7 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond4_reg_1371_pp0_it8 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond4_reg_1371_pp0_it9 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond4_reg_1371_pp0_it10 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_ppstg_or_cond4_reg_1371_pp0_it11 : STD_LOGIC_VECTOR (0 downto 0);
    signal buff_C_val_0_1_reg_1376 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_buff_C_val_0_1_reg_1376_pp0_it4 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_1_1_reg_1382 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_buff_C_val_1_1_reg_1382_pp0_it4 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_2_1_reg_1388 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_reg_ppstg_buff_C_val_2_1_reg_1388_pp0_it4 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_1_0_load_reg_1398 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_0_i_fu_805_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_0_2_i_fu_819_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_1_2_i_fu_833_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_2_i_fu_847_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_0_1_i_fu_869_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_1_i_fu_882_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_1_1_i_fu_895_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_35_2_1_i_fu_908_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_780_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_2_2_i_reg_1451 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_809_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_0_i_reg_1457 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_814_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_0_i_reg_1462 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_837_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_1_2_i_reg_1467 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_842_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_1_2_i_reg_1472 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_851_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_37_2_i_reg_1477 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_856_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_39_2_i_reg_1482 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp7_fu_921_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp7_reg_1487 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp14_fu_926_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp14_reg_1492 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_fu_931_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp3_reg_1497 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp4_fu_936_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp4_reg_1502 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp6_fu_941_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp6_reg_1507 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp8_fu_946_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp8_reg_1512 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp10_fu_951_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp10_reg_1517 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp11_fu_956_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp11_reg_1522 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp13_fu_961_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp13_reg_1527 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp15_fu_966_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp15_reg_1532 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_weight_2_2_2_i_fu_979_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_weight_2_2_2_i_reg_1537 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_weight_2_2_2_i_fu_993_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_weight_2_2_2_i_reg_1544 : STD_LOGIC_VECTOR (15 downto 0);
    signal edge_weight_fu_1033_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal edge_weight_reg_1551 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_40_fu_1039_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_40_reg_1556 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val1_i_fu_1053_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val1_i_reg_1561 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val_2_i_fu_1088_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val_2_i_reg_1567 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_A_val_0_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buff_A_val_0_ce0 : STD_LOGIC;
    signal buff_A_val_0_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_A_val_0_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buff_A_val_0_ce1 : STD_LOGIC;
    signal buff_A_val_0_we1 : STD_LOGIC;
    signal buff_A_val_0_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_A_val_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buff_A_val_1_ce0 : STD_LOGIC;
    signal buff_A_val_1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_A_val_1_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buff_A_val_1_ce1 : STD_LOGIC;
    signal buff_A_val_1_we1 : STD_LOGIC;
    signal buff_A_val_1_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_A_val_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal buff_A_val_2_ce0 : STD_LOGIC;
    signal buff_A_val_2_we0 : STD_LOGIC;
    signal buff_A_val_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_A_val_2_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buff_A_val_2_ce1 : STD_LOGIC;
    signal buff_A_val_2_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_reg_392 : STD_LOGIC_VECTOR (11 downto 0);
    signal col_assign_phi_fu_407_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_15_fu_692_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_17_fu_705_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal buff_C_val_1_0_1_fu_130 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_0_0_s_fu_134 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_0_1_s_fu_138 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_0_0_1_fu_142 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_1_0_s_fu_146 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_1_1_s_fu_150 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_2_1_s_fu_154 : STD_LOGIC_VECTOR (7 downto 0);
    signal buff_C_val_2_0_s_fu_158 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_436_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_6_fu_446_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_fu_456_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_29_fu_492_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_460_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_30_fu_496_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_464_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_31_fu_500_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_468_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_32_fu_504_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_fu_472_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_33_fu_508_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_20_fu_476_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_34_fu_512_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_26_fu_480_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_35_fu_516_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_27_fu_484_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_36_fu_520_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_28_fu_488_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_37_fu_618_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal row_cast_cast_fu_598_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_23_fu_672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_fu_710_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal col_assign_cast_cast_fu_688_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp1_fu_720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_780_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_780_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_809_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_809_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_814_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_814_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_823_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_823_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_828_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_828_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_837_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_837_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_842_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_842_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_851_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_851_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_856_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_856_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_872_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_872_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_877_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_877_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_885_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_885_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_890_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_890_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_898_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_898_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_903_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_903_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_911_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_911_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_916_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_916_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_823_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_828_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_911_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_898_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_872_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_885_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_916_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_903_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_877_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_890_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp9_fu_975_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of tmp9_fu_975_p2 : signal is "no";
    signal tmp5_fu_971_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 of tmp5_fu_971_p2 : signal is "no";
    signal tmp16_fu_989_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 of tmp16_fu_989_p2 : signal is "no";
    signal tmp12_fu_985_p2 : STD_LOGIC_VECTOR (15 downto 0);
    attribute use_dsp48 of tmp12_fu_985_p2 : signal is "no";
    signal tmp_17_i_fu_999_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_i_fu_1004_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_20_i_fu_1016_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_i_fu_1021_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_19_i_fu_1009_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_22_i_fu_1026_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_23_i_fu_1043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal edge_val_fu_1048_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_26_i_fu_1061_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_i_fu_1064_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_i_fu_1069_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_1082_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_edge_val_i_fu_1074_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val_1_fu_1095_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal edge_val_3_fu_1100_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_780_ce : STD_LOGIC;
    signal grp_fu_809_ce : STD_LOGIC;
    signal grp_fu_814_ce : STD_LOGIC;
    signal grp_fu_823_ce : STD_LOGIC;
    signal grp_fu_828_ce : STD_LOGIC;
    signal grp_fu_837_ce : STD_LOGIC;
    signal grp_fu_842_ce : STD_LOGIC;
    signal grp_fu_851_ce : STD_LOGIC;
    signal grp_fu_856_ce : STD_LOGIC;
    signal grp_fu_872_ce : STD_LOGIC;
    signal grp_fu_877_ce : STD_LOGIC;
    signal grp_fu_885_ce : STD_LOGIC;
    signal grp_fu_890_ce : STD_LOGIC;
    signal grp_fu_898_ce : STD_LOGIC;
    signal grp_fu_903_ce : STD_LOGIC;
    signal grp_fu_911_ce : STD_LOGIC;
    signal grp_fu_916_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_fu_780_p10 : STD_LOGIC_VECTOR (15 downto 0);

    component image_filter_mul_8s_8ns_16_3 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component image_filter_sobel_filter_core_buff_A_val_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component image_filter_sobel_filter_core_buff_A_val_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    buff_A_val_0_U : component image_filter_sobel_filter_core_buff_A_val_0
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buff_A_val_0_address0,
        ce0 => buff_A_val_0_ce0,
        q0 => buff_A_val_0_q0,
        address1 => buff_A_val_0_address1,
        ce1 => buff_A_val_0_ce1,
        we1 => buff_A_val_0_we1,
        d1 => buff_A_val_0_d1);

    buff_A_val_1_U : component image_filter_sobel_filter_core_buff_A_val_0
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buff_A_val_1_address0,
        ce0 => buff_A_val_1_ce0,
        q0 => buff_A_val_1_q0,
        address1 => buff_A_val_1_address1,
        ce1 => buff_A_val_1_ce1,
        we1 => buff_A_val_1_we1,
        d1 => buff_A_val_1_d1);

    buff_A_val_2_U : component image_filter_sobel_filter_core_buff_A_val_2
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buff_A_val_2_address0,
        ce0 => buff_A_val_2_ce0,
        we0 => buff_A_val_2_we0,
        d0 => buff_A_val_2_d0,
        address1 => buff_A_val_2_address1,
        ce1 => buff_A_val_2_ce1,
        q1 => buff_A_val_2_q1);

    image_filter_mul_8s_8ns_16_3_U14 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_780_p0,
        din1 => grp_fu_780_p1,
        ce => grp_fu_780_ce,
        dout => grp_fu_780_p2);

    image_filter_mul_8s_8ns_16_3_U15 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_809_p0,
        din1 => grp_fu_809_p1,
        ce => grp_fu_809_ce,
        dout => grp_fu_809_p2);

    image_filter_mul_8s_8ns_16_3_U16 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_814_p0,
        din1 => grp_fu_814_p1,
        ce => grp_fu_814_ce,
        dout => grp_fu_814_p2);

    image_filter_mul_8s_8ns_16_3_U17 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_823_p0,
        din1 => grp_fu_823_p1,
        ce => grp_fu_823_ce,
        dout => grp_fu_823_p2);

    image_filter_mul_8s_8ns_16_3_U18 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_828_p0,
        din1 => grp_fu_828_p1,
        ce => grp_fu_828_ce,
        dout => grp_fu_828_p2);

    image_filter_mul_8s_8ns_16_3_U19 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_837_p0,
        din1 => grp_fu_837_p1,
        ce => grp_fu_837_ce,
        dout => grp_fu_837_p2);

    image_filter_mul_8s_8ns_16_3_U20 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_842_p0,
        din1 => grp_fu_842_p1,
        ce => grp_fu_842_ce,
        dout => grp_fu_842_p2);

    image_filter_mul_8s_8ns_16_3_U21 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_851_p0,
        din1 => grp_fu_851_p1,
        ce => grp_fu_851_ce,
        dout => grp_fu_851_p2);

    image_filter_mul_8s_8ns_16_3_U22 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_856_p0,
        din1 => grp_fu_856_p1,
        ce => grp_fu_856_ce,
        dout => grp_fu_856_p2);

    image_filter_mul_8s_8ns_16_3_U23 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_872_p0,
        din1 => grp_fu_872_p1,
        ce => grp_fu_872_ce,
        dout => grp_fu_872_p2);

    image_filter_mul_8s_8ns_16_3_U24 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_877_p0,
        din1 => grp_fu_877_p1,
        ce => grp_fu_877_ce,
        dout => grp_fu_877_p2);

    image_filter_mul_8s_8ns_16_3_U25 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_885_p0,
        din1 => grp_fu_885_p1,
        ce => grp_fu_885_ce,
        dout => grp_fu_885_p2);

    image_filter_mul_8s_8ns_16_3_U26 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_890_p0,
        din1 => grp_fu_890_p1,
        ce => grp_fu_890_ce,
        dout => grp_fu_890_p2);

    image_filter_mul_8s_8ns_16_3_U27 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_898_p0,
        din1 => grp_fu_898_p1,
        ce => grp_fu_898_ce,
        dout => grp_fu_898_p2);

    image_filter_mul_8s_8ns_16_3_U28 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_903_p0,
        din1 => grp_fu_903_p1,
        ce => grp_fu_903_ce,
        dout => grp_fu_903_p2);

    image_filter_mul_8s_8ns_16_3_U29 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_911_p0,
        din1 => grp_fu_911_p1,
        ce => grp_fu_911_ce,
        dout => grp_fu_911_p2);

    image_filter_mul_8s_8ns_16_3_U30 : component image_filter_mul_8s_8ns_16_3
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_916_p0,
        din1 => grp_fu_916_p1,
        ce => grp_fu_916_ce,
        dout => grp_fu_916_p2);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = tmp_7_fu_602_p2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it0 assign process. --
    ap_reg_ppiten_pp0_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and (ap_const_lv1_0 = tmp_1_fu_645_p2))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = tmp_7_fu_602_p2)))) then 
                    ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it1 assign process. --
    ap_reg_ppiten_pp0_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = tmp_7_fu_602_p2)))) then 
                    ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it10 assign process. --
    ap_reg_ppiten_pp0_it10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it10 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it10 <= ap_reg_ppiten_pp0_it9;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it11 assign process. --
    ap_reg_ppiten_pp0_it11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it11 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it11 <= ap_reg_ppiten_pp0_it10;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it12 assign process. --
    ap_reg_ppiten_pp0_it12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it12 <= ap_reg_ppiten_pp0_it11;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = tmp_7_fu_602_p2)))) then 
                    ap_reg_ppiten_pp0_it12 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it2 assign process. --
    ap_reg_ppiten_pp0_it2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it3 assign process. --
    ap_reg_ppiten_pp0_it3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it4 assign process. --
    ap_reg_ppiten_pp0_it4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then
                    if (not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2))) then 
                        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
                    elsif ((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) then 
                        ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it5 assign process. --
    ap_reg_ppiten_pp0_it5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it5 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it5 <= ap_reg_ppiten_pp0_it4;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it6 assign process. --
    ap_reg_ppiten_pp0_it6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it6 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it6 <= ap_reg_ppiten_pp0_it5;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it7 assign process. --
    ap_reg_ppiten_pp0_it7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it7 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it7 <= ap_reg_ppiten_pp0_it6;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it8 assign process. --
    ap_reg_ppiten_pp0_it8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it8 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it8 <= ap_reg_ppiten_pp0_it7;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp0_it9 assign process. --
    ap_reg_ppiten_pp0_it9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp0_it9 <= ap_const_logic_0;
            else
                if (not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then 
                    ap_reg_ppiten_pp0_it9 <= ap_reg_ppiten_pp0_it8;
                end if; 
            end if;
        end if;
    end process;


    -- col_assign_reg_403 assign process. --
    col_assign_reg_403_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((tmp_1_reg_1324 = ap_const_lv1_0)))) then 
                col_assign_reg_403 <= col_reg_1328;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = tmp_7_fu_602_p2)))) then 
                col_assign_reg_403 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    -- row_reg_392 assign process. --
    row_reg_392_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_reg_ppstg_tmp_1_reg_1324_pp0_it1 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
                row_reg_392 <= row_1_reg_1299;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_139))) then 
                row_reg_392 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))) then
                ap_reg_ppstg_buff_C_val_0_1_reg_1376_pp0_it4 <= buff_C_val_0_1_reg_1376;
                ap_reg_ppstg_buff_C_val_1_1_reg_1382_pp0_it4 <= buff_C_val_1_1_reg_1382;
                ap_reg_ppstg_buff_C_val_2_1_reg_1388_pp0_it4 <= buff_C_val_2_1_reg_1388;
                ap_reg_ppstg_or_cond3_reg_1357_pp0_it10 <= ap_reg_ppstg_or_cond3_reg_1357_pp0_it9;
                ap_reg_ppstg_or_cond3_reg_1357_pp0_it11 <= ap_reg_ppstg_or_cond3_reg_1357_pp0_it10;
                ap_reg_ppstg_or_cond3_reg_1357_pp0_it2 <= ap_reg_ppstg_or_cond3_reg_1357_pp0_it1;
                ap_reg_ppstg_or_cond3_reg_1357_pp0_it3 <= ap_reg_ppstg_or_cond3_reg_1357_pp0_it2;
                ap_reg_ppstg_or_cond3_reg_1357_pp0_it4 <= ap_reg_ppstg_or_cond3_reg_1357_pp0_it3;
                ap_reg_ppstg_or_cond3_reg_1357_pp0_it5 <= ap_reg_ppstg_or_cond3_reg_1357_pp0_it4;
                ap_reg_ppstg_or_cond3_reg_1357_pp0_it6 <= ap_reg_ppstg_or_cond3_reg_1357_pp0_it5;
                ap_reg_ppstg_or_cond3_reg_1357_pp0_it7 <= ap_reg_ppstg_or_cond3_reg_1357_pp0_it6;
                ap_reg_ppstg_or_cond3_reg_1357_pp0_it8 <= ap_reg_ppstg_or_cond3_reg_1357_pp0_it7;
                ap_reg_ppstg_or_cond3_reg_1357_pp0_it9 <= ap_reg_ppstg_or_cond3_reg_1357_pp0_it8;
                ap_reg_ppstg_or_cond4_reg_1371_pp0_it10 <= ap_reg_ppstg_or_cond4_reg_1371_pp0_it9;
                ap_reg_ppstg_or_cond4_reg_1371_pp0_it11 <= ap_reg_ppstg_or_cond4_reg_1371_pp0_it10;
                ap_reg_ppstg_or_cond4_reg_1371_pp0_it3 <= or_cond4_reg_1371;
                ap_reg_ppstg_or_cond4_reg_1371_pp0_it4 <= ap_reg_ppstg_or_cond4_reg_1371_pp0_it3;
                ap_reg_ppstg_or_cond4_reg_1371_pp0_it5 <= ap_reg_ppstg_or_cond4_reg_1371_pp0_it4;
                ap_reg_ppstg_or_cond4_reg_1371_pp0_it6 <= ap_reg_ppstg_or_cond4_reg_1371_pp0_it5;
                ap_reg_ppstg_or_cond4_reg_1371_pp0_it7 <= ap_reg_ppstg_or_cond4_reg_1371_pp0_it6;
                ap_reg_ppstg_or_cond4_reg_1371_pp0_it8 <= ap_reg_ppstg_or_cond4_reg_1371_pp0_it7;
                ap_reg_ppstg_or_cond4_reg_1371_pp0_it9 <= ap_reg_ppstg_or_cond4_reg_1371_pp0_it8;
                ap_reg_ppstg_tmp_11_reg_1333_pp0_it2 <= ap_reg_ppstg_tmp_11_reg_1333_pp0_it1;
                ap_reg_ppstg_tmp_1_reg_1324_pp0_it2 <= ap_reg_ppstg_tmp_1_reg_1324_pp0_it1;
                ap_reg_ppstg_tmp_1_reg_1324_pp0_it3 <= ap_reg_ppstg_tmp_1_reg_1324_pp0_it2;
                buff_C_val_0_1_reg_1376 <= buff_C_val_0_0_s_fu_134;
                buff_C_val_1_1_reg_1382 <= buff_C_val_1_0_s_fu_146;
                buff_C_val_2_1_reg_1388 <= buff_C_val_2_0_s_fu_158;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then
                ap_reg_ppstg_col_assign_reg_403_pp0_it1 <= col_assign_reg_403;
                ap_reg_ppstg_or_cond3_reg_1357_pp0_it1 <= or_cond3_reg_1357;
                ap_reg_ppstg_or_cond_reg_1353_pp0_it1 <= or_cond_reg_1353;
                ap_reg_ppstg_tmp_11_reg_1333_pp0_it1 <= tmp_11_reg_1333;
                ap_reg_ppstg_tmp_1_reg_1324_pp0_it1 <= tmp_1_reg_1324;
                tmp_1_reg_1324 <= tmp_1_fu_645_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = tmp_1_fu_645_p2)) and not((ap_const_lv1_0 = tmp_11_fu_656_p2)))) then
                buff_A_val_1_addr_reg_1342 <= tmp_12_fu_661_p1(11 - 1 downto 0);
                tmp_12_reg_1337(0) <= tmp_12_fu_661_p1(0);
    tmp_12_reg_1337(1) <= tmp_12_fu_661_p1(1);
    tmp_12_reg_1337(2) <= tmp_12_fu_661_p1(2);
    tmp_12_reg_1337(3) <= tmp_12_fu_661_p1(3);
    tmp_12_reg_1337(4) <= tmp_12_fu_661_p1(4);
    tmp_12_reg_1337(5) <= tmp_12_fu_661_p1(5);
    tmp_12_reg_1337(6) <= tmp_12_fu_661_p1(6);
    tmp_12_reg_1337(7) <= tmp_12_fu_661_p1(7);
    tmp_12_reg_1337(8) <= tmp_12_fu_661_p1(8);
    tmp_12_reg_1337(9) <= tmp_12_fu_661_p1(9);
    tmp_12_reg_1337(10) <= tmp_12_fu_661_p1(10);
    tmp_12_reg_1337(11) <= tmp_12_fu_661_p1(11);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_reg_ppstg_tmp_1_reg_1324_pp0_it1 = ap_const_lv1_0)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_1353_pp0_it1)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then
                buff_C_val_0_0_1_fu_142 <= src_data_stream_0_V_dout;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_1324_pp0_it2)) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_11_reg_1333_pp0_it2)))) then
                buff_C_val_0_0_s_fu_134 <= buff_C_val_0_0_1_fu_142;
                buff_C_val_1_0_s_fu_146 <= buff_C_val_1_0_1_load_reg_1361;
                buff_C_val_2_0_s_fu_158 <= buff_A_val_2_q1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it4) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_1324_pp0_it3)))) then
                buff_C_val_0_1_s_fu_138 <= buff_C_val_0_1_reg_1376;
                buff_C_val_1_1_s_fu_150 <= buff_C_val_1_1_reg_1382;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((tmp_1_reg_1324 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_11_reg_1333)))) then
                buff_C_val_1_0_1_fu_130 <= buff_A_val_0_q0;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_reg_ppstg_tmp_1_reg_1324_pp0_it1 = ap_const_lv1_0)) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_11_reg_1333_pp0_it1)))) then
                buff_C_val_1_0_1_load_reg_1361 <= buff_C_val_1_0_1_fu_130;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it3))) then
                buff_C_val_1_0_load_reg_1398 <= buff_C_val_1_0_s_fu_146;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_1324_pp0_it2)))) then
                buff_C_val_2_1_s_fu_154 <= buff_C_val_2_0_s_fu_158;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then
                col_reg_1328 <= col_fu_650_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_139))) then
                cols_cast2_cast_reg_1175(0) <= cols_cast2_cast_fu_416_p1(0);
    cols_cast2_cast_reg_1175(1) <= cols_cast2_cast_fu_416_p1(1);
    cols_cast2_cast_reg_1175(2) <= cols_cast2_cast_fu_416_p1(2);
    cols_cast2_cast_reg_1175(3) <= cols_cast2_cast_fu_416_p1(3);
    cols_cast2_cast_reg_1175(4) <= cols_cast2_cast_fu_416_p1(4);
    cols_cast2_cast_reg_1175(5) <= cols_cast2_cast_fu_416_p1(5);
    cols_cast2_cast_reg_1175(6) <= cols_cast2_cast_fu_416_p1(6);
    cols_cast2_cast_reg_1175(7) <= cols_cast2_cast_fu_416_p1(7);
    cols_cast2_cast_reg_1175(8) <= cols_cast2_cast_fu_416_p1(8);
    cols_cast2_cast_reg_1175(9) <= cols_cast2_cast_fu_416_p1(9);
    cols_cast2_cast_reg_1175(10) <= cols_cast2_cast_fu_416_p1(10);
                rows_cast1_cast_reg_1180(0) <= rows_cast1_cast_fu_420_p1(0);
    rows_cast1_cast_reg_1180(1) <= rows_cast1_cast_fu_420_p1(1);
    rows_cast1_cast_reg_1180(2) <= rows_cast1_cast_fu_420_p1(2);
    rows_cast1_cast_reg_1180(3) <= rows_cast1_cast_fu_420_p1(3);
    rows_cast1_cast_reg_1180(4) <= rows_cast1_cast_fu_420_p1(4);
    rows_cast1_cast_reg_1180(5) <= rows_cast1_cast_fu_420_p1(5);
    rows_cast1_cast_reg_1180(6) <= rows_cast1_cast_fu_420_p1(6);
    rows_cast1_cast_reg_1180(7) <= rows_cast1_cast_fu_420_p1(7);
    rows_cast1_cast_reg_1180(8) <= rows_cast1_cast_fu_420_p1(8);
    rows_cast1_cast_reg_1180(9) <= rows_cast1_cast_fu_420_p1(9);
    rows_cast1_cast_reg_1180(10) <= rows_cast1_cast_fu_420_p1(10);
                tmp_33_i_reg_1290 <= tmp_33_i_fu_592_p2;
                tmp_36_0_1_i_reg_1215 <= tmp_36_0_1_i_fu_532_p1;
                tmp_36_0_2_i_reg_1225 <= tmp_36_0_2_i_fu_540_p1;
                tmp_36_0_i_reg_1205 <= tmp_36_0_i_fu_524_p1;
                tmp_36_1_1_i_reg_1245 <= tmp_36_1_1_i_fu_556_p1;
                tmp_36_1_2_i_reg_1255 <= tmp_36_1_2_i_fu_564_p1;
                tmp_36_1_i_reg_1235 <= tmp_36_1_i_fu_548_p1;
                tmp_36_2_1_i_reg_1275 <= tmp_36_2_1_i_fu_580_p1;
                tmp_36_2_2_i_reg_1285 <= tmp_36_2_2_i_fu_588_p1;
                tmp_36_2_i_reg_1265 <= tmp_36_2_i_fu_572_p1;
                tmp_38_0_1_i_reg_1220 <= tmp_38_0_1_i_fu_536_p1;
                tmp_38_0_2_i_reg_1230 <= tmp_38_0_2_i_fu_544_p1;
                tmp_38_0_i_reg_1210 <= tmp_38_0_i_fu_528_p1;
                tmp_38_1_1_i_reg_1250 <= tmp_38_1_1_i_fu_560_p1;
                tmp_38_1_2_i_reg_1260 <= tmp_38_1_2_i_fu_568_p1;
                tmp_38_1_i_reg_1240 <= tmp_38_1_i_fu_552_p1;
                tmp_38_2_1_i_reg_1280 <= tmp_38_2_1_i_fu_584_p1;
                tmp_38_2_i_reg_1270 <= tmp_38_2_i_fu_576_p1;
                tmp_5_cast_reg_1195 <= tmp_5_cast_fu_442_p1;
                tmp_6_cast_reg_1200 <= tmp_6_cast_fu_452_p1;
                tmp_reg_1185 <= tmp_fu_424_p2;
                tmp_s_reg_1190 <= tmp_s_fu_430_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it9))) then
                edge_val1_i_reg_1561 <= edge_val1_i_fu_1053_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it10))) then
                edge_val_2_i_reg_1567 <= edge_val_2_i_fu_1088_p3;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it8))) then
                edge_weight_reg_1551 <= edge_weight_fu_1033_p2;
                tmp_40_reg_1556 <= tmp_40_fu_1039_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((ap_const_lv1_0 = tmp_7_fu_602_p2)))) then
                icmp_reg_1309 <= icmp_fu_628_p2;
                tmp_3_reg_1314 <= tmp_3_fu_634_p2;
                tmp_4_reg_1319 <= tmp_4_fu_640_p2;
                tmp_8_reg_1304 <= tmp_8_fu_613_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_lv1_0 = tmp_1_fu_645_p2)))) then
                or_cond3_reg_1357 <= or_cond3_fu_678_p2;
                or_cond_reg_1353 <= or_cond_fu_667_p2;
                tmp_11_reg_1333 <= tmp_11_fu_656_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_reg_ppstg_tmp_1_reg_1324_pp0_it1 = ap_const_lv1_0)) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then
                or_cond4_reg_1371 <= or_cond4_fu_741_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                row_1_reg_1299 <= row_1_fu_607_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it6))) then
                tmp10_reg_1517 <= tmp10_fu_951_p2;
                tmp11_reg_1522 <= tmp11_fu_956_p2;
                tmp13_reg_1527 <= tmp13_fu_961_p2;
                tmp15_reg_1532 <= tmp15_fu_966_p2;
                tmp3_reg_1497 <= tmp3_fu_931_p2;
                tmp4_reg_1502 <= tmp4_fu_936_p2;
                tmp6_reg_1507 <= tmp6_fu_941_p2;
                tmp8_reg_1512 <= tmp8_fu_946_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it5))) then
                tmp14_reg_1492 <= tmp14_fu_926_p2;
                tmp7_reg_1487 <= tmp7_fu_921_p2;
                tmp_37_0_i_reg_1457 <= grp_fu_809_p2;
                tmp_37_1_2_i_reg_1467 <= grp_fu_837_p2;
                tmp_37_2_i_reg_1477 <= grp_fu_851_p2;
                tmp_39_0_i_reg_1462 <= grp_fu_814_p2;
                tmp_39_1_2_i_reg_1472 <= grp_fu_842_p2;
                tmp_39_2_i_reg_1482 <= grp_fu_856_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it4))) then
                tmp_37_2_2_i_reg_1451 <= grp_fu_780_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it7))) then
                x_weight_2_2_2_i_reg_1537 <= x_weight_2_2_2_i_fu_979_p2;
                y_weight_2_2_2_i_reg_1544 <= y_weight_2_2_2_i_fu_993_p2;
            end if;
        end if;
    end process;
    cols_cast2_cast_reg_1175(11) <= '0';
    rows_cast1_cast_reg_1180(11) <= '0';
    tmp_12_reg_1337(63 downto 12) <= "0000000000000000000000000000000000000000000000000000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_reg_ppiten_pp0_it3, ap_reg_ppiten_pp0_it4, ap_reg_ppiten_pp0_it11, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12, ap_sig_bdd_139, tmp_7_fu_602_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_139)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((ap_const_lv1_0 = tmp_7_fu_602_p2)) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when ap_ST_pp0_stg0_fsm_2 => 
                if ((not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it11)))) and not(((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it4)))))) then
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                elsif ((((ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it11))) or ((ap_const_logic_1 = ap_reg_ppiten_pp0_it3) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) and not((ap_const_logic_1 = ap_reg_ppiten_pp0_it4))))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_pp0_stg0_fsm_2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, tmp_7_fu_602_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = tmp_7_fu_602_p2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(tmp_7_fu_602_p2, ap_sig_cseq_ST_st2_fsm_1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and (ap_const_lv1_0 = tmp_7_fu_602_p2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_bdd_127 assign process. --
    ap_sig_bdd_127_assign_proc : process(dst_data_stream_0_V_full_n, dst_data_stream_1_V_full_n, ap_reg_ppstg_or_cond3_reg_1357_pp0_it11)
    begin
                ap_sig_bdd_127 <= (((dst_data_stream_0_V_full_n = ap_const_logic_0) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond3_reg_1357_pp0_it11))) or (not((ap_const_lv1_0 = ap_reg_ppstg_or_cond3_reg_1357_pp0_it11)) and (dst_data_stream_1_V_full_n = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_139 assign process. --
    ap_sig_bdd_139_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_sig_bdd_139 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_199 assign process. --
    ap_sig_bdd_199_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_199 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_bdd_22 assign process. --
    ap_sig_bdd_22_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_22 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_75 assign process. --
    ap_sig_bdd_75_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_75 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_96 assign process. --
    ap_sig_bdd_96_assign_proc : process(src_data_stream_0_V_empty_n, src_data_stream_1_V_empty_n, ap_reg_ppstg_tmp_1_reg_1324_pp0_it1, ap_reg_ppstg_or_cond_reg_1353_pp0_it1)
    begin
                ap_sig_bdd_96 <= (((src_data_stream_0_V_empty_n = ap_const_logic_0) and not((ap_reg_ppstg_tmp_1_reg_1324_pp0_it1 = ap_const_lv1_0)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_1353_pp0_it1))) or (not((ap_reg_ppstg_tmp_1_reg_1324_pp0_it1 = ap_const_lv1_0)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_1353_pp0_it1)) and (src_data_stream_1_V_empty_n = ap_const_logic_0)));
    end process;


    -- ap_sig_cseq_ST_pp0_stg0_fsm_2 assign process. --
    ap_sig_cseq_ST_pp0_stg0_fsm_2_assign_proc : process(ap_sig_bdd_75)
    begin
        if (ap_sig_bdd_75) then 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp0_stg0_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_22)
    begin
        if (ap_sig_bdd_22) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_199)
    begin
        if (ap_sig_bdd_199) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;

    buff_A_val_0_address0 <= tmp_12_fu_661_p1(11 - 1 downto 0);
    buff_A_val_0_address1 <= tmp_15_fu_692_p1(11 - 1 downto 0);

    -- buff_A_val_0_ce0 assign process. --
    buff_A_val_0_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            buff_A_val_0_ce0 <= ap_const_logic_1;
        else 
            buff_A_val_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- buff_A_val_0_ce1 assign process. --
    buff_A_val_0_ce1_assign_proc : process(ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            buff_A_val_0_ce1 <= ap_const_logic_1;
        else 
            buff_A_val_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buff_A_val_0_d1 <= src_data_stream_0_V_dout;

    -- buff_A_val_0_we1 assign process. --
    buff_A_val_0_we1_assign_proc : process(ap_reg_ppstg_tmp_1_reg_1324_pp0_it1, ap_reg_ppstg_or_cond_reg_1353_pp0_it1, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12)
    begin
        if (((not((ap_reg_ppstg_tmp_1_reg_1324_pp0_it1 = ap_const_lv1_0)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_1353_pp0_it1)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12))))))) then 
            buff_A_val_0_we1 <= ap_const_logic_1;
        else 
            buff_A_val_0_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buff_A_val_1_address0 <= tmp_12_fu_661_p1(11 - 1 downto 0);
    buff_A_val_1_address1 <= buff_A_val_1_addr_reg_1342;

    -- buff_A_val_1_ce0 assign process. --
    buff_A_val_1_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it0, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it0) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            buff_A_val_1_ce0 <= ap_const_logic_1;
        else 
            buff_A_val_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- buff_A_val_1_ce1 assign process. --
    buff_A_val_1_ce1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            buff_A_val_1_ce1 <= ap_const_logic_1;
        else 
            buff_A_val_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buff_A_val_1_d1 <= buff_A_val_0_q0;

    -- buff_A_val_1_we1 assign process. --
    buff_A_val_1_we1_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, tmp_1_reg_1324, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12, tmp_11_reg_1333)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((tmp_1_reg_1324 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_11_reg_1333))))) then 
            buff_A_val_1_we1 <= ap_const_logic_1;
        else 
            buff_A_val_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buff_A_val_2_address0 <= tmp_12_reg_1337(11 - 1 downto 0);
    buff_A_val_2_address1 <= tmp_17_fu_705_p1(11 - 1 downto 0);

    -- buff_A_val_2_ce0 assign process. --
    buff_A_val_2_ce0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            buff_A_val_2_ce0 <= ap_const_logic_1;
        else 
            buff_A_val_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    -- buff_A_val_2_ce1 assign process. --
    buff_A_val_2_ce1_assign_proc : process(ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12)
    begin
        if (((ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            buff_A_val_2_ce1 <= ap_const_logic_1;
        else 
            buff_A_val_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    buff_A_val_2_d0 <= buff_A_val_1_q0;

    -- buff_A_val_2_we0 assign process. --
    buff_A_val_2_we0_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, tmp_1_reg_1324, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12, tmp_11_reg_1333)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and not((tmp_1_reg_1324 = ap_const_lv1_0)) and not((ap_const_lv1_0 = tmp_11_reg_1333))))) then 
            buff_A_val_2_we0 <= ap_const_logic_1;
        else 
            buff_A_val_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    col_assign_cast_cast_fu_688_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_col_assign_reg_403_pp0_it1),13));

    -- col_assign_phi_fu_407_p4 assign process. --
    col_assign_phi_fu_407_p4_assign_proc : process(col_assign_reg_403, ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_reg_ppiten_pp0_it1, tmp_1_reg_1324, col_reg_1328)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it1) and not((tmp_1_reg_1324 = ap_const_lv1_0)))) then 
            col_assign_phi_fu_407_p4 <= col_reg_1328;
        else 
            col_assign_phi_fu_407_p4 <= col_assign_reg_403;
        end if; 
    end process;

    col_fu_650_p2 <= std_logic_vector(unsigned(col_assign_phi_fu_407_p4) + unsigned(ap_const_lv12_1));
    cols_cast2_cast_fu_416_p1 <= std_logic_vector(resize(unsigned(cols),12));
    dst_data_stream_0_V_din <= 
        ap_const_lv8_0 when (ap_reg_ppstg_or_cond4_reg_1371_pp0_it11(0) = '1') else 
        edge_val_3_fu_1100_p3;

    -- dst_data_stream_0_V_write assign process. --
    dst_data_stream_0_V_write_assign_proc : process(ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond3_reg_1357_pp0_it11, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12)
    begin
        if ((not((ap_const_lv1_0 = ap_reg_ppstg_or_cond3_reg_1357_pp0_it11)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            dst_data_stream_0_V_write <= ap_const_logic_1;
        else 
            dst_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;

    dst_data_stream_1_V_din <= ap_const_lv8_80;

    -- dst_data_stream_1_V_write assign process. --
    dst_data_stream_1_V_write_assign_proc : process(ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_reg_ppstg_or_cond3_reg_1357_pp0_it11, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12)
    begin
        if ((not((ap_const_lv1_0 = ap_reg_ppstg_or_cond3_reg_1357_pp0_it11)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            dst_data_stream_1_V_write <= ap_const_logic_1;
        else 
            dst_data_stream_1_V_write <= ap_const_logic_0;
        end if; 
    end process;

    edge_val1_i_fu_1053_p3 <= 
        edge_val_fu_1048_p2 when (tmp_23_i_fu_1043_p2(0) = '1') else 
        ap_const_lv8_0;
    edge_val_1_fu_1095_p2 <= (edge_val_2_i_reg_1567 xor ap_const_lv8_FF);
    edge_val_2_i_fu_1088_p3 <= 
        p_edge_val_i_fu_1074_p3 when (tmp_21_fu_1082_p2(0) = '1') else 
        edge_val1_i_reg_1561;
    edge_val_3_fu_1100_p3 <= 
        edge_val_1_fu_1095_p2 when (tmp_33_i_reg_1290(0) = '1') else 
        edge_val_2_i_reg_1567;
    edge_val_fu_1048_p2 <= (tmp_40_reg_1556 xor ap_const_lv8_FF);
    edge_weight_fu_1033_p2 <= std_logic_vector(unsigned(tmp_19_i_fu_1009_p3) + unsigned(tmp_22_i_fu_1026_p3));

    -- grp_fu_780_ce assign process. --
    grp_fu_780_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_tmp_1_reg_1324_pp0_it2, or_cond4_reg_1371, ap_reg_ppstg_or_cond4_reg_1371_pp0_it3, ap_reg_ppstg_or_cond4_reg_1371_pp0_it4)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and ((not((ap_const_lv1_0 = ap_reg_ppstg_tmp_1_reg_1324_pp0_it2)) and (ap_const_lv1_0 = or_cond4_reg_1371)) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it3) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it4)))) then 
            grp_fu_780_ce <= ap_const_logic_1;
        else 
            grp_fu_780_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_780_p0 <= tmp_36_2_2_i_reg_1285(8 - 1 downto 0);
    grp_fu_780_p1 <= grp_fu_780_p10(8 - 1 downto 0);
    grp_fu_780_p10 <= std_logic_vector(resize(unsigned(buff_C_val_2_1_s_fu_154),16));

    -- grp_fu_809_ce assign process. --
    grp_fu_809_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_or_cond4_reg_1371_pp0_it3, ap_reg_ppstg_or_cond4_reg_1371_pp0_it4, ap_reg_ppstg_or_cond4_reg_1371_pp0_it5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and ((ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it3) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it4) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it5)))) then 
            grp_fu_809_ce <= ap_const_logic_1;
        else 
            grp_fu_809_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_809_p0 <= tmp_36_0_i_reg_1205(8 - 1 downto 0);
    grp_fu_809_p1 <= tmp_35_0_i_fu_805_p1(8 - 1 downto 0);

    -- grp_fu_814_ce assign process. --
    grp_fu_814_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_or_cond4_reg_1371_pp0_it3, ap_reg_ppstg_or_cond4_reg_1371_pp0_it4, ap_reg_ppstg_or_cond4_reg_1371_pp0_it5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and ((ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it3) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it4) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it5)))) then 
            grp_fu_814_ce <= ap_const_logic_1;
        else 
            grp_fu_814_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_814_p0 <= tmp_38_0_i_reg_1210(8 - 1 downto 0);
    grp_fu_814_p1 <= tmp_35_0_i_fu_805_p1(8 - 1 downto 0);

    -- grp_fu_823_ce assign process. --
    grp_fu_823_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_or_cond4_reg_1371_pp0_it3, ap_reg_ppstg_or_cond4_reg_1371_pp0_it4, ap_reg_ppstg_or_cond4_reg_1371_pp0_it5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and ((ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it3) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it4) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it5)))) then 
            grp_fu_823_ce <= ap_const_logic_1;
        else 
            grp_fu_823_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_823_p0 <= tmp_36_0_2_i_reg_1225(8 - 1 downto 0);
    grp_fu_823_p1 <= tmp_35_0_2_i_fu_819_p1(8 - 1 downto 0);

    -- grp_fu_828_ce assign process. --
    grp_fu_828_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_or_cond4_reg_1371_pp0_it3, ap_reg_ppstg_or_cond4_reg_1371_pp0_it4, ap_reg_ppstg_or_cond4_reg_1371_pp0_it5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and ((ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it3) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it4) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it5)))) then 
            grp_fu_828_ce <= ap_const_logic_1;
        else 
            grp_fu_828_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_828_p0 <= tmp_38_0_2_i_reg_1230(8 - 1 downto 0);
    grp_fu_828_p1 <= tmp_35_0_2_i_fu_819_p1(8 - 1 downto 0);

    -- grp_fu_837_ce assign process. --
    grp_fu_837_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_or_cond4_reg_1371_pp0_it3, ap_reg_ppstg_or_cond4_reg_1371_pp0_it4, ap_reg_ppstg_or_cond4_reg_1371_pp0_it5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and ((ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it3) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it4) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it5)))) then 
            grp_fu_837_ce <= ap_const_logic_1;
        else 
            grp_fu_837_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_837_p0 <= tmp_36_1_2_i_reg_1255(8 - 1 downto 0);
    grp_fu_837_p1 <= tmp_35_1_2_i_fu_833_p1(8 - 1 downto 0);

    -- grp_fu_842_ce assign process. --
    grp_fu_842_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_or_cond4_reg_1371_pp0_it3, ap_reg_ppstg_or_cond4_reg_1371_pp0_it4, ap_reg_ppstg_or_cond4_reg_1371_pp0_it5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and ((ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it3) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it4) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it5)))) then 
            grp_fu_842_ce <= ap_const_logic_1;
        else 
            grp_fu_842_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_842_p0 <= tmp_38_1_2_i_reg_1260(8 - 1 downto 0);
    grp_fu_842_p1 <= tmp_35_1_2_i_fu_833_p1(8 - 1 downto 0);

    -- grp_fu_851_ce assign process. --
    grp_fu_851_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_or_cond4_reg_1371_pp0_it3, ap_reg_ppstg_or_cond4_reg_1371_pp0_it4, ap_reg_ppstg_or_cond4_reg_1371_pp0_it5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and ((ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it3) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it4) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it5)))) then 
            grp_fu_851_ce <= ap_const_logic_1;
        else 
            grp_fu_851_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_851_p0 <= tmp_36_2_i_reg_1265(8 - 1 downto 0);
    grp_fu_851_p1 <= tmp_35_2_i_fu_847_p1(8 - 1 downto 0);

    -- grp_fu_856_ce assign process. --
    grp_fu_856_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_or_cond4_reg_1371_pp0_it3, ap_reg_ppstg_or_cond4_reg_1371_pp0_it4, ap_reg_ppstg_or_cond4_reg_1371_pp0_it5)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and ((ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it3) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it4) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it5)))) then 
            grp_fu_856_ce <= ap_const_logic_1;
        else 
            grp_fu_856_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_856_p0 <= tmp_38_2_i_reg_1270(8 - 1 downto 0);
    grp_fu_856_p1 <= tmp_35_2_i_fu_847_p1(8 - 1 downto 0);

    -- grp_fu_872_ce assign process. --
    grp_fu_872_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_or_cond4_reg_1371_pp0_it4, ap_reg_ppstg_or_cond4_reg_1371_pp0_it5, ap_reg_ppstg_or_cond4_reg_1371_pp0_it6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and ((ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it4) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it5) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it6)))) then 
            grp_fu_872_ce <= ap_const_logic_1;
        else 
            grp_fu_872_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_872_p0 <= tmp_36_0_1_i_reg_1215(8 - 1 downto 0);
    grp_fu_872_p1 <= tmp_35_0_1_i_fu_869_p1(8 - 1 downto 0);

    -- grp_fu_877_ce assign process. --
    grp_fu_877_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_or_cond4_reg_1371_pp0_it4, ap_reg_ppstg_or_cond4_reg_1371_pp0_it5, ap_reg_ppstg_or_cond4_reg_1371_pp0_it6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and ((ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it4) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it5) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it6)))) then 
            grp_fu_877_ce <= ap_const_logic_1;
        else 
            grp_fu_877_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_877_p0 <= tmp_38_0_1_i_reg_1220(8 - 1 downto 0);
    grp_fu_877_p1 <= tmp_35_0_1_i_fu_869_p1(8 - 1 downto 0);

    -- grp_fu_885_ce assign process. --
    grp_fu_885_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_or_cond4_reg_1371_pp0_it4, ap_reg_ppstg_or_cond4_reg_1371_pp0_it5, ap_reg_ppstg_or_cond4_reg_1371_pp0_it6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and ((ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it4) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it5) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it6)))) then 
            grp_fu_885_ce <= ap_const_logic_1;
        else 
            grp_fu_885_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_885_p0 <= tmp_36_1_i_reg_1235(8 - 1 downto 0);
    grp_fu_885_p1 <= tmp_35_1_i_fu_882_p1(8 - 1 downto 0);

    -- grp_fu_890_ce assign process. --
    grp_fu_890_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_or_cond4_reg_1371_pp0_it4, ap_reg_ppstg_or_cond4_reg_1371_pp0_it5, ap_reg_ppstg_or_cond4_reg_1371_pp0_it6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and ((ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it4) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it5) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it6)))) then 
            grp_fu_890_ce <= ap_const_logic_1;
        else 
            grp_fu_890_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_890_p0 <= tmp_38_1_i_reg_1240(8 - 1 downto 0);
    grp_fu_890_p1 <= tmp_35_1_i_fu_882_p1(8 - 1 downto 0);

    -- grp_fu_898_ce assign process. --
    grp_fu_898_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_or_cond4_reg_1371_pp0_it4, ap_reg_ppstg_or_cond4_reg_1371_pp0_it5, ap_reg_ppstg_or_cond4_reg_1371_pp0_it6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and ((ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it4) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it5) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it6)))) then 
            grp_fu_898_ce <= ap_const_logic_1;
        else 
            grp_fu_898_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_898_p0 <= tmp_36_1_1_i_reg_1245(8 - 1 downto 0);
    grp_fu_898_p1 <= tmp_35_1_1_i_fu_895_p1(8 - 1 downto 0);

    -- grp_fu_903_ce assign process. --
    grp_fu_903_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_or_cond4_reg_1371_pp0_it4, ap_reg_ppstg_or_cond4_reg_1371_pp0_it5, ap_reg_ppstg_or_cond4_reg_1371_pp0_it6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and ((ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it4) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it5) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it6)))) then 
            grp_fu_903_ce <= ap_const_logic_1;
        else 
            grp_fu_903_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_903_p0 <= tmp_38_1_1_i_reg_1250(8 - 1 downto 0);
    grp_fu_903_p1 <= tmp_35_1_1_i_fu_895_p1(8 - 1 downto 0);

    -- grp_fu_911_ce assign process. --
    grp_fu_911_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_or_cond4_reg_1371_pp0_it4, ap_reg_ppstg_or_cond4_reg_1371_pp0_it5, ap_reg_ppstg_or_cond4_reg_1371_pp0_it6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and ((ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it4) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it5) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it6)))) then 
            grp_fu_911_ce <= ap_const_logic_1;
        else 
            grp_fu_911_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_911_p0 <= tmp_36_2_1_i_reg_1275(8 - 1 downto 0);
    grp_fu_911_p1 <= tmp_35_2_1_i_fu_908_p1(8 - 1 downto 0);

    -- grp_fu_916_ce assign process. --
    grp_fu_916_ce_assign_proc : process(ap_sig_cseq_ST_pp0_stg0_fsm_2, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12, ap_reg_ppstg_or_cond4_reg_1371_pp0_it4, ap_reg_ppstg_or_cond4_reg_1371_pp0_it5, ap_reg_ppstg_or_cond4_reg_1371_pp0_it6)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp0_stg0_fsm_2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))) and ((ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it4) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it5) or (ap_const_lv1_0 = ap_reg_ppstg_or_cond4_reg_1371_pp0_it6)))) then 
            grp_fu_916_ce <= ap_const_logic_1;
        else 
            grp_fu_916_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_916_p0 <= tmp_38_2_1_i_reg_1280(8 - 1 downto 0);
    grp_fu_916_p1 <= tmp_35_2_1_i_fu_908_p1(8 - 1 downto 0);
    icmp1_fu_720_p2 <= "1" when (tmp_39_fu_710_p4 = ap_const_lv11_0) else "0";
    icmp_fu_628_p2 <= "1" when (tmp_37_fu_618_p4 = ap_const_lv11_0) else "0";
    or_cond3_fu_678_p2 <= (tmp_3_reg_1314 and tmp_23_fu_672_p2);
    or_cond4_fu_741_p2 <= (tmp2_fu_736_p2 or tmp1_fu_731_p2);
    or_cond_fu_667_p2 <= (tmp_11_fu_656_p2 and tmp_8_reg_1304);
    p_edge_val_i_fu_1074_p3 <= 
        ap_const_lv8_FF when (tmp_27_i_fu_1064_p2(0) = '1') else 
        ap_const_lv8_0;
    row_1_fu_607_p2 <= std_logic_vector(unsigned(row_reg_392) + unsigned(ap_const_lv12_1));
    row_cast_cast_fu_598_p1 <= std_logic_vector(resize(unsigned(row_reg_392),13));
    rows_cast1_cast_fu_420_p1 <= std_logic_vector(resize(unsigned(rows),12));

    -- src_data_stream_0_V_read assign process. --
    src_data_stream_0_V_read_assign_proc : process(ap_reg_ppstg_tmp_1_reg_1324_pp0_it1, ap_reg_ppstg_or_cond_reg_1353_pp0_it1, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12)
    begin
        if ((not((ap_reg_ppstg_tmp_1_reg_1324_pp0_it1 = ap_const_lv1_0)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_1353_pp0_it1)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            src_data_stream_0_V_read <= ap_const_logic_1;
        else 
            src_data_stream_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    -- src_data_stream_1_V_read assign process. --
    src_data_stream_1_V_read_assign_proc : process(ap_reg_ppstg_tmp_1_reg_1324_pp0_it1, ap_reg_ppstg_or_cond_reg_1353_pp0_it1, ap_sig_bdd_96, ap_reg_ppiten_pp0_it2, ap_sig_bdd_127, ap_reg_ppiten_pp0_it12)
    begin
        if ((not((ap_reg_ppstg_tmp_1_reg_1324_pp0_it1 = ap_const_lv1_0)) and not((ap_const_lv1_0 = ap_reg_ppstg_or_cond_reg_1353_pp0_it1)) and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2) and not(((ap_sig_bdd_96 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it2)) or (ap_sig_bdd_127 and (ap_const_logic_1 = ap_reg_ppiten_pp0_it12)))))) then 
            src_data_stream_1_V_read <= ap_const_logic_1;
        else 
            src_data_stream_1_V_read <= ap_const_logic_0;
        end if; 
    end process;

    tmp10_fu_951_p2 <= std_logic_vector(signed(tmp_39_2_i_reg_1482) + signed(grp_fu_916_p2));
    tmp11_fu_956_p2 <= std_logic_vector(signed(tmp_39_1_2_i_reg_1472) + signed(grp_fu_903_p2));
    tmp12_fu_985_p2 <= std_logic_vector(signed(tmp11_reg_1522) + signed(tmp10_reg_1517));
    tmp13_fu_961_p2 <= std_logic_vector(signed(tmp_39_0_i_reg_1462) + signed(grp_fu_877_p2));
    tmp14_fu_926_p2 <= std_logic_vector(signed(grp_fu_828_p2) + signed(tmp_37_2_2_i_reg_1451));
    tmp15_fu_966_p2 <= std_logic_vector(signed(tmp14_reg_1492) + signed(grp_fu_890_p2));
    tmp16_fu_989_p2 <= std_logic_vector(signed(tmp15_reg_1532) + signed(tmp13_reg_1527));
    tmp1_fu_731_p2 <= (icmp_reg_1309 or icmp1_fu_720_p2);
    tmp2_fu_736_p2 <= (tmp_4_reg_1319 or tmp_19_fu_726_p2);
    tmp3_fu_931_p2 <= std_logic_vector(signed(tmp_37_2_i_reg_1477) + signed(grp_fu_911_p2));
    tmp4_fu_936_p2 <= std_logic_vector(signed(tmp_37_1_2_i_reg_1467) + signed(grp_fu_898_p2));
    tmp5_fu_971_p2 <= std_logic_vector(signed(tmp4_reg_1502) + signed(tmp3_reg_1497));
    tmp6_fu_941_p2 <= std_logic_vector(signed(tmp_37_0_i_reg_1457) + signed(grp_fu_872_p2));
    tmp7_fu_921_p2 <= std_logic_vector(signed(grp_fu_823_p2) + signed(tmp_37_2_2_i_reg_1451));
    tmp8_fu_946_p2 <= std_logic_vector(signed(tmp7_reg_1487) + signed(grp_fu_885_p2));
    tmp9_fu_975_p2 <= std_logic_vector(signed(tmp8_reg_1512) + signed(tmp6_reg_1507));
    tmp_11_fu_656_p2 <= "1" when (unsigned(col_assign_phi_fu_407_p4) < unsigned(cols_cast2_cast_reg_1175)) else "0";
    tmp_12_fu_661_p1 <= std_logic_vector(resize(unsigned(col_assign_phi_fu_407_p4),64));
    tmp_13_fu_464_p1 <= C_XR0C2(8 - 1 downto 0);
    tmp_15_fu_692_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_col_assign_reg_403_pp0_it1),64));
    tmp_16_fu_468_p1 <= C_XR1C0(8 - 1 downto 0);
    tmp_17_fu_705_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_col_assign_reg_403_pp0_it1),64));
    tmp_17_i_fu_999_p2 <= "1" when (signed(x_weight_2_2_2_i_reg_1537) > signed(ap_const_lv16_0)) else "0";
    tmp_18_fu_472_p1 <= C_XR1C1(8 - 1 downto 0);
    tmp_18_i_fu_1004_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(x_weight_2_2_2_i_reg_1537));
    tmp_19_fu_726_p2 <= "1" when (signed(col_assign_cast_cast_fu_688_p1) > signed(tmp_6_cast_reg_1200)) else "0";
    tmp_19_i_fu_1009_p3 <= 
        x_weight_2_2_2_i_reg_1537 when (tmp_17_i_fu_999_p2(0) = '1') else 
        tmp_18_i_fu_1004_p2;
    tmp_1_fu_645_p2 <= "1" when (unsigned(col_assign_phi_fu_407_p4) < unsigned(tmp_s_reg_1190)) else "0";
    tmp_20_fu_476_p1 <= C_XR1C2(8 - 1 downto 0);
    tmp_20_i_fu_1016_p2 <= "1" when (signed(y_weight_2_2_2_i_reg_1544) > signed(ap_const_lv16_0)) else "0";
    tmp_21_fu_1082_p2 <= (tmp_27_i_fu_1064_p2 or tmp_28_i_fu_1069_p2);
    tmp_21_i_fu_1021_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(y_weight_2_2_2_i_reg_1544));
    tmp_22_i_fu_1026_p3 <= 
        y_weight_2_2_2_i_reg_1544 when (tmp_20_i_fu_1016_p2(0) = '1') else 
        tmp_21_i_fu_1021_p2;
    tmp_23_fu_672_p2 <= "0" when (col_assign_phi_fu_407_p4 = ap_const_lv12_0) else "1";
    tmp_23_i_fu_1043_p2 <= "1" when (signed(edge_weight_reg_1551) < signed(ap_const_lv16_FF)) else "0";
    tmp_26_fu_480_p1 <= C_XR2C0(8 - 1 downto 0);
    tmp_26_i_fu_1061_p1 <= std_logic_vector(resize(unsigned(edge_val1_i_reg_1561),32));
    tmp_27_fu_484_p1 <= C_XR2C1(8 - 1 downto 0);
    tmp_27_i_fu_1064_p2 <= "1" when (signed(tmp_26_i_fu_1061_p1) > signed(c_high_thresh)) else "0";
    tmp_28_fu_488_p1 <= C_XR2C2(8 - 1 downto 0);
    tmp_28_i_fu_1069_p2 <= "1" when (signed(tmp_26_i_fu_1061_p1) < signed(c_low_thresh)) else "0";
    tmp_29_fu_492_p1 <= C_YR0C0(8 - 1 downto 0);
    tmp_2_fu_456_p1 <= C_XR0C0(8 - 1 downto 0);
    tmp_30_fu_496_p1 <= C_YR0C1(8 - 1 downto 0);
    tmp_31_fu_500_p1 <= C_YR0C2(8 - 1 downto 0);
    tmp_32_fu_504_p1 <= C_YR1C0(8 - 1 downto 0);
    tmp_33_fu_508_p1 <= C_YR1C1(8 - 1 downto 0);
    tmp_33_i_fu_592_p2 <= "1" when (c_invert = ap_const_lv32_1) else "0";
    tmp_34_fu_512_p1 <= C_YR1C2(8 - 1 downto 0);
    tmp_35_0_1_i_fu_869_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_buff_C_val_0_1_reg_1376_pp0_it4),16));
    tmp_35_0_2_i_fu_819_p1 <= std_logic_vector(resize(unsigned(buff_C_val_0_1_s_fu_138),16));
    tmp_35_0_i_fu_805_p1 <= std_logic_vector(resize(unsigned(buff_C_val_0_0_s_fu_134),16));
    tmp_35_1_1_i_fu_895_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_buff_C_val_1_1_reg_1382_pp0_it4),16));
    tmp_35_1_2_i_fu_833_p1 <= std_logic_vector(resize(unsigned(buff_C_val_1_1_s_fu_150),16));
    tmp_35_1_i_fu_882_p1 <= std_logic_vector(resize(unsigned(buff_C_val_1_0_load_reg_1398),16));
    tmp_35_2_1_i_fu_908_p1 <= std_logic_vector(resize(unsigned(ap_reg_ppstg_buff_C_val_2_1_reg_1388_pp0_it4),16));
    tmp_35_2_i_fu_847_p1 <= std_logic_vector(resize(unsigned(buff_C_val_2_0_s_fu_158),16));
    tmp_35_fu_516_p1 <= C_YR2C0(8 - 1 downto 0);
        tmp_36_0_1_i_fu_532_p1 <= std_logic_vector(resize(signed(tmp_9_fu_460_p1),16));

        tmp_36_0_2_i_fu_540_p1 <= std_logic_vector(resize(signed(tmp_13_fu_464_p1),16));

        tmp_36_0_i_fu_524_p1 <= std_logic_vector(resize(signed(tmp_2_fu_456_p1),16));

        tmp_36_1_1_i_fu_556_p1 <= std_logic_vector(resize(signed(tmp_18_fu_472_p1),16));

        tmp_36_1_2_i_fu_564_p1 <= std_logic_vector(resize(signed(tmp_20_fu_476_p1),16));

        tmp_36_1_i_fu_548_p1 <= std_logic_vector(resize(signed(tmp_16_fu_468_p1),16));

        tmp_36_2_1_i_fu_580_p1 <= std_logic_vector(resize(signed(tmp_27_fu_484_p1),16));

        tmp_36_2_2_i_fu_588_p1 <= std_logic_vector(resize(signed(tmp_28_fu_488_p1),16));

        tmp_36_2_i_fu_572_p1 <= std_logic_vector(resize(signed(tmp_26_fu_480_p1),16));

    tmp_36_fu_520_p1 <= C_YR2C1(8 - 1 downto 0);
    tmp_37_fu_618_p4 <= row_reg_392(11 downto 1);
        tmp_38_0_1_i_fu_536_p1 <= std_logic_vector(resize(signed(tmp_30_fu_496_p1),16));

        tmp_38_0_2_i_fu_544_p1 <= std_logic_vector(resize(signed(tmp_31_fu_500_p1),16));

        tmp_38_0_i_fu_528_p1 <= std_logic_vector(resize(signed(tmp_29_fu_492_p1),16));

        tmp_38_1_1_i_fu_560_p1 <= std_logic_vector(resize(signed(tmp_33_fu_508_p1),16));

        tmp_38_1_2_i_fu_568_p1 <= std_logic_vector(resize(signed(tmp_34_fu_512_p1),16));

        tmp_38_1_i_fu_552_p1 <= std_logic_vector(resize(signed(tmp_32_fu_504_p1),16));

        tmp_38_2_1_i_fu_584_p1 <= std_logic_vector(resize(signed(tmp_36_fu_520_p1),16));

        tmp_38_2_i_fu_576_p1 <= std_logic_vector(resize(signed(tmp_35_fu_516_p1),16));

    tmp_39_fu_710_p4 <= ap_reg_ppstg_col_assign_reg_403_pp0_it1(11 downto 1);
    tmp_3_fu_634_p2 <= "0" when (row_reg_392 = ap_const_lv12_0) else "1";
    tmp_40_fu_1039_p1 <= edge_weight_fu_1033_p2(8 - 1 downto 0);
    tmp_4_fu_640_p2 <= "1" when (signed(row_cast_cast_fu_598_p1) > signed(tmp_5_cast_reg_1195)) else "0";
        tmp_5_cast_fu_442_p1 <= std_logic_vector(resize(signed(tmp_5_fu_436_p2),13));

    tmp_5_fu_436_p2 <= std_logic_vector(unsigned(rows_cast1_cast_fu_420_p1) + unsigned(ap_const_lv12_FFF));
        tmp_6_cast_fu_452_p1 <= std_logic_vector(resize(signed(tmp_6_fu_446_p2),13));

    tmp_6_fu_446_p2 <= std_logic_vector(unsigned(cols_cast2_cast_fu_416_p1) + unsigned(ap_const_lv12_FFF));
    tmp_7_fu_602_p2 <= "1" when (unsigned(row_reg_392) < unsigned(tmp_reg_1185)) else "0";
    tmp_8_fu_613_p2 <= "1" when (unsigned(row_reg_392) < unsigned(rows_cast1_cast_reg_1180)) else "0";
    tmp_9_fu_460_p1 <= C_XR0C1(8 - 1 downto 0);
    tmp_fu_424_p2 <= std_logic_vector(unsigned(rows_cast1_cast_fu_420_p1) + unsigned(ap_const_lv12_1));
    tmp_s_fu_430_p2 <= std_logic_vector(unsigned(cols_cast2_cast_fu_416_p1) + unsigned(ap_const_lv12_1));
    x_weight_2_2_2_i_fu_979_p2 <= std_logic_vector(signed(tmp9_fu_975_p2) + signed(tmp5_fu_971_p2));
    y_weight_2_2_2_i_fu_993_p2 <= std_logic_vector(signed(tmp16_fu_989_p2) + signed(tmp12_fu_985_p2));
end behav;
