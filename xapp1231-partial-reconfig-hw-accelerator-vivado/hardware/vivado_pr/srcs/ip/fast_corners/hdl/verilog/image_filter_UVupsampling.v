// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module image_filter_UVupsampling (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        yuv422_rows_V_read,
        yuv422_cols_V_read,
        yuv422_data_stream_0_V_dout,
        yuv422_data_stream_0_V_empty_n,
        yuv422_data_stream_0_V_read,
        yuv422_data_stream_1_V_dout,
        yuv422_data_stream_1_V_empty_n,
        yuv422_data_stream_1_V_read,
        yuv444_data_stream_0_V_din,
        yuv444_data_stream_0_V_full_n,
        yuv444_data_stream_0_V_write,
        yuv444_data_stream_1_V_din,
        yuv444_data_stream_1_V_full_n,
        yuv444_data_stream_1_V_write,
        yuv444_data_stream_2_V_din,
        yuv444_data_stream_2_V_full_n,
        yuv444_data_stream_2_V_write
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 4'b1;
parameter    ap_ST_st2_fsm_1 = 4'b10;
parameter    ap_ST_pp0_stg0_fsm_2 = 4'b100;
parameter    ap_ST_pp0_stg1_fsm_3 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv12_0 = 12'b000000000000;
parameter    ap_const_lv12_1 = 12'b1;
parameter    ap_const_lv12_2 = 12'b10;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [11:0] yuv422_rows_V_read;
input  [11:0] yuv422_cols_V_read;
input  [7:0] yuv422_data_stream_0_V_dout;
input   yuv422_data_stream_0_V_empty_n;
output   yuv422_data_stream_0_V_read;
input  [7:0] yuv422_data_stream_1_V_dout;
input   yuv422_data_stream_1_V_empty_n;
output   yuv422_data_stream_1_V_read;
output  [7:0] yuv444_data_stream_0_V_din;
input   yuv444_data_stream_0_V_full_n;
output   yuv444_data_stream_0_V_write;
output  [7:0] yuv444_data_stream_1_V_din;
input   yuv444_data_stream_1_V_full_n;
output   yuv444_data_stream_1_V_write;
output  [7:0] yuv444_data_stream_2_V_din;
input   yuv444_data_stream_2_V_full_n;
output   yuv444_data_stream_2_V_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg yuv422_data_stream_0_V_read;
reg yuv422_data_stream_1_V_read;
reg yuv444_data_stream_0_V_write;
reg yuv444_data_stream_1_V_write;
reg[7:0] yuv444_data_stream_2_V_din;
reg yuv444_data_stream_2_V_write;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm = 4'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_23;
reg   [11:0] p_1_reg_127;
reg   [7:0] reg_139;
reg    ap_sig_cseq_ST_pp0_stg1_fsm_3;
reg    ap_sig_bdd_61;
reg   [0:0] tmp_reg_185;
reg    ap_sig_bdd_72;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg   [0:0] ap_reg_ppstg_tmp_reg_185_pp0_it1;
reg    ap_sig_bdd_87;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_2;
reg    ap_sig_bdd_100;
reg    ap_sig_bdd_108;
reg    ap_sig_bdd_119;
wire   [0:0] exitcond_fu_144_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_131;
wire   [11:0] i_V_fu_149_p2;
reg   [11:0] i_V_reg_180;
wire   [0:0] tmp_fu_155_p2;
wire   [11:0] j_V_fu_160_p2;
reg   [11:0] j_V_reg_189;
reg   [7:0] tmp_11_reg_194;
reg   [7:0] tmp_13_reg_199;
reg   [11:0] p_s_reg_116;
reg   [11:0] p_1_phi_fu_131_p4;
reg   [3:0] ap_NS_fsm;
reg    ap_sig_bdd_113;
reg    ap_sig_bdd_222;




/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond_fu_144_p2))) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_108) & (ap_const_lv1_0 == tmp_fu_155_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond_fu_144_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & ~(tmp_reg_185 == ap_const_lv1_0) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond_fu_144_p2)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & (tmp_reg_185 == ap_const_lv1_0) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond_fu_144_p2))) begin
        p_1_reg_127 <= ap_const_lv12_0;
    end else if ((~(tmp_reg_185 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_108))) begin
        p_1_reg_127 <= j_V_reg_189;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_108) & (ap_const_lv1_0 == tmp_fu_155_p2))) begin
        p_s_reg_116 <= i_V_reg_180;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_119)) begin
        p_s_reg_116 <= ap_const_lv12_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_108))) begin
        ap_reg_ppstg_tmp_reg_185_pp0_it1 <= tmp_reg_185;
        tmp_reg_185 <= tmp_fu_155_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        i_V_reg_180 <= i_V_fu_149_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_108) & ~(ap_const_lv1_0 == tmp_fu_155_p2))) begin
        j_V_reg_189 <= j_V_fu_160_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & ~(tmp_reg_185 == ap_const_lv1_0) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) | (~(tmp_reg_185 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_108)))) begin
        reg_139 <= yuv422_data_stream_0_V_dout;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & ~(tmp_reg_185 == ap_const_lv1_0) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))))) begin
        tmp_11_reg_194 <= yuv422_data_stream_1_V_dout;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~(tmp_reg_185 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_108))) begin
        tmp_13_reg_199 <= yuv422_data_stream_1_V_dout;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or exitcond_fu_144_p2 or ap_sig_cseq_ST_st2_fsm_1)
begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond_fu_144_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (exitcond_fu_144_p2 or ap_sig_cseq_ST_st2_fsm_1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond_fu_144_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_2 assign process. ///
always @ (ap_sig_bdd_100)
begin
    if (ap_sig_bdd_100) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg1_fsm_3 assign process. ///
always @ (ap_sig_bdd_61)
begin
    if (ap_sig_bdd_61) begin
        ap_sig_cseq_ST_pp0_stg1_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg1_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_23)
begin
    if (ap_sig_bdd_23) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_131)
begin
    if (ap_sig_bdd_131) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// p_1_phi_fu_131_p4 assign process. ///
always @ (p_1_reg_127 or tmp_reg_185 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or j_V_reg_189)
begin
    if ((~(tmp_reg_185 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2))) begin
        p_1_phi_fu_131_p4 = j_V_reg_189;
    end else begin
        p_1_phi_fu_131_p4 = p_1_reg_127;
    end
end

/// yuv422_data_stream_0_V_read assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg1_fsm_3 or tmp_reg_185 or ap_sig_bdd_72 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_87 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_108)
begin
    if (((~(tmp_reg_185 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_108)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & ~(tmp_reg_185 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))))) begin
        yuv422_data_stream_0_V_read = ap_const_logic_1;
    end else begin
        yuv422_data_stream_0_V_read = ap_const_logic_0;
    end
end

/// yuv422_data_stream_1_V_read assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg1_fsm_3 or tmp_reg_185 or ap_sig_bdd_72 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_87 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_108)
begin
    if (((~(tmp_reg_185 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_108)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & ~(tmp_reg_185 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))))) begin
        yuv422_data_stream_1_V_read = ap_const_logic_1;
    end else begin
        yuv422_data_stream_1_V_read = ap_const_logic_0;
    end
end

/// yuv444_data_stream_0_V_write assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg1_fsm_3 or tmp_reg_185 or ap_sig_bdd_72 or ap_reg_ppiten_pp0_it0 or ap_reg_ppstg_tmp_reg_185_pp0_it1 or ap_sig_bdd_87 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_108)
begin
    if (((~(tmp_reg_185 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_108)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_185_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))))) begin
        yuv444_data_stream_0_V_write = ap_const_logic_1;
    end else begin
        yuv444_data_stream_0_V_write = ap_const_logic_0;
    end
end

/// yuv444_data_stream_1_V_write assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg1_fsm_3 or tmp_reg_185 or ap_sig_bdd_72 or ap_reg_ppiten_pp0_it0 or ap_reg_ppstg_tmp_reg_185_pp0_it1 or ap_sig_bdd_87 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_108)
begin
    if (((~(tmp_reg_185 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_108)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_185_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))))) begin
        yuv444_data_stream_1_V_write = ap_const_logic_1;
    end else begin
        yuv444_data_stream_1_V_write = ap_const_logic_0;
    end
end

/// yuv444_data_stream_2_V_din assign process. ///
always @ (yuv422_data_stream_1_V_dout or ap_reg_ppiten_pp0_it1 or tmp_13_reg_199 or ap_sig_bdd_113 or ap_sig_bdd_222)
begin
    if ((ap_const_logic_1 == ap_reg_ppiten_pp0_it1)) begin
        if (ap_sig_bdd_222) begin
            yuv444_data_stream_2_V_din = tmp_13_reg_199;
        end else if (ap_sig_bdd_113) begin
            yuv444_data_stream_2_V_din = yuv422_data_stream_1_V_dout;
        end else begin
            yuv444_data_stream_2_V_din = 'bx;
        end
    end else begin
        yuv444_data_stream_2_V_din = 'bx;
    end
end

/// yuv444_data_stream_2_V_write assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg1_fsm_3 or tmp_reg_185 or ap_sig_bdd_72 or ap_reg_ppiten_pp0_it0 or ap_reg_ppstg_tmp_reg_185_pp0_it1 or ap_sig_bdd_87 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_108)
begin
    if (((~(tmp_reg_185 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_108)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_185_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))))) begin
        yuv444_data_stream_2_V_write = ap_const_logic_1;
    end else begin
        yuv444_data_stream_2_V_write = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or ap_sig_cseq_ST_pp0_stg1_fsm_3 or ap_sig_bdd_72 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_87 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_108 or ap_sig_bdd_119 or exitcond_fu_144_p2 or tmp_fu_155_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_119) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_lv1_0 == exitcond_fu_144_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_pp0_stg0_fsm_2 : 
        begin
            if ((~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_108) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_108) & (ap_const_lv1_0 == tmp_fu_155_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1)))) begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_3;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_108) & (ap_const_lv1_0 == tmp_fu_155_p2) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_pp0_stg1_fsm_3 : 
        begin
            if ((~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & ~((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it0)))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it0))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg1_fsm_3;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_100 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_100 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_108 assign process. ///
always @ (yuv422_data_stream_0_V_empty_n or yuv422_data_stream_1_V_empty_n or yuv444_data_stream_0_V_full_n or yuv444_data_stream_1_V_full_n or yuv444_data_stream_2_V_full_n or tmp_reg_185)
begin
    ap_sig_bdd_108 = (((yuv422_data_stream_0_V_empty_n == ap_const_logic_0) & ~(tmp_reg_185 == ap_const_lv1_0)) | (~(tmp_reg_185 == ap_const_lv1_0) & (yuv422_data_stream_1_V_empty_n == ap_const_logic_0)) | (~(tmp_reg_185 == ap_const_lv1_0) & (yuv444_data_stream_0_V_full_n == ap_const_logic_0)) | (~(tmp_reg_185 == ap_const_lv1_0) & (yuv444_data_stream_1_V_full_n == ap_const_logic_0)) | (~(tmp_reg_185 == ap_const_lv1_0) & (yuv444_data_stream_2_V_full_n == ap_const_logic_0)));
end

/// ap_sig_bdd_113 assign process. ///
always @ (tmp_reg_185 or ap_reg_ppiten_pp0_it1 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_sig_bdd_108)
begin
    ap_sig_bdd_113 = (~(tmp_reg_185 == ap_const_lv1_0) & (ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ap_sig_bdd_108));
end

/// ap_sig_bdd_119 assign process. ///
always @ (ap_start or ap_done_reg)
begin
    ap_sig_bdd_119 = ((ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

/// ap_sig_bdd_131 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_131 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_222 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg1_fsm_3 or ap_sig_bdd_72 or ap_reg_ppiten_pp0_it0 or ap_reg_ppstg_tmp_reg_185_pp0_it1 or ap_sig_bdd_87 or ap_reg_ppiten_pp0_it1)
begin
    ap_sig_bdd_222 = ((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg1_fsm_3) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_185_pp0_it1) & ~((ap_sig_bdd_72 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0)) | (ap_sig_bdd_87 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1))));
end

/// ap_sig_bdd_23 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_23 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_61 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_61 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end

/// ap_sig_bdd_72 assign process. ///
always @ (yuv422_data_stream_0_V_empty_n or yuv422_data_stream_1_V_empty_n or tmp_reg_185)
begin
    ap_sig_bdd_72 = (((yuv422_data_stream_0_V_empty_n == ap_const_logic_0) & ~(tmp_reg_185 == ap_const_lv1_0)) | (~(tmp_reg_185 == ap_const_lv1_0) & (yuv422_data_stream_1_V_empty_n == ap_const_logic_0)));
end

/// ap_sig_bdd_87 assign process. ///
always @ (yuv444_data_stream_0_V_full_n or yuv444_data_stream_1_V_full_n or yuv444_data_stream_2_V_full_n or ap_reg_ppstg_tmp_reg_185_pp0_it1)
begin
    ap_sig_bdd_87 = (((yuv444_data_stream_0_V_full_n == ap_const_logic_0) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_185_pp0_it1)) | (~(ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_185_pp0_it1) & (yuv444_data_stream_1_V_full_n == ap_const_logic_0)) | (~(ap_const_lv1_0 == ap_reg_ppstg_tmp_reg_185_pp0_it1) & (yuv444_data_stream_2_V_full_n == ap_const_logic_0)));
end
assign exitcond_fu_144_p2 = (p_s_reg_116 == yuv422_rows_V_read? 1'b1: 1'b0);
assign i_V_fu_149_p2 = (p_s_reg_116 + ap_const_lv12_1);
assign j_V_fu_160_p2 = (p_1_phi_fu_131_p4 + ap_const_lv12_2);
assign tmp_fu_155_p2 = (p_1_phi_fu_131_p4 < yuv422_cols_V_read? 1'b1: 1'b0);
assign yuv444_data_stream_0_V_din = reg_139;
assign yuv444_data_stream_1_V_din = tmp_11_reg_194;


endmodule //image_filter_UVupsampling

