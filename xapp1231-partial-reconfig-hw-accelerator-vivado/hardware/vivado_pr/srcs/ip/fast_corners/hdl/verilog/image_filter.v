// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="image_filter,hls_ip_2014_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=6.666670,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=6.112860,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=59,HLS_SYN_DSP=0,HLS_SYN_FF=7970,HLS_SYN_LUT=13921}" *)

module image_filter (
        s_axi_CONTROL_BUS_AWVALID,
        s_axi_CONTROL_BUS_AWREADY,
        s_axi_CONTROL_BUS_AWADDR,
        s_axi_CONTROL_BUS_WVALID,
        s_axi_CONTROL_BUS_WREADY,
        s_axi_CONTROL_BUS_WDATA,
        s_axi_CONTROL_BUS_WSTRB,
        s_axi_CONTROL_BUS_ARVALID,
        s_axi_CONTROL_BUS_ARREADY,
        s_axi_CONTROL_BUS_ARADDR,
        s_axi_CONTROL_BUS_RVALID,
        s_axi_CONTROL_BUS_RREADY,
        s_axi_CONTROL_BUS_RDATA,
        s_axi_CONTROL_BUS_RRESP,
        s_axi_CONTROL_BUS_BVALID,
        s_axi_CONTROL_BUS_BREADY,
        s_axi_CONTROL_BUS_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        video_in_TDATA,
        video_in_TKEEP,
        video_in_TSTRB,
        video_in_TUSER,
        video_in_TLAST,
        video_in_TID,
        video_in_TDEST,
        video_out_TDATA,
        video_out_TKEEP,
        video_out_TSTRB,
        video_out_TUSER,
        video_out_TLAST,
        video_out_TID,
        video_out_TDEST,
        video_in_TVALID,
        video_in_TREADY,
        video_out_TVALID,
        video_out_TREADY
);

parameter    C_S_AXI_CONTROL_BUS_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_CONTROL_BUS_ADDR_WIDTH = 6;
parameter    C_DATA_WIDTH = 32;
parameter    C_ADDR_WIDTH = 32;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv2_0 = 2'b00;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_true = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    C_S_AXI_CONTROL_BUS_WSTRB_WIDTH = (C_S_AXI_CONTROL_BUS_DATA_WIDTH / ap_const_int64_8);
parameter    C_WSTRB_WIDTH = (C_DATA_WIDTH / ap_const_int64_8);

input   s_axi_CONTROL_BUS_AWVALID;
output   s_axi_CONTROL_BUS_AWREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CONTROL_BUS_AWADDR;
input   s_axi_CONTROL_BUS_WVALID;
output   s_axi_CONTROL_BUS_WREADY;
input  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1 : 0] s_axi_CONTROL_BUS_WDATA;
input  [C_S_AXI_CONTROL_BUS_WSTRB_WIDTH - 1 : 0] s_axi_CONTROL_BUS_WSTRB;
input   s_axi_CONTROL_BUS_ARVALID;
output   s_axi_CONTROL_BUS_ARREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CONTROL_BUS_ARADDR;
output   s_axi_CONTROL_BUS_RVALID;
input   s_axi_CONTROL_BUS_RREADY;
output  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1 : 0] s_axi_CONTROL_BUS_RDATA;
output  [1:0] s_axi_CONTROL_BUS_RRESP;
output   s_axi_CONTROL_BUS_BVALID;
input   s_axi_CONTROL_BUS_BREADY;
output  [1:0] s_axi_CONTROL_BUS_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [15:0] video_in_TDATA;
input  [1:0] video_in_TKEEP;
input  [1:0] video_in_TSTRB;
input  [0:0] video_in_TUSER;
input  [0:0] video_in_TLAST;
input  [0:0] video_in_TID;
input  [0:0] video_in_TDEST;
output  [15:0] video_out_TDATA;
output  [1:0] video_out_TKEEP;
output  [1:0] video_out_TSTRB;
output  [0:0] video_out_TUSER;
output  [0:0] video_out_TLAST;
output  [0:0] video_out_TID;
output  [0:0] video_out_TDEST;
input   video_in_TVALID;
output   video_in_TREADY;
output   video_out_TVALID;
input   video_out_TREADY;

reg    ap_rst_n_inv;
wire    image_filter_CONTROL_BUS_s_axi_U_ap_dummy_ce;
wire   [31:0] rows;
wire   [31:0] cols;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
reg    ap_idle;
wire    image_filter_Block_proc_U0_ap_start;
wire    image_filter_Block_proc_U0_ap_done;
reg    image_filter_Block_proc_U0_ap_continue;
wire    image_filter_Block_proc_U0_ap_idle;
wire    image_filter_Block_proc_U0_ap_ready;
wire   [31:0] image_filter_Block_proc_U0_rows;
wire   [31:0] image_filter_Block_proc_U0_cols;
wire   [11:0] image_filter_Block_proc_U0_ap_return_0;
wire   [11:0] image_filter_Block_proc_U0_ap_return_1;
wire   [11:0] image_filter_Block_proc_U0_ap_return_2;
wire   [11:0] image_filter_Block_proc_U0_ap_return_3;
wire   [11:0] image_filter_Block_proc_U0_ap_return_4;
wire   [11:0] image_filter_Block_proc_U0_ap_return_5;
wire   [11:0] image_filter_Block_proc_U0_ap_return_6;
wire   [11:0] image_filter_Block_proc_U0_ap_return_7;
wire   [11:0] image_filter_Block_proc_U0_ap_return_8;
wire   [11:0] image_filter_Block_proc_U0_ap_return_9;
wire   [11:0] image_filter_Block_proc_U0_ap_return_10;
wire   [11:0] image_filter_Block_proc_U0_ap_return_11;
wire   [11:0] image_filter_Block_proc_U0_ap_return_12;
wire   [11:0] image_filter_Block_proc_U0_ap_return_13;
wire   [11:0] image_filter_Block_proc_U0_ap_return_14;
wire   [11:0] image_filter_Block_proc_U0_ap_return_15;
wire   [11:0] image_filter_Block_proc_U0_ap_return_16;
wire   [11:0] image_filter_Block_proc_U0_ap_return_17;
wire   [11:0] image_filter_Block_proc_U0_ap_return_18;
wire   [11:0] image_filter_Block_proc_U0_ap_return_19;
wire   [11:0] image_filter_Block_proc_U0_ap_return_20;
wire   [11:0] image_filter_Block_proc_U0_ap_return_21;
wire   [11:0] image_filter_Block_proc_U0_ap_return_22;
wire   [11:0] image_filter_Block_proc_U0_ap_return_23;
wire   [11:0] image_filter_Block_proc_U0_ap_return_24;
wire   [11:0] image_filter_Block_proc_U0_ap_return_25;
wire   [11:0] image_filter_Block_proc_U0_ap_return_26;
wire   [11:0] image_filter_Block_proc_U0_ap_return_27;
wire   [11:0] image_filter_Block_proc_U0_ap_return_28;
wire   [11:0] image_filter_Block_proc_U0_ap_return_29;
wire   [11:0] image_filter_Block_proc_U0_ap_return_30;
wire   [11:0] image_filter_Block_proc_U0_ap_return_31;
reg    ap_chn_write_image_filter_Block_proc_U0_img_0_cols_V_channel1;
wire    img_0_cols_V_channel1_full_n;
reg    ap_reg_ready_img_0_cols_V_channel1_full_n = 1'b0;
reg    ap_sig_ready_img_0_cols_V_channel1_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_0_rows_V_channel;
wire    img_0_rows_V_channel_full_n;
reg    ap_reg_ready_img_0_rows_V_channel_full_n = 1'b0;
reg    ap_sig_ready_img_0_rows_V_channel_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_0_rows_V_channel1;
wire    img_0_rows_V_channel1_full_n;
reg    ap_reg_ready_img_0_rows_V_channel1_full_n = 1'b0;
reg    ap_sig_ready_img_0_rows_V_channel1_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_0_cols_V_channel;
wire    img_0_cols_V_channel_full_n;
reg    ap_reg_ready_img_0_cols_V_channel_full_n = 1'b0;
reg    ap_sig_ready_img_0_cols_V_channel_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_2_UV_rows_V_channel;
wire    img_2_UV_rows_V_channel_full_n;
reg    ap_reg_ready_img_2_UV_rows_V_channel_full_n = 1'b0;
reg    ap_sig_ready_img_2_UV_rows_V_channel_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_1_rows_V;
wire    img_1_rows_V_full_n;
reg    ap_reg_ready_img_1_rows_V_full_n = 1'b0;
reg    ap_sig_ready_img_1_rows_V_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_1_rows_V_channel;
wire    img_1_rows_V_channel_full_n;
reg    ap_reg_ready_img_1_rows_V_channel_full_n = 1'b0;
reg    ap_sig_ready_img_1_rows_V_channel_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_1_cols_V;
wire    img_1_cols_V_full_n;
reg    ap_reg_ready_img_1_cols_V_full_n = 1'b0;
reg    ap_sig_ready_img_1_cols_V_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_1_cols_V_channel;
wire    img_1_cols_V_channel_full_n;
reg    ap_reg_ready_img_1_cols_V_channel_full_n = 1'b0;
reg    ap_sig_ready_img_1_cols_V_channel_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_1_rows_V_31;
wire    img_1_rows_V_31_full_n;
reg    ap_reg_ready_img_1_rows_V_31_full_n = 1'b0;
reg    ap_sig_ready_img_1_rows_V_31_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_1_cols_V_32;
wire    img_1_cols_V_32_full_n;
reg    ap_reg_ready_img_1_cols_V_32_full_n = 1'b0;
reg    ap_sig_ready_img_1_cols_V_32_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_2_rows_V;
wire    img_2_rows_V_full_n;
reg    ap_reg_ready_img_2_rows_V_full_n = 1'b0;
reg    ap_sig_ready_img_2_rows_V_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_2_rows_V_channel;
wire    img_2_rows_V_channel_full_n;
reg    ap_reg_ready_img_2_rows_V_channel_full_n = 1'b0;
reg    ap_sig_ready_img_2_rows_V_channel_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_2_cols_V;
wire    img_2_cols_V_full_n;
reg    ap_reg_ready_img_2_cols_V_full_n = 1'b0;
reg    ap_sig_ready_img_2_cols_V_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_2_cols_V_channel;
wire    img_2_cols_V_channel_full_n;
reg    ap_reg_ready_img_2_cols_V_channel_full_n = 1'b0;
reg    ap_sig_ready_img_2_cols_V_channel_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_2_Y_rows_V;
wire    img_2_Y_rows_V_full_n;
reg    ap_reg_ready_img_2_Y_rows_V_full_n = 1'b0;
reg    ap_sig_ready_img_2_Y_rows_V_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_2_Y_rows_V_channel;
wire    img_2_Y_rows_V_channel_full_n;
reg    ap_reg_ready_img_2_Y_rows_V_channel_full_n = 1'b0;
reg    ap_sig_ready_img_2_Y_rows_V_channel_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_2_Y_cols_V;
wire    img_2_Y_cols_V_full_n;
reg    ap_reg_ready_img_2_Y_cols_V_full_n = 1'b0;
reg    ap_sig_ready_img_2_Y_cols_V_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_2_Y_cols_V_channel;
wire    img_2_Y_cols_V_channel_full_n;
reg    ap_reg_ready_img_2_Y_cols_V_channel_full_n = 1'b0;
reg    ap_sig_ready_img_2_Y_cols_V_channel_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_2_UV_rows_V;
wire    img_2_UV_rows_V_full_n;
reg    ap_reg_ready_img_2_UV_rows_V_full_n = 1'b0;
reg    ap_sig_ready_img_2_UV_rows_V_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_2_UV_cols_V;
wire    img_2_UV_cols_V_full_n;
reg    ap_reg_ready_img_2_UV_cols_V_full_n = 1'b0;
reg    ap_sig_ready_img_2_UV_cols_V_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_2_UV_cols_V_channel;
wire    img_2_UV_cols_V_channel_full_n;
reg    ap_reg_ready_img_2_UV_cols_V_channel_full_n = 1'b0;
reg    ap_sig_ready_img_2_UV_cols_V_channel_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_3_rows_V;
wire    img_3_rows_V_full_n;
reg    ap_reg_ready_img_3_rows_V_full_n = 1'b0;
reg    ap_sig_ready_img_3_rows_V_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_3_rows_V_channel;
wire    img_3_rows_V_channel_full_n;
reg    ap_reg_ready_img_3_rows_V_channel_full_n = 1'b0;
reg    ap_sig_ready_img_3_rows_V_channel_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_3_cols_V;
wire    img_3_cols_V_full_n;
reg    ap_reg_ready_img_3_cols_V_full_n = 1'b0;
reg    ap_sig_ready_img_3_cols_V_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_3_cols_V_channel;
wire    img_3_cols_V_channel_full_n;
reg    ap_reg_ready_img_3_cols_V_channel_full_n = 1'b0;
reg    ap_sig_ready_img_3_cols_V_channel_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_3_rows_V_33;
wire    img_3_rows_V_33_full_n;
reg    ap_reg_ready_img_3_rows_V_33_full_n = 1'b0;
reg    ap_sig_ready_img_3_rows_V_33_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_img_3_cols_V_34;
wire    img_3_cols_V_34_full_n;
reg    ap_reg_ready_img_3_cols_V_34_full_n = 1'b0;
reg    ap_sig_ready_img_3_cols_V_34_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_mask_rows_V;
wire    mask_rows_V_full_n;
reg    ap_reg_ready_mask_rows_V_full_n = 1'b0;
reg    ap_sig_ready_mask_rows_V_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_mask_cols_V;
wire    mask_cols_V_full_n;
reg    ap_reg_ready_mask_cols_V_full_n = 1'b0;
reg    ap_sig_ready_mask_cols_V_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_dmask_rows_V;
wire    dmask_rows_V_full_n;
reg    ap_reg_ready_dmask_rows_V_full_n = 1'b0;
reg    ap_sig_ready_dmask_rows_V_full_n;
reg    ap_chn_write_image_filter_Block_proc_U0_dmask_cols_V;
wire    dmask_cols_V_full_n;
reg    ap_reg_ready_dmask_cols_V_full_n = 1'b0;
reg    ap_sig_ready_dmask_cols_V_full_n;
wire    image_filter_AXIvideo2Mat_U0_ap_start;
wire    image_filter_AXIvideo2Mat_U0_ap_done;
wire    image_filter_AXIvideo2Mat_U0_ap_continue;
wire    image_filter_AXIvideo2Mat_U0_ap_idle;
wire    image_filter_AXIvideo2Mat_U0_ap_ready;
wire   [15:0] image_filter_AXIvideo2Mat_U0_video_in_TDATA;
wire    image_filter_AXIvideo2Mat_U0_video_in_TVALID;
wire    image_filter_AXIvideo2Mat_U0_video_in_TREADY;
wire   [1:0] image_filter_AXIvideo2Mat_U0_video_in_TKEEP;
wire   [1:0] image_filter_AXIvideo2Mat_U0_video_in_TSTRB;
wire   [0:0] image_filter_AXIvideo2Mat_U0_video_in_TUSER;
wire   [0:0] image_filter_AXIvideo2Mat_U0_video_in_TLAST;
wire   [0:0] image_filter_AXIvideo2Mat_U0_video_in_TID;
wire   [0:0] image_filter_AXIvideo2Mat_U0_video_in_TDEST;
wire   [11:0] image_filter_AXIvideo2Mat_U0_img_rows_V_read;
wire   [11:0] image_filter_AXIvideo2Mat_U0_img_cols_V_read;
wire   [7:0] image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_din;
wire    image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_full_n;
wire    image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_write;
wire   [7:0] image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_din;
wire    image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_full_n;
wire    image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_write;
wire    image_filter_Duplicate_1080_1920_16_16_U0_ap_start;
wire    image_filter_Duplicate_1080_1920_16_16_U0_ap_done;
wire    image_filter_Duplicate_1080_1920_16_16_U0_ap_continue;
wire    image_filter_Duplicate_1080_1920_16_16_U0_ap_idle;
wire    image_filter_Duplicate_1080_1920_16_16_U0_ap_ready;
wire   [11:0] image_filter_Duplicate_1080_1920_16_16_U0_src_rows_V_read;
wire   [11:0] image_filter_Duplicate_1080_1920_16_16_U0_src_cols_V_read;
wire   [7:0] image_filter_Duplicate_1080_1920_16_16_U0_src_data_stream_0_V_dout;
wire    image_filter_Duplicate_1080_1920_16_16_U0_src_data_stream_0_V_empty_n;
wire    image_filter_Duplicate_1080_1920_16_16_U0_src_data_stream_0_V_read;
wire   [7:0] image_filter_Duplicate_1080_1920_16_16_U0_src_data_stream_1_V_dout;
wire    image_filter_Duplicate_1080_1920_16_16_U0_src_data_stream_1_V_empty_n;
wire    image_filter_Duplicate_1080_1920_16_16_U0_src_data_stream_1_V_read;
wire   [11:0] image_filter_Duplicate_1080_1920_16_16_U0_dst1_rows_V_read;
wire   [11:0] image_filter_Duplicate_1080_1920_16_16_U0_dst1_cols_V_read;
wire   [7:0] image_filter_Duplicate_1080_1920_16_16_U0_dst1_data_stream_0_V_din;
wire    image_filter_Duplicate_1080_1920_16_16_U0_dst1_data_stream_0_V_full_n;
wire    image_filter_Duplicate_1080_1920_16_16_U0_dst1_data_stream_0_V_write;
wire   [7:0] image_filter_Duplicate_1080_1920_16_16_U0_dst1_data_stream_1_V_din;
wire    image_filter_Duplicate_1080_1920_16_16_U0_dst1_data_stream_1_V_full_n;
wire    image_filter_Duplicate_1080_1920_16_16_U0_dst1_data_stream_1_V_write;
wire   [11:0] image_filter_Duplicate_1080_1920_16_16_U0_dst2_rows_V_read;
wire   [11:0] image_filter_Duplicate_1080_1920_16_16_U0_dst2_cols_V_read;
wire   [7:0] image_filter_Duplicate_1080_1920_16_16_U0_dst2_data_stream_0_V_din;
wire    image_filter_Duplicate_1080_1920_16_16_U0_dst2_data_stream_0_V_full_n;
wire    image_filter_Duplicate_1080_1920_16_16_U0_dst2_data_stream_0_V_write;
wire   [7:0] image_filter_Duplicate_1080_1920_16_16_U0_dst2_data_stream_1_V_din;
wire    image_filter_Duplicate_1080_1920_16_16_U0_dst2_data_stream_1_V_full_n;
wire    image_filter_Duplicate_1080_1920_16_16_U0_dst2_data_stream_1_V_write;
wire    image_filter_UVupsampling_U0_ap_start;
wire    image_filter_UVupsampling_U0_ap_done;
wire    image_filter_UVupsampling_U0_ap_continue;
wire    image_filter_UVupsampling_U0_ap_idle;
wire    image_filter_UVupsampling_U0_ap_ready;
wire   [11:0] image_filter_UVupsampling_U0_yuv422_rows_V_read;
wire   [11:0] image_filter_UVupsampling_U0_yuv422_cols_V_read;
wire   [7:0] image_filter_UVupsampling_U0_yuv422_data_stream_0_V_dout;
wire    image_filter_UVupsampling_U0_yuv422_data_stream_0_V_empty_n;
wire    image_filter_UVupsampling_U0_yuv422_data_stream_0_V_read;
wire   [7:0] image_filter_UVupsampling_U0_yuv422_data_stream_1_V_dout;
wire    image_filter_UVupsampling_U0_yuv422_data_stream_1_V_empty_n;
wire    image_filter_UVupsampling_U0_yuv422_data_stream_1_V_read;
wire   [7:0] image_filter_UVupsampling_U0_yuv444_data_stream_0_V_din;
wire    image_filter_UVupsampling_U0_yuv444_data_stream_0_V_full_n;
wire    image_filter_UVupsampling_U0_yuv444_data_stream_0_V_write;
wire   [7:0] image_filter_UVupsampling_U0_yuv444_data_stream_1_V_din;
wire    image_filter_UVupsampling_U0_yuv444_data_stream_1_V_full_n;
wire    image_filter_UVupsampling_U0_yuv444_data_stream_1_V_write;
wire   [7:0] image_filter_UVupsampling_U0_yuv444_data_stream_2_V_din;
wire    image_filter_UVupsampling_U0_yuv444_data_stream_2_V_full_n;
wire    image_filter_UVupsampling_U0_yuv444_data_stream_2_V_write;
wire    image_filter_Split_1080_1920_16_0_U0_ap_start;
wire    image_filter_Split_1080_1920_16_0_U0_ap_done;
wire    image_filter_Split_1080_1920_16_0_U0_ap_continue;
wire    image_filter_Split_1080_1920_16_0_U0_ap_idle;
wire    image_filter_Split_1080_1920_16_0_U0_ap_ready;
wire   [11:0] image_filter_Split_1080_1920_16_0_U0_src_rows_V_read;
wire   [11:0] image_filter_Split_1080_1920_16_0_U0_src_cols_V_read;
wire   [7:0] image_filter_Split_1080_1920_16_0_U0_src_data_stream_0_V_dout;
wire    image_filter_Split_1080_1920_16_0_U0_src_data_stream_0_V_empty_n;
wire    image_filter_Split_1080_1920_16_0_U0_src_data_stream_0_V_read;
wire   [7:0] image_filter_Split_1080_1920_16_0_U0_src_data_stream_1_V_dout;
wire    image_filter_Split_1080_1920_16_0_U0_src_data_stream_1_V_empty_n;
wire    image_filter_Split_1080_1920_16_0_U0_src_data_stream_1_V_read;
wire   [11:0] image_filter_Split_1080_1920_16_0_U0_dst0_rows_V_read;
wire   [11:0] image_filter_Split_1080_1920_16_0_U0_dst0_cols_V_read;
wire   [7:0] image_filter_Split_1080_1920_16_0_U0_dst0_data_stream_V_din;
wire    image_filter_Split_1080_1920_16_0_U0_dst0_data_stream_V_full_n;
wire    image_filter_Split_1080_1920_16_0_U0_dst0_data_stream_V_write;
wire   [11:0] image_filter_Split_1080_1920_16_0_U0_dst1_rows_V_read;
wire   [11:0] image_filter_Split_1080_1920_16_0_U0_dst1_cols_V_read;
wire   [7:0] image_filter_Split_1080_1920_16_0_U0_dst1_data_stream_V_din;
wire    image_filter_Split_1080_1920_16_0_U0_dst1_data_stream_V_full_n;
wire    image_filter_Split_1080_1920_16_0_U0_dst1_data_stream_V_write;
wire    image_filter_Consume_1080_1920_0_U0_ap_start;
wire    image_filter_Consume_1080_1920_0_U0_ap_done;
wire    image_filter_Consume_1080_1920_0_U0_ap_continue;
wire    image_filter_Consume_1080_1920_0_U0_ap_idle;
wire    image_filter_Consume_1080_1920_0_U0_ap_ready;
wire   [11:0] image_filter_Consume_1080_1920_0_U0_src_rows_V_read;
wire   [11:0] image_filter_Consume_1080_1920_0_U0_src_cols_V_read;
wire   [7:0] image_filter_Consume_1080_1920_0_U0_src_data_stream_V_dout;
wire    image_filter_Consume_1080_1920_0_U0_src_data_stream_V_empty_n;
wire    image_filter_Consume_1080_1920_0_U0_src_data_stream_V_read;
wire    image_filter_FAST_t_opr_U0_ap_start;
wire    image_filter_FAST_t_opr_U0_ap_done;
wire    image_filter_FAST_t_opr_U0_ap_continue;
wire    image_filter_FAST_t_opr_U0_ap_idle;
wire    image_filter_FAST_t_opr_U0_ap_ready;
wire   [11:0] image_filter_FAST_t_opr_U0_p_src_rows_V_read;
wire   [11:0] image_filter_FAST_t_opr_U0_p_src_cols_V_read;
wire   [7:0] image_filter_FAST_t_opr_U0_p_src_data_stream_V_dout;
wire    image_filter_FAST_t_opr_U0_p_src_data_stream_V_empty_n;
wire    image_filter_FAST_t_opr_U0_p_src_data_stream_V_read;
wire   [7:0] image_filter_FAST_t_opr_U0_p_mask_data_stream_V_din;
wire    image_filter_FAST_t_opr_U0_p_mask_data_stream_V_full_n;
wire    image_filter_FAST_t_opr_U0_p_mask_data_stream_V_write;
wire    image_filter_Dilate_0_0_1080_1920_U0_ap_start;
wire    image_filter_Dilate_0_0_1080_1920_U0_ap_done;
wire    image_filter_Dilate_0_0_1080_1920_U0_ap_continue;
wire    image_filter_Dilate_0_0_1080_1920_U0_ap_idle;
wire    image_filter_Dilate_0_0_1080_1920_U0_ap_ready;
wire   [11:0] image_filter_Dilate_0_0_1080_1920_U0_p_src_rows_V_read;
wire   [11:0] image_filter_Dilate_0_0_1080_1920_U0_p_src_cols_V_read;
wire   [7:0] image_filter_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_dout;
wire    image_filter_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_empty_n;
wire    image_filter_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_read;
wire   [7:0] image_filter_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_din;
wire    image_filter_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_full_n;
wire    image_filter_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_write;
wire    image_filter_PaintMask_32_0_1080_1920_U0_ap_start;
wire    image_filter_PaintMask_32_0_1080_1920_U0_ap_done;
wire    image_filter_PaintMask_32_0_1080_1920_U0_ap_continue;
wire    image_filter_PaintMask_32_0_1080_1920_U0_ap_idle;
wire    image_filter_PaintMask_32_0_1080_1920_U0_ap_ready;
wire   [11:0] image_filter_PaintMask_32_0_1080_1920_U0_p_src_rows_V_read;
wire   [11:0] image_filter_PaintMask_32_0_1080_1920_U0_p_src_cols_V_read;
wire   [7:0] image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_0_V_dout;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_0_V_empty_n;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_0_V_read;
wire   [7:0] image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_1_V_dout;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_1_V_empty_n;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_1_V_read;
wire   [7:0] image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_2_V_dout;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_2_V_empty_n;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_2_V_read;
wire   [11:0] image_filter_PaintMask_32_0_1080_1920_U0_p_mask_rows_V_read;
wire   [11:0] image_filter_PaintMask_32_0_1080_1920_U0_p_mask_cols_V_read;
wire   [7:0] image_filter_PaintMask_32_0_1080_1920_U0_p_mask_data_stream_V_dout;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_mask_data_stream_V_empty_n;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_mask_data_stream_V_read;
wire   [11:0] image_filter_PaintMask_32_0_1080_1920_U0_p_dst_rows_V_read;
wire   [11:0] image_filter_PaintMask_32_0_1080_1920_U0_p_dst_cols_V_read;
wire   [7:0] image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_0_V_din;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_0_V_full_n;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_0_V_write;
wire   [7:0] image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_1_V_din;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_1_V_full_n;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_1_V_write;
wire   [7:0] image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_2_V_din;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_2_V_full_n;
wire    image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_2_V_write;
wire    image_filter_UVdownsampling_U0_ap_start;
wire    image_filter_UVdownsampling_U0_ap_done;
wire    image_filter_UVdownsampling_U0_ap_continue;
wire    image_filter_UVdownsampling_U0_ap_idle;
wire    image_filter_UVdownsampling_U0_ap_ready;
wire   [11:0] image_filter_UVdownsampling_U0_yuv444_rows_V_read;
wire   [11:0] image_filter_UVdownsampling_U0_yuv444_cols_V_read;
wire   [7:0] image_filter_UVdownsampling_U0_yuv444_data_stream_0_V_dout;
wire    image_filter_UVdownsampling_U0_yuv444_data_stream_0_V_empty_n;
wire    image_filter_UVdownsampling_U0_yuv444_data_stream_0_V_read;
wire   [7:0] image_filter_UVdownsampling_U0_yuv444_data_stream_1_V_dout;
wire    image_filter_UVdownsampling_U0_yuv444_data_stream_1_V_empty_n;
wire    image_filter_UVdownsampling_U0_yuv444_data_stream_1_V_read;
wire   [7:0] image_filter_UVdownsampling_U0_yuv444_data_stream_2_V_dout;
wire    image_filter_UVdownsampling_U0_yuv444_data_stream_2_V_empty_n;
wire    image_filter_UVdownsampling_U0_yuv444_data_stream_2_V_read;
wire   [7:0] image_filter_UVdownsampling_U0_yuv422_data_stream_0_V_din;
wire    image_filter_UVdownsampling_U0_yuv422_data_stream_0_V_full_n;
wire    image_filter_UVdownsampling_U0_yuv422_data_stream_0_V_write;
wire   [7:0] image_filter_UVdownsampling_U0_yuv422_data_stream_1_V_din;
wire    image_filter_UVdownsampling_U0_yuv422_data_stream_1_V_full_n;
wire    image_filter_UVdownsampling_U0_yuv422_data_stream_1_V_write;
wire    image_filter_Mat2AXIvideo_U0_ap_start;
wire    image_filter_Mat2AXIvideo_U0_ap_done;
wire    image_filter_Mat2AXIvideo_U0_ap_continue;
wire    image_filter_Mat2AXIvideo_U0_ap_idle;
wire    image_filter_Mat2AXIvideo_U0_ap_ready;
wire   [11:0] image_filter_Mat2AXIvideo_U0_img_rows_V_read;
wire   [11:0] image_filter_Mat2AXIvideo_U0_img_cols_V_read;
wire   [7:0] image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_dout;
wire    image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_empty_n;
wire    image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_read;
wire   [7:0] image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_dout;
wire    image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_empty_n;
wire    image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_read;
wire   [15:0] image_filter_Mat2AXIvideo_U0_video_out_TDATA;
wire    image_filter_Mat2AXIvideo_U0_video_out_TVALID;
wire    image_filter_Mat2AXIvideo_U0_video_out_TREADY;
wire   [1:0] image_filter_Mat2AXIvideo_U0_video_out_TKEEP;
wire   [1:0] image_filter_Mat2AXIvideo_U0_video_out_TSTRB;
wire   [0:0] image_filter_Mat2AXIvideo_U0_video_out_TUSER;
wire   [0:0] image_filter_Mat2AXIvideo_U0_video_out_TLAST;
wire   [0:0] image_filter_Mat2AXIvideo_U0_video_out_TID;
wire   [0:0] image_filter_Mat2AXIvideo_U0_video_out_TDEST;
wire    ap_sig_hs_continue;
wire    img_0_rows_V_channel_U_ap_dummy_ce;
wire   [11:0] img_0_rows_V_channel_din;
wire    img_0_rows_V_channel_write;
wire   [11:0] img_0_rows_V_channel_dout;
wire    img_0_rows_V_channel_empty_n;
wire    img_0_rows_V_channel_read;
wire    img_0_rows_V_channel1_U_ap_dummy_ce;
wire   [11:0] img_0_rows_V_channel1_din;
wire    img_0_rows_V_channel1_write;
wire   [11:0] img_0_rows_V_channel1_dout;
wire    img_0_rows_V_channel1_empty_n;
wire    img_0_rows_V_channel1_read;
wire    img_0_cols_V_channel_U_ap_dummy_ce;
wire   [11:0] img_0_cols_V_channel_din;
wire    img_0_cols_V_channel_write;
wire   [11:0] img_0_cols_V_channel_dout;
wire    img_0_cols_V_channel_empty_n;
wire    img_0_cols_V_channel_read;
wire    img_0_cols_V_channel1_U_ap_dummy_ce;
wire   [11:0] img_0_cols_V_channel1_din;
wire    img_0_cols_V_channel1_write;
wire   [11:0] img_0_cols_V_channel1_dout;
wire    img_0_cols_V_channel1_empty_n;
wire    img_0_cols_V_channel1_read;
wire    img_1_rows_V_U_ap_dummy_ce;
wire   [11:0] img_1_rows_V_din;
wire    img_1_rows_V_write;
wire   [11:0] img_1_rows_V_dout;
wire    img_1_rows_V_empty_n;
wire    img_1_rows_V_read;
wire    img_1_rows_V_channel_U_ap_dummy_ce;
wire   [11:0] img_1_rows_V_channel_din;
wire    img_1_rows_V_channel_write;
wire   [11:0] img_1_rows_V_channel_dout;
wire    img_1_rows_V_channel_empty_n;
wire    img_1_rows_V_channel_read;
wire    img_1_cols_V_U_ap_dummy_ce;
wire   [11:0] img_1_cols_V_din;
wire    img_1_cols_V_write;
wire   [11:0] img_1_cols_V_dout;
wire    img_1_cols_V_empty_n;
wire    img_1_cols_V_read;
wire    img_1_cols_V_channel_U_ap_dummy_ce;
wire   [11:0] img_1_cols_V_channel_din;
wire    img_1_cols_V_channel_write;
wire   [11:0] img_1_cols_V_channel_dout;
wire    img_1_cols_V_channel_empty_n;
wire    img_1_cols_V_channel_read;
wire    img_1_rows_V_31_U_ap_dummy_ce;
wire   [11:0] img_1_rows_V_31_din;
wire    img_1_rows_V_31_write;
wire   [11:0] img_1_rows_V_31_dout;
wire    img_1_rows_V_31_empty_n;
wire    img_1_rows_V_31_read;
wire    img_1_cols_V_32_U_ap_dummy_ce;
wire   [11:0] img_1_cols_V_32_din;
wire    img_1_cols_V_32_write;
wire   [11:0] img_1_cols_V_32_dout;
wire    img_1_cols_V_32_empty_n;
wire    img_1_cols_V_32_read;
wire    img_2_rows_V_U_ap_dummy_ce;
wire   [11:0] img_2_rows_V_din;
wire    img_2_rows_V_write;
wire   [11:0] img_2_rows_V_dout;
wire    img_2_rows_V_empty_n;
wire    img_2_rows_V_read;
wire    img_2_rows_V_channel_U_ap_dummy_ce;
wire   [11:0] img_2_rows_V_channel_din;
wire    img_2_rows_V_channel_write;
wire   [11:0] img_2_rows_V_channel_dout;
wire    img_2_rows_V_channel_empty_n;
wire    img_2_rows_V_channel_read;
wire    img_2_cols_V_U_ap_dummy_ce;
wire   [11:0] img_2_cols_V_din;
wire    img_2_cols_V_write;
wire   [11:0] img_2_cols_V_dout;
wire    img_2_cols_V_empty_n;
wire    img_2_cols_V_read;
wire    img_2_cols_V_channel_U_ap_dummy_ce;
wire   [11:0] img_2_cols_V_channel_din;
wire    img_2_cols_V_channel_write;
wire   [11:0] img_2_cols_V_channel_dout;
wire    img_2_cols_V_channel_empty_n;
wire    img_2_cols_V_channel_read;
wire    img_2_Y_rows_V_U_ap_dummy_ce;
wire   [11:0] img_2_Y_rows_V_din;
wire    img_2_Y_rows_V_write;
wire   [11:0] img_2_Y_rows_V_dout;
wire    img_2_Y_rows_V_empty_n;
wire    img_2_Y_rows_V_read;
wire    img_2_Y_rows_V_channel_U_ap_dummy_ce;
wire   [11:0] img_2_Y_rows_V_channel_din;
wire    img_2_Y_rows_V_channel_write;
wire   [11:0] img_2_Y_rows_V_channel_dout;
wire    img_2_Y_rows_V_channel_empty_n;
wire    img_2_Y_rows_V_channel_read;
wire    img_2_Y_cols_V_U_ap_dummy_ce;
wire   [11:0] img_2_Y_cols_V_din;
wire    img_2_Y_cols_V_write;
wire   [11:0] img_2_Y_cols_V_dout;
wire    img_2_Y_cols_V_empty_n;
wire    img_2_Y_cols_V_read;
wire    img_2_Y_cols_V_channel_U_ap_dummy_ce;
wire   [11:0] img_2_Y_cols_V_channel_din;
wire    img_2_Y_cols_V_channel_write;
wire   [11:0] img_2_Y_cols_V_channel_dout;
wire    img_2_Y_cols_V_channel_empty_n;
wire    img_2_Y_cols_V_channel_read;
wire    img_2_UV_rows_V_U_ap_dummy_ce;
wire   [11:0] img_2_UV_rows_V_din;
wire    img_2_UV_rows_V_write;
wire   [11:0] img_2_UV_rows_V_dout;
wire    img_2_UV_rows_V_empty_n;
wire    img_2_UV_rows_V_read;
wire    img_2_UV_rows_V_channel_U_ap_dummy_ce;
wire   [11:0] img_2_UV_rows_V_channel_din;
wire    img_2_UV_rows_V_channel_write;
wire   [11:0] img_2_UV_rows_V_channel_dout;
wire    img_2_UV_rows_V_channel_empty_n;
wire    img_2_UV_rows_V_channel_read;
wire    img_2_UV_cols_V_U_ap_dummy_ce;
wire   [11:0] img_2_UV_cols_V_din;
wire    img_2_UV_cols_V_write;
wire   [11:0] img_2_UV_cols_V_dout;
wire    img_2_UV_cols_V_empty_n;
wire    img_2_UV_cols_V_read;
wire    img_2_UV_cols_V_channel_U_ap_dummy_ce;
wire   [11:0] img_2_UV_cols_V_channel_din;
wire    img_2_UV_cols_V_channel_write;
wire   [11:0] img_2_UV_cols_V_channel_dout;
wire    img_2_UV_cols_V_channel_empty_n;
wire    img_2_UV_cols_V_channel_read;
wire    img_3_rows_V_U_ap_dummy_ce;
wire   [11:0] img_3_rows_V_din;
wire    img_3_rows_V_write;
wire   [11:0] img_3_rows_V_dout;
wire    img_3_rows_V_empty_n;
wire    img_3_rows_V_read;
wire    img_3_rows_V_channel_U_ap_dummy_ce;
wire   [11:0] img_3_rows_V_channel_din;
wire    img_3_rows_V_channel_write;
wire   [11:0] img_3_rows_V_channel_dout;
wire    img_3_rows_V_channel_empty_n;
wire    img_3_rows_V_channel_read;
wire    img_3_cols_V_U_ap_dummy_ce;
wire   [11:0] img_3_cols_V_din;
wire    img_3_cols_V_write;
wire   [11:0] img_3_cols_V_dout;
wire    img_3_cols_V_empty_n;
wire    img_3_cols_V_read;
wire    img_3_cols_V_channel_U_ap_dummy_ce;
wire   [11:0] img_3_cols_V_channel_din;
wire    img_3_cols_V_channel_write;
wire   [11:0] img_3_cols_V_channel_dout;
wire    img_3_cols_V_channel_empty_n;
wire    img_3_cols_V_channel_read;
wire    img_3_rows_V_33_U_ap_dummy_ce;
wire   [11:0] img_3_rows_V_33_din;
wire    img_3_rows_V_33_write;
wire   [11:0] img_3_rows_V_33_dout;
wire    img_3_rows_V_33_empty_n;
wire    img_3_rows_V_33_read;
wire    img_3_cols_V_34_U_ap_dummy_ce;
wire   [11:0] img_3_cols_V_34_din;
wire    img_3_cols_V_34_write;
wire   [11:0] img_3_cols_V_34_dout;
wire    img_3_cols_V_34_empty_n;
wire    img_3_cols_V_34_read;
wire    mask_rows_V_U_ap_dummy_ce;
wire   [11:0] mask_rows_V_din;
wire    mask_rows_V_write;
wire   [11:0] mask_rows_V_dout;
wire    mask_rows_V_empty_n;
wire    mask_rows_V_read;
wire    mask_cols_V_U_ap_dummy_ce;
wire   [11:0] mask_cols_V_din;
wire    mask_cols_V_write;
wire   [11:0] mask_cols_V_dout;
wire    mask_cols_V_empty_n;
wire    mask_cols_V_read;
wire    dmask_rows_V_U_ap_dummy_ce;
wire   [11:0] dmask_rows_V_din;
wire    dmask_rows_V_write;
wire   [11:0] dmask_rows_V_dout;
wire    dmask_rows_V_empty_n;
wire    dmask_rows_V_read;
wire    dmask_cols_V_U_ap_dummy_ce;
wire   [11:0] dmask_cols_V_din;
wire    dmask_cols_V_write;
wire   [11:0] dmask_cols_V_dout;
wire    dmask_cols_V_empty_n;
wire    dmask_cols_V_read;
wire    img_0_data_stream_0_V_U_ap_dummy_ce;
wire   [7:0] img_0_data_stream_0_V_din;
wire    img_0_data_stream_0_V_full_n;
wire    img_0_data_stream_0_V_write;
wire   [7:0] img_0_data_stream_0_V_dout;
wire    img_0_data_stream_0_V_empty_n;
wire    img_0_data_stream_0_V_read;
wire    img_0_data_stream_1_V_U_ap_dummy_ce;
wire   [7:0] img_0_data_stream_1_V_din;
wire    img_0_data_stream_1_V_full_n;
wire    img_0_data_stream_1_V_write;
wire   [7:0] img_0_data_stream_1_V_dout;
wire    img_0_data_stream_1_V_empty_n;
wire    img_0_data_stream_1_V_read;
wire    img_1_data_stream_0_V_U_ap_dummy_ce;
wire   [7:0] img_1_data_stream_0_V_din;
wire    img_1_data_stream_0_V_full_n;
wire    img_1_data_stream_0_V_write;
wire   [7:0] img_1_data_stream_0_V_dout;
wire    img_1_data_stream_0_V_empty_n;
wire    img_1_data_stream_0_V_read;
wire    img_1_data_stream_1_V_U_ap_dummy_ce;
wire   [7:0] img_1_data_stream_1_V_din;
wire    img_1_data_stream_1_V_full_n;
wire    img_1_data_stream_1_V_write;
wire   [7:0] img_1_data_stream_1_V_dout;
wire    img_1_data_stream_1_V_empty_n;
wire    img_1_data_stream_1_V_read;
wire    img_2_data_stream_0_V_U_ap_dummy_ce;
wire   [7:0] img_2_data_stream_0_V_din;
wire    img_2_data_stream_0_V_full_n;
wire    img_2_data_stream_0_V_write;
wire   [7:0] img_2_data_stream_0_V_dout;
wire    img_2_data_stream_0_V_empty_n;
wire    img_2_data_stream_0_V_read;
wire    img_2_data_stream_1_V_U_ap_dummy_ce;
wire   [7:0] img_2_data_stream_1_V_din;
wire    img_2_data_stream_1_V_full_n;
wire    img_2_data_stream_1_V_write;
wire   [7:0] img_2_data_stream_1_V_dout;
wire    img_2_data_stream_1_V_empty_n;
wire    img_2_data_stream_1_V_read;
wire    img_1_data_stream_0_V_13_U_ap_dummy_ce;
wire   [7:0] img_1_data_stream_0_V_13_din;
wire    img_1_data_stream_0_V_13_full_n;
wire    img_1_data_stream_0_V_13_write;
wire   [7:0] img_1_data_stream_0_V_13_dout;
wire    img_1_data_stream_0_V_13_empty_n;
wire    img_1_data_stream_0_V_13_read;
wire    img_1_data_stream_1_V_15_U_ap_dummy_ce;
wire   [7:0] img_1_data_stream_1_V_15_din;
wire    img_1_data_stream_1_V_15_full_n;
wire    img_1_data_stream_1_V_15_write;
wire   [7:0] img_1_data_stream_1_V_15_dout;
wire    img_1_data_stream_1_V_15_empty_n;
wire    img_1_data_stream_1_V_15_read;
wire    img_1_data_stream_2_V_U_ap_dummy_ce;
wire   [7:0] img_1_data_stream_2_V_din;
wire    img_1_data_stream_2_V_full_n;
wire    img_1_data_stream_2_V_write;
wire   [7:0] img_1_data_stream_2_V_dout;
wire    img_1_data_stream_2_V_empty_n;
wire    img_1_data_stream_2_V_read;
wire    img_2_Y_data_stream_0_V_U_ap_dummy_ce;
wire   [7:0] img_2_Y_data_stream_0_V_din;
wire    img_2_Y_data_stream_0_V_full_n;
wire    img_2_Y_data_stream_0_V_write;
wire   [7:0] img_2_Y_data_stream_0_V_dout;
wire    img_2_Y_data_stream_0_V_empty_n;
wire    img_2_Y_data_stream_0_V_read;
wire    img_2_UV_data_stream_0_V_U_ap_dummy_ce;
wire   [7:0] img_2_UV_data_stream_0_V_din;
wire    img_2_UV_data_stream_0_V_full_n;
wire    img_2_UV_data_stream_0_V_write;
wire   [7:0] img_2_UV_data_stream_0_V_dout;
wire    img_2_UV_data_stream_0_V_empty_n;
wire    img_2_UV_data_stream_0_V_read;
wire    mask_data_stream_0_V_U_ap_dummy_ce;
wire   [7:0] mask_data_stream_0_V_din;
wire    mask_data_stream_0_V_full_n;
wire    mask_data_stream_0_V_write;
wire   [7:0] mask_data_stream_0_V_dout;
wire    mask_data_stream_0_V_empty_n;
wire    mask_data_stream_0_V_read;
wire    dmask_data_stream_0_V_U_ap_dummy_ce;
wire   [7:0] dmask_data_stream_0_V_din;
wire    dmask_data_stream_0_V_full_n;
wire    dmask_data_stream_0_V_write;
wire   [7:0] dmask_data_stream_0_V_dout;
wire    dmask_data_stream_0_V_empty_n;
wire    dmask_data_stream_0_V_read;
wire    img_3_data_stream_0_V_U_ap_dummy_ce;
wire   [7:0] img_3_data_stream_0_V_din;
wire    img_3_data_stream_0_V_full_n;
wire    img_3_data_stream_0_V_write;
wire   [7:0] img_3_data_stream_0_V_dout;
wire    img_3_data_stream_0_V_empty_n;
wire    img_3_data_stream_0_V_read;
wire    img_3_data_stream_1_V_U_ap_dummy_ce;
wire   [7:0] img_3_data_stream_1_V_din;
wire    img_3_data_stream_1_V_full_n;
wire    img_3_data_stream_1_V_write;
wire   [7:0] img_3_data_stream_1_V_dout;
wire    img_3_data_stream_1_V_empty_n;
wire    img_3_data_stream_1_V_read;
wire    img_3_data_stream_2_V_U_ap_dummy_ce;
wire   [7:0] img_3_data_stream_2_V_din;
wire    img_3_data_stream_2_V_full_n;
wire    img_3_data_stream_2_V_write;
wire   [7:0] img_3_data_stream_2_V_dout;
wire    img_3_data_stream_2_V_empty_n;
wire    img_3_data_stream_2_V_read;
wire    img_3_data_stream_0_V_25_U_ap_dummy_ce;
wire   [7:0] img_3_data_stream_0_V_25_din;
wire    img_3_data_stream_0_V_25_full_n;
wire    img_3_data_stream_0_V_25_write;
wire   [7:0] img_3_data_stream_0_V_25_dout;
wire    img_3_data_stream_0_V_25_empty_n;
wire    img_3_data_stream_0_V_25_read;
wire    img_3_data_stream_1_V_27_U_ap_dummy_ce;
wire   [7:0] img_3_data_stream_1_V_27_din;
wire    img_3_data_stream_1_V_27_full_n;
wire    img_3_data_stream_1_V_27_write;
wire   [7:0] img_3_data_stream_1_V_27_dout;
wire    img_3_data_stream_1_V_27_empty_n;
wire    img_3_data_stream_1_V_27_read;
reg    ap_reg_procdone_image_filter_Block_proc_U0 = 1'b0;
reg    ap_sig_hs_done;
reg    ap_reg_procdone_image_filter_AXIvideo2Mat_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_Duplicate_1080_1920_16_16_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_UVupsampling_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_Split_1080_1920_16_0_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_Consume_1080_1920_0_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_FAST_t_opr_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_Dilate_0_0_1080_1920_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_PaintMask_32_0_1080_1920_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_UVdownsampling_U0 = 1'b0;
reg    ap_reg_procdone_image_filter_Mat2AXIvideo_U0 = 1'b0;
reg    ap_CS;
reg    ap_sig_top_allready;
reg    ap_reg_ready_image_filter_Block_proc_U0_ap_ready = 1'b0;
reg    ap_sig_ready_image_filter_Block_proc_U0_ap_ready;
reg    ap_sig_start_in_image_filter_Block_proc_U0_ap_start;
reg    ap_reg_ready_image_filter_AXIvideo2Mat_U0_ap_ready = 1'b0;
reg    ap_sig_ready_image_filter_AXIvideo2Mat_U0_ap_ready;
reg    ap_sig_start_in_image_filter_AXIvideo2Mat_U0_ap_start;


image_filter_CONTROL_BUS_s_axi #(
    .C_ADDR_WIDTH( C_S_AXI_CONTROL_BUS_ADDR_WIDTH ),
    .C_DATA_WIDTH( C_S_AXI_CONTROL_BUS_DATA_WIDTH ))
image_filter_CONTROL_BUS_s_axi_U(
    .AWVALID( s_axi_CONTROL_BUS_AWVALID ),
    .AWREADY( s_axi_CONTROL_BUS_AWREADY ),
    .AWADDR( s_axi_CONTROL_BUS_AWADDR ),
    .WVALID( s_axi_CONTROL_BUS_WVALID ),
    .WREADY( s_axi_CONTROL_BUS_WREADY ),
    .WDATA( s_axi_CONTROL_BUS_WDATA ),
    .WSTRB( s_axi_CONTROL_BUS_WSTRB ),
    .ARVALID( s_axi_CONTROL_BUS_ARVALID ),
    .ARREADY( s_axi_CONTROL_BUS_ARREADY ),
    .ARADDR( s_axi_CONTROL_BUS_ARADDR ),
    .RVALID( s_axi_CONTROL_BUS_RVALID ),
    .RREADY( s_axi_CONTROL_BUS_RREADY ),
    .RDATA( s_axi_CONTROL_BUS_RDATA ),
    .RRESP( s_axi_CONTROL_BUS_RRESP ),
    .BVALID( s_axi_CONTROL_BUS_BVALID ),
    .BREADY( s_axi_CONTROL_BUS_BREADY ),
    .BRESP( s_axi_CONTROL_BUS_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( image_filter_CONTROL_BUS_s_axi_U_ap_dummy_ce ),
    .rows( rows ),
    .cols( cols ),
    .ap_start( ap_start ),
    .interrupt( interrupt ),
    .ap_ready( ap_ready ),
    .ap_done( ap_done ),
    .ap_idle( ap_idle )
);

image_filter_Block_proc image_filter_Block_proc_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_Block_proc_U0_ap_start ),
    .ap_done( image_filter_Block_proc_U0_ap_done ),
    .ap_continue( image_filter_Block_proc_U0_ap_continue ),
    .ap_idle( image_filter_Block_proc_U0_ap_idle ),
    .ap_ready( image_filter_Block_proc_U0_ap_ready ),
    .rows( image_filter_Block_proc_U0_rows ),
    .cols( image_filter_Block_proc_U0_cols ),
    .ap_return_0( image_filter_Block_proc_U0_ap_return_0 ),
    .ap_return_1( image_filter_Block_proc_U0_ap_return_1 ),
    .ap_return_2( image_filter_Block_proc_U0_ap_return_2 ),
    .ap_return_3( image_filter_Block_proc_U0_ap_return_3 ),
    .ap_return_4( image_filter_Block_proc_U0_ap_return_4 ),
    .ap_return_5( image_filter_Block_proc_U0_ap_return_5 ),
    .ap_return_6( image_filter_Block_proc_U0_ap_return_6 ),
    .ap_return_7( image_filter_Block_proc_U0_ap_return_7 ),
    .ap_return_8( image_filter_Block_proc_U0_ap_return_8 ),
    .ap_return_9( image_filter_Block_proc_U0_ap_return_9 ),
    .ap_return_10( image_filter_Block_proc_U0_ap_return_10 ),
    .ap_return_11( image_filter_Block_proc_U0_ap_return_11 ),
    .ap_return_12( image_filter_Block_proc_U0_ap_return_12 ),
    .ap_return_13( image_filter_Block_proc_U0_ap_return_13 ),
    .ap_return_14( image_filter_Block_proc_U0_ap_return_14 ),
    .ap_return_15( image_filter_Block_proc_U0_ap_return_15 ),
    .ap_return_16( image_filter_Block_proc_U0_ap_return_16 ),
    .ap_return_17( image_filter_Block_proc_U0_ap_return_17 ),
    .ap_return_18( image_filter_Block_proc_U0_ap_return_18 ),
    .ap_return_19( image_filter_Block_proc_U0_ap_return_19 ),
    .ap_return_20( image_filter_Block_proc_U0_ap_return_20 ),
    .ap_return_21( image_filter_Block_proc_U0_ap_return_21 ),
    .ap_return_22( image_filter_Block_proc_U0_ap_return_22 ),
    .ap_return_23( image_filter_Block_proc_U0_ap_return_23 ),
    .ap_return_24( image_filter_Block_proc_U0_ap_return_24 ),
    .ap_return_25( image_filter_Block_proc_U0_ap_return_25 ),
    .ap_return_26( image_filter_Block_proc_U0_ap_return_26 ),
    .ap_return_27( image_filter_Block_proc_U0_ap_return_27 ),
    .ap_return_28( image_filter_Block_proc_U0_ap_return_28 ),
    .ap_return_29( image_filter_Block_proc_U0_ap_return_29 ),
    .ap_return_30( image_filter_Block_proc_U0_ap_return_30 ),
    .ap_return_31( image_filter_Block_proc_U0_ap_return_31 )
);

image_filter_AXIvideo2Mat image_filter_AXIvideo2Mat_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_AXIvideo2Mat_U0_ap_start ),
    .ap_done( image_filter_AXIvideo2Mat_U0_ap_done ),
    .ap_continue( image_filter_AXIvideo2Mat_U0_ap_continue ),
    .ap_idle( image_filter_AXIvideo2Mat_U0_ap_idle ),
    .ap_ready( image_filter_AXIvideo2Mat_U0_ap_ready ),
    .video_in_TDATA( image_filter_AXIvideo2Mat_U0_video_in_TDATA ),
    .video_in_TVALID( image_filter_AXIvideo2Mat_U0_video_in_TVALID ),
    .video_in_TREADY( image_filter_AXIvideo2Mat_U0_video_in_TREADY ),
    .video_in_TKEEP( image_filter_AXIvideo2Mat_U0_video_in_TKEEP ),
    .video_in_TSTRB( image_filter_AXIvideo2Mat_U0_video_in_TSTRB ),
    .video_in_TUSER( image_filter_AXIvideo2Mat_U0_video_in_TUSER ),
    .video_in_TLAST( image_filter_AXIvideo2Mat_U0_video_in_TLAST ),
    .video_in_TID( image_filter_AXIvideo2Mat_U0_video_in_TID ),
    .video_in_TDEST( image_filter_AXIvideo2Mat_U0_video_in_TDEST ),
    .img_rows_V_read( image_filter_AXIvideo2Mat_U0_img_rows_V_read ),
    .img_cols_V_read( image_filter_AXIvideo2Mat_U0_img_cols_V_read ),
    .img_data_stream_0_V_din( image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_din ),
    .img_data_stream_0_V_full_n( image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_full_n ),
    .img_data_stream_0_V_write( image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_write ),
    .img_data_stream_1_V_din( image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_din ),
    .img_data_stream_1_V_full_n( image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_full_n ),
    .img_data_stream_1_V_write( image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_write )
);

image_filter_Duplicate_1080_1920_16_16_s image_filter_Duplicate_1080_1920_16_16_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_Duplicate_1080_1920_16_16_U0_ap_start ),
    .ap_done( image_filter_Duplicate_1080_1920_16_16_U0_ap_done ),
    .ap_continue( image_filter_Duplicate_1080_1920_16_16_U0_ap_continue ),
    .ap_idle( image_filter_Duplicate_1080_1920_16_16_U0_ap_idle ),
    .ap_ready( image_filter_Duplicate_1080_1920_16_16_U0_ap_ready ),
    .src_rows_V_read( image_filter_Duplicate_1080_1920_16_16_U0_src_rows_V_read ),
    .src_cols_V_read( image_filter_Duplicate_1080_1920_16_16_U0_src_cols_V_read ),
    .src_data_stream_0_V_dout( image_filter_Duplicate_1080_1920_16_16_U0_src_data_stream_0_V_dout ),
    .src_data_stream_0_V_empty_n( image_filter_Duplicate_1080_1920_16_16_U0_src_data_stream_0_V_empty_n ),
    .src_data_stream_0_V_read( image_filter_Duplicate_1080_1920_16_16_U0_src_data_stream_0_V_read ),
    .src_data_stream_1_V_dout( image_filter_Duplicate_1080_1920_16_16_U0_src_data_stream_1_V_dout ),
    .src_data_stream_1_V_empty_n( image_filter_Duplicate_1080_1920_16_16_U0_src_data_stream_1_V_empty_n ),
    .src_data_stream_1_V_read( image_filter_Duplicate_1080_1920_16_16_U0_src_data_stream_1_V_read ),
    .dst1_rows_V_read( image_filter_Duplicate_1080_1920_16_16_U0_dst1_rows_V_read ),
    .dst1_cols_V_read( image_filter_Duplicate_1080_1920_16_16_U0_dst1_cols_V_read ),
    .dst1_data_stream_0_V_din( image_filter_Duplicate_1080_1920_16_16_U0_dst1_data_stream_0_V_din ),
    .dst1_data_stream_0_V_full_n( image_filter_Duplicate_1080_1920_16_16_U0_dst1_data_stream_0_V_full_n ),
    .dst1_data_stream_0_V_write( image_filter_Duplicate_1080_1920_16_16_U0_dst1_data_stream_0_V_write ),
    .dst1_data_stream_1_V_din( image_filter_Duplicate_1080_1920_16_16_U0_dst1_data_stream_1_V_din ),
    .dst1_data_stream_1_V_full_n( image_filter_Duplicate_1080_1920_16_16_U0_dst1_data_stream_1_V_full_n ),
    .dst1_data_stream_1_V_write( image_filter_Duplicate_1080_1920_16_16_U0_dst1_data_stream_1_V_write ),
    .dst2_rows_V_read( image_filter_Duplicate_1080_1920_16_16_U0_dst2_rows_V_read ),
    .dst2_cols_V_read( image_filter_Duplicate_1080_1920_16_16_U0_dst2_cols_V_read ),
    .dst2_data_stream_0_V_din( image_filter_Duplicate_1080_1920_16_16_U0_dst2_data_stream_0_V_din ),
    .dst2_data_stream_0_V_full_n( image_filter_Duplicate_1080_1920_16_16_U0_dst2_data_stream_0_V_full_n ),
    .dst2_data_stream_0_V_write( image_filter_Duplicate_1080_1920_16_16_U0_dst2_data_stream_0_V_write ),
    .dst2_data_stream_1_V_din( image_filter_Duplicate_1080_1920_16_16_U0_dst2_data_stream_1_V_din ),
    .dst2_data_stream_1_V_full_n( image_filter_Duplicate_1080_1920_16_16_U0_dst2_data_stream_1_V_full_n ),
    .dst2_data_stream_1_V_write( image_filter_Duplicate_1080_1920_16_16_U0_dst2_data_stream_1_V_write )
);

image_filter_UVupsampling image_filter_UVupsampling_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_UVupsampling_U0_ap_start ),
    .ap_done( image_filter_UVupsampling_U0_ap_done ),
    .ap_continue( image_filter_UVupsampling_U0_ap_continue ),
    .ap_idle( image_filter_UVupsampling_U0_ap_idle ),
    .ap_ready( image_filter_UVupsampling_U0_ap_ready ),
    .yuv422_rows_V_read( image_filter_UVupsampling_U0_yuv422_rows_V_read ),
    .yuv422_cols_V_read( image_filter_UVupsampling_U0_yuv422_cols_V_read ),
    .yuv422_data_stream_0_V_dout( image_filter_UVupsampling_U0_yuv422_data_stream_0_V_dout ),
    .yuv422_data_stream_0_V_empty_n( image_filter_UVupsampling_U0_yuv422_data_stream_0_V_empty_n ),
    .yuv422_data_stream_0_V_read( image_filter_UVupsampling_U0_yuv422_data_stream_0_V_read ),
    .yuv422_data_stream_1_V_dout( image_filter_UVupsampling_U0_yuv422_data_stream_1_V_dout ),
    .yuv422_data_stream_1_V_empty_n( image_filter_UVupsampling_U0_yuv422_data_stream_1_V_empty_n ),
    .yuv422_data_stream_1_V_read( image_filter_UVupsampling_U0_yuv422_data_stream_1_V_read ),
    .yuv444_data_stream_0_V_din( image_filter_UVupsampling_U0_yuv444_data_stream_0_V_din ),
    .yuv444_data_stream_0_V_full_n( image_filter_UVupsampling_U0_yuv444_data_stream_0_V_full_n ),
    .yuv444_data_stream_0_V_write( image_filter_UVupsampling_U0_yuv444_data_stream_0_V_write ),
    .yuv444_data_stream_1_V_din( image_filter_UVupsampling_U0_yuv444_data_stream_1_V_din ),
    .yuv444_data_stream_1_V_full_n( image_filter_UVupsampling_U0_yuv444_data_stream_1_V_full_n ),
    .yuv444_data_stream_1_V_write( image_filter_UVupsampling_U0_yuv444_data_stream_1_V_write ),
    .yuv444_data_stream_2_V_din( image_filter_UVupsampling_U0_yuv444_data_stream_2_V_din ),
    .yuv444_data_stream_2_V_full_n( image_filter_UVupsampling_U0_yuv444_data_stream_2_V_full_n ),
    .yuv444_data_stream_2_V_write( image_filter_UVupsampling_U0_yuv444_data_stream_2_V_write )
);

image_filter_Split_1080_1920_16_0_s image_filter_Split_1080_1920_16_0_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_Split_1080_1920_16_0_U0_ap_start ),
    .ap_done( image_filter_Split_1080_1920_16_0_U0_ap_done ),
    .ap_continue( image_filter_Split_1080_1920_16_0_U0_ap_continue ),
    .ap_idle( image_filter_Split_1080_1920_16_0_U0_ap_idle ),
    .ap_ready( image_filter_Split_1080_1920_16_0_U0_ap_ready ),
    .src_rows_V_read( image_filter_Split_1080_1920_16_0_U0_src_rows_V_read ),
    .src_cols_V_read( image_filter_Split_1080_1920_16_0_U0_src_cols_V_read ),
    .src_data_stream_0_V_dout( image_filter_Split_1080_1920_16_0_U0_src_data_stream_0_V_dout ),
    .src_data_stream_0_V_empty_n( image_filter_Split_1080_1920_16_0_U0_src_data_stream_0_V_empty_n ),
    .src_data_stream_0_V_read( image_filter_Split_1080_1920_16_0_U0_src_data_stream_0_V_read ),
    .src_data_stream_1_V_dout( image_filter_Split_1080_1920_16_0_U0_src_data_stream_1_V_dout ),
    .src_data_stream_1_V_empty_n( image_filter_Split_1080_1920_16_0_U0_src_data_stream_1_V_empty_n ),
    .src_data_stream_1_V_read( image_filter_Split_1080_1920_16_0_U0_src_data_stream_1_V_read ),
    .dst0_rows_V_read( image_filter_Split_1080_1920_16_0_U0_dst0_rows_V_read ),
    .dst0_cols_V_read( image_filter_Split_1080_1920_16_0_U0_dst0_cols_V_read ),
    .dst0_data_stream_V_din( image_filter_Split_1080_1920_16_0_U0_dst0_data_stream_V_din ),
    .dst0_data_stream_V_full_n( image_filter_Split_1080_1920_16_0_U0_dst0_data_stream_V_full_n ),
    .dst0_data_stream_V_write( image_filter_Split_1080_1920_16_0_U0_dst0_data_stream_V_write ),
    .dst1_rows_V_read( image_filter_Split_1080_1920_16_0_U0_dst1_rows_V_read ),
    .dst1_cols_V_read( image_filter_Split_1080_1920_16_0_U0_dst1_cols_V_read ),
    .dst1_data_stream_V_din( image_filter_Split_1080_1920_16_0_U0_dst1_data_stream_V_din ),
    .dst1_data_stream_V_full_n( image_filter_Split_1080_1920_16_0_U0_dst1_data_stream_V_full_n ),
    .dst1_data_stream_V_write( image_filter_Split_1080_1920_16_0_U0_dst1_data_stream_V_write )
);

image_filter_Consume_1080_1920_0_s image_filter_Consume_1080_1920_0_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_Consume_1080_1920_0_U0_ap_start ),
    .ap_done( image_filter_Consume_1080_1920_0_U0_ap_done ),
    .ap_continue( image_filter_Consume_1080_1920_0_U0_ap_continue ),
    .ap_idle( image_filter_Consume_1080_1920_0_U0_ap_idle ),
    .ap_ready( image_filter_Consume_1080_1920_0_U0_ap_ready ),
    .src_rows_V_read( image_filter_Consume_1080_1920_0_U0_src_rows_V_read ),
    .src_cols_V_read( image_filter_Consume_1080_1920_0_U0_src_cols_V_read ),
    .src_data_stream_V_dout( image_filter_Consume_1080_1920_0_U0_src_data_stream_V_dout ),
    .src_data_stream_V_empty_n( image_filter_Consume_1080_1920_0_U0_src_data_stream_V_empty_n ),
    .src_data_stream_V_read( image_filter_Consume_1080_1920_0_U0_src_data_stream_V_read )
);

image_filter_FAST_t_opr image_filter_FAST_t_opr_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_FAST_t_opr_U0_ap_start ),
    .ap_done( image_filter_FAST_t_opr_U0_ap_done ),
    .ap_continue( image_filter_FAST_t_opr_U0_ap_continue ),
    .ap_idle( image_filter_FAST_t_opr_U0_ap_idle ),
    .ap_ready( image_filter_FAST_t_opr_U0_ap_ready ),
    .p_src_rows_V_read( image_filter_FAST_t_opr_U0_p_src_rows_V_read ),
    .p_src_cols_V_read( image_filter_FAST_t_opr_U0_p_src_cols_V_read ),
    .p_src_data_stream_V_dout( image_filter_FAST_t_opr_U0_p_src_data_stream_V_dout ),
    .p_src_data_stream_V_empty_n( image_filter_FAST_t_opr_U0_p_src_data_stream_V_empty_n ),
    .p_src_data_stream_V_read( image_filter_FAST_t_opr_U0_p_src_data_stream_V_read ),
    .p_mask_data_stream_V_din( image_filter_FAST_t_opr_U0_p_mask_data_stream_V_din ),
    .p_mask_data_stream_V_full_n( image_filter_FAST_t_opr_U0_p_mask_data_stream_V_full_n ),
    .p_mask_data_stream_V_write( image_filter_FAST_t_opr_U0_p_mask_data_stream_V_write )
);

image_filter_Dilate_0_0_1080_1920_s image_filter_Dilate_0_0_1080_1920_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_Dilate_0_0_1080_1920_U0_ap_start ),
    .ap_done( image_filter_Dilate_0_0_1080_1920_U0_ap_done ),
    .ap_continue( image_filter_Dilate_0_0_1080_1920_U0_ap_continue ),
    .ap_idle( image_filter_Dilate_0_0_1080_1920_U0_ap_idle ),
    .ap_ready( image_filter_Dilate_0_0_1080_1920_U0_ap_ready ),
    .p_src_rows_V_read( image_filter_Dilate_0_0_1080_1920_U0_p_src_rows_V_read ),
    .p_src_cols_V_read( image_filter_Dilate_0_0_1080_1920_U0_p_src_cols_V_read ),
    .p_src_data_stream_V_dout( image_filter_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_dout ),
    .p_src_data_stream_V_empty_n( image_filter_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_empty_n ),
    .p_src_data_stream_V_read( image_filter_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_read ),
    .p_dst_data_stream_V_din( image_filter_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_din ),
    .p_dst_data_stream_V_full_n( image_filter_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_full_n ),
    .p_dst_data_stream_V_write( image_filter_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_write )
);

image_filter_PaintMask_32_0_1080_1920_s image_filter_PaintMask_32_0_1080_1920_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_PaintMask_32_0_1080_1920_U0_ap_start ),
    .ap_done( image_filter_PaintMask_32_0_1080_1920_U0_ap_done ),
    .ap_continue( image_filter_PaintMask_32_0_1080_1920_U0_ap_continue ),
    .ap_idle( image_filter_PaintMask_32_0_1080_1920_U0_ap_idle ),
    .ap_ready( image_filter_PaintMask_32_0_1080_1920_U0_ap_ready ),
    .p_src_rows_V_read( image_filter_PaintMask_32_0_1080_1920_U0_p_src_rows_V_read ),
    .p_src_cols_V_read( image_filter_PaintMask_32_0_1080_1920_U0_p_src_cols_V_read ),
    .p_src_data_stream_0_V_dout( image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_0_V_dout ),
    .p_src_data_stream_0_V_empty_n( image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_0_V_empty_n ),
    .p_src_data_stream_0_V_read( image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_0_V_read ),
    .p_src_data_stream_1_V_dout( image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_1_V_dout ),
    .p_src_data_stream_1_V_empty_n( image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_1_V_empty_n ),
    .p_src_data_stream_1_V_read( image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_1_V_read ),
    .p_src_data_stream_2_V_dout( image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_2_V_dout ),
    .p_src_data_stream_2_V_empty_n( image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_2_V_empty_n ),
    .p_src_data_stream_2_V_read( image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_2_V_read ),
    .p_mask_rows_V_read( image_filter_PaintMask_32_0_1080_1920_U0_p_mask_rows_V_read ),
    .p_mask_cols_V_read( image_filter_PaintMask_32_0_1080_1920_U0_p_mask_cols_V_read ),
    .p_mask_data_stream_V_dout( image_filter_PaintMask_32_0_1080_1920_U0_p_mask_data_stream_V_dout ),
    .p_mask_data_stream_V_empty_n( image_filter_PaintMask_32_0_1080_1920_U0_p_mask_data_stream_V_empty_n ),
    .p_mask_data_stream_V_read( image_filter_PaintMask_32_0_1080_1920_U0_p_mask_data_stream_V_read ),
    .p_dst_rows_V_read( image_filter_PaintMask_32_0_1080_1920_U0_p_dst_rows_V_read ),
    .p_dst_cols_V_read( image_filter_PaintMask_32_0_1080_1920_U0_p_dst_cols_V_read ),
    .p_dst_data_stream_0_V_din( image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_0_V_din ),
    .p_dst_data_stream_0_V_full_n( image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_0_V_full_n ),
    .p_dst_data_stream_0_V_write( image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_0_V_write ),
    .p_dst_data_stream_1_V_din( image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_1_V_din ),
    .p_dst_data_stream_1_V_full_n( image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_1_V_full_n ),
    .p_dst_data_stream_1_V_write( image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_1_V_write ),
    .p_dst_data_stream_2_V_din( image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_2_V_din ),
    .p_dst_data_stream_2_V_full_n( image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_2_V_full_n ),
    .p_dst_data_stream_2_V_write( image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_2_V_write )
);

image_filter_UVdownsampling image_filter_UVdownsampling_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_UVdownsampling_U0_ap_start ),
    .ap_done( image_filter_UVdownsampling_U0_ap_done ),
    .ap_continue( image_filter_UVdownsampling_U0_ap_continue ),
    .ap_idle( image_filter_UVdownsampling_U0_ap_idle ),
    .ap_ready( image_filter_UVdownsampling_U0_ap_ready ),
    .yuv444_rows_V_read( image_filter_UVdownsampling_U0_yuv444_rows_V_read ),
    .yuv444_cols_V_read( image_filter_UVdownsampling_U0_yuv444_cols_V_read ),
    .yuv444_data_stream_0_V_dout( image_filter_UVdownsampling_U0_yuv444_data_stream_0_V_dout ),
    .yuv444_data_stream_0_V_empty_n( image_filter_UVdownsampling_U0_yuv444_data_stream_0_V_empty_n ),
    .yuv444_data_stream_0_V_read( image_filter_UVdownsampling_U0_yuv444_data_stream_0_V_read ),
    .yuv444_data_stream_1_V_dout( image_filter_UVdownsampling_U0_yuv444_data_stream_1_V_dout ),
    .yuv444_data_stream_1_V_empty_n( image_filter_UVdownsampling_U0_yuv444_data_stream_1_V_empty_n ),
    .yuv444_data_stream_1_V_read( image_filter_UVdownsampling_U0_yuv444_data_stream_1_V_read ),
    .yuv444_data_stream_2_V_dout( image_filter_UVdownsampling_U0_yuv444_data_stream_2_V_dout ),
    .yuv444_data_stream_2_V_empty_n( image_filter_UVdownsampling_U0_yuv444_data_stream_2_V_empty_n ),
    .yuv444_data_stream_2_V_read( image_filter_UVdownsampling_U0_yuv444_data_stream_2_V_read ),
    .yuv422_data_stream_0_V_din( image_filter_UVdownsampling_U0_yuv422_data_stream_0_V_din ),
    .yuv422_data_stream_0_V_full_n( image_filter_UVdownsampling_U0_yuv422_data_stream_0_V_full_n ),
    .yuv422_data_stream_0_V_write( image_filter_UVdownsampling_U0_yuv422_data_stream_0_V_write ),
    .yuv422_data_stream_1_V_din( image_filter_UVdownsampling_U0_yuv422_data_stream_1_V_din ),
    .yuv422_data_stream_1_V_full_n( image_filter_UVdownsampling_U0_yuv422_data_stream_1_V_full_n ),
    .yuv422_data_stream_1_V_write( image_filter_UVdownsampling_U0_yuv422_data_stream_1_V_write )
);

image_filter_Mat2AXIvideo image_filter_Mat2AXIvideo_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( image_filter_Mat2AXIvideo_U0_ap_start ),
    .ap_done( image_filter_Mat2AXIvideo_U0_ap_done ),
    .ap_continue( image_filter_Mat2AXIvideo_U0_ap_continue ),
    .ap_idle( image_filter_Mat2AXIvideo_U0_ap_idle ),
    .ap_ready( image_filter_Mat2AXIvideo_U0_ap_ready ),
    .img_rows_V_read( image_filter_Mat2AXIvideo_U0_img_rows_V_read ),
    .img_cols_V_read( image_filter_Mat2AXIvideo_U0_img_cols_V_read ),
    .img_data_stream_0_V_dout( image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_dout ),
    .img_data_stream_0_V_empty_n( image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_empty_n ),
    .img_data_stream_0_V_read( image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_read ),
    .img_data_stream_1_V_dout( image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_dout ),
    .img_data_stream_1_V_empty_n( image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_empty_n ),
    .img_data_stream_1_V_read( image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_read ),
    .video_out_TDATA( image_filter_Mat2AXIvideo_U0_video_out_TDATA ),
    .video_out_TVALID( image_filter_Mat2AXIvideo_U0_video_out_TVALID ),
    .video_out_TREADY( image_filter_Mat2AXIvideo_U0_video_out_TREADY ),
    .video_out_TKEEP( image_filter_Mat2AXIvideo_U0_video_out_TKEEP ),
    .video_out_TSTRB( image_filter_Mat2AXIvideo_U0_video_out_TSTRB ),
    .video_out_TUSER( image_filter_Mat2AXIvideo_U0_video_out_TUSER ),
    .video_out_TLAST( image_filter_Mat2AXIvideo_U0_video_out_TLAST ),
    .video_out_TID( image_filter_Mat2AXIvideo_U0_video_out_TID ),
    .video_out_TDEST( image_filter_Mat2AXIvideo_U0_video_out_TDEST )
);

FIFO_image_filter_img_0_rows_V_channel img_0_rows_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_0_rows_V_channel_U_ap_dummy_ce ),
    .if_write_ce( img_0_rows_V_channel_U_ap_dummy_ce ),
    .if_din( img_0_rows_V_channel_din ),
    .if_full_n( img_0_rows_V_channel_full_n ),
    .if_write( img_0_rows_V_channel_write ),
    .if_dout( img_0_rows_V_channel_dout ),
    .if_empty_n( img_0_rows_V_channel_empty_n ),
    .if_read( img_0_rows_V_channel_read )
);

FIFO_image_filter_img_0_rows_V_channel1 img_0_rows_V_channel1_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_0_rows_V_channel1_U_ap_dummy_ce ),
    .if_write_ce( img_0_rows_V_channel1_U_ap_dummy_ce ),
    .if_din( img_0_rows_V_channel1_din ),
    .if_full_n( img_0_rows_V_channel1_full_n ),
    .if_write( img_0_rows_V_channel1_write ),
    .if_dout( img_0_rows_V_channel1_dout ),
    .if_empty_n( img_0_rows_V_channel1_empty_n ),
    .if_read( img_0_rows_V_channel1_read )
);

FIFO_image_filter_img_0_cols_V_channel img_0_cols_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_0_cols_V_channel_U_ap_dummy_ce ),
    .if_write_ce( img_0_cols_V_channel_U_ap_dummy_ce ),
    .if_din( img_0_cols_V_channel_din ),
    .if_full_n( img_0_cols_V_channel_full_n ),
    .if_write( img_0_cols_V_channel_write ),
    .if_dout( img_0_cols_V_channel_dout ),
    .if_empty_n( img_0_cols_V_channel_empty_n ),
    .if_read( img_0_cols_V_channel_read )
);

FIFO_image_filter_img_0_cols_V_channel1 img_0_cols_V_channel1_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_0_cols_V_channel1_U_ap_dummy_ce ),
    .if_write_ce( img_0_cols_V_channel1_U_ap_dummy_ce ),
    .if_din( img_0_cols_V_channel1_din ),
    .if_full_n( img_0_cols_V_channel1_full_n ),
    .if_write( img_0_cols_V_channel1_write ),
    .if_dout( img_0_cols_V_channel1_dout ),
    .if_empty_n( img_0_cols_V_channel1_empty_n ),
    .if_read( img_0_cols_V_channel1_read )
);

FIFO_image_filter_img_1_rows_V img_1_rows_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_1_rows_V_U_ap_dummy_ce ),
    .if_write_ce( img_1_rows_V_U_ap_dummy_ce ),
    .if_din( img_1_rows_V_din ),
    .if_full_n( img_1_rows_V_full_n ),
    .if_write( img_1_rows_V_write ),
    .if_dout( img_1_rows_V_dout ),
    .if_empty_n( img_1_rows_V_empty_n ),
    .if_read( img_1_rows_V_read )
);

FIFO_image_filter_img_1_rows_V_channel img_1_rows_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_1_rows_V_channel_U_ap_dummy_ce ),
    .if_write_ce( img_1_rows_V_channel_U_ap_dummy_ce ),
    .if_din( img_1_rows_V_channel_din ),
    .if_full_n( img_1_rows_V_channel_full_n ),
    .if_write( img_1_rows_V_channel_write ),
    .if_dout( img_1_rows_V_channel_dout ),
    .if_empty_n( img_1_rows_V_channel_empty_n ),
    .if_read( img_1_rows_V_channel_read )
);

FIFO_image_filter_img_1_cols_V img_1_cols_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_1_cols_V_U_ap_dummy_ce ),
    .if_write_ce( img_1_cols_V_U_ap_dummy_ce ),
    .if_din( img_1_cols_V_din ),
    .if_full_n( img_1_cols_V_full_n ),
    .if_write( img_1_cols_V_write ),
    .if_dout( img_1_cols_V_dout ),
    .if_empty_n( img_1_cols_V_empty_n ),
    .if_read( img_1_cols_V_read )
);

FIFO_image_filter_img_1_cols_V_channel img_1_cols_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_1_cols_V_channel_U_ap_dummy_ce ),
    .if_write_ce( img_1_cols_V_channel_U_ap_dummy_ce ),
    .if_din( img_1_cols_V_channel_din ),
    .if_full_n( img_1_cols_V_channel_full_n ),
    .if_write( img_1_cols_V_channel_write ),
    .if_dout( img_1_cols_V_channel_dout ),
    .if_empty_n( img_1_cols_V_channel_empty_n ),
    .if_read( img_1_cols_V_channel_read )
);

FIFO_image_filter_img_1_rows_V_31 img_1_rows_V_31_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_1_rows_V_31_U_ap_dummy_ce ),
    .if_write_ce( img_1_rows_V_31_U_ap_dummy_ce ),
    .if_din( img_1_rows_V_31_din ),
    .if_full_n( img_1_rows_V_31_full_n ),
    .if_write( img_1_rows_V_31_write ),
    .if_dout( img_1_rows_V_31_dout ),
    .if_empty_n( img_1_rows_V_31_empty_n ),
    .if_read( img_1_rows_V_31_read )
);

FIFO_image_filter_img_1_cols_V_32 img_1_cols_V_32_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_1_cols_V_32_U_ap_dummy_ce ),
    .if_write_ce( img_1_cols_V_32_U_ap_dummy_ce ),
    .if_din( img_1_cols_V_32_din ),
    .if_full_n( img_1_cols_V_32_full_n ),
    .if_write( img_1_cols_V_32_write ),
    .if_dout( img_1_cols_V_32_dout ),
    .if_empty_n( img_1_cols_V_32_empty_n ),
    .if_read( img_1_cols_V_32_read )
);

FIFO_image_filter_img_2_rows_V img_2_rows_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_2_rows_V_U_ap_dummy_ce ),
    .if_write_ce( img_2_rows_V_U_ap_dummy_ce ),
    .if_din( img_2_rows_V_din ),
    .if_full_n( img_2_rows_V_full_n ),
    .if_write( img_2_rows_V_write ),
    .if_dout( img_2_rows_V_dout ),
    .if_empty_n( img_2_rows_V_empty_n ),
    .if_read( img_2_rows_V_read )
);

FIFO_image_filter_img_2_rows_V_channel img_2_rows_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_2_rows_V_channel_U_ap_dummy_ce ),
    .if_write_ce( img_2_rows_V_channel_U_ap_dummy_ce ),
    .if_din( img_2_rows_V_channel_din ),
    .if_full_n( img_2_rows_V_channel_full_n ),
    .if_write( img_2_rows_V_channel_write ),
    .if_dout( img_2_rows_V_channel_dout ),
    .if_empty_n( img_2_rows_V_channel_empty_n ),
    .if_read( img_2_rows_V_channel_read )
);

FIFO_image_filter_img_2_cols_V img_2_cols_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_2_cols_V_U_ap_dummy_ce ),
    .if_write_ce( img_2_cols_V_U_ap_dummy_ce ),
    .if_din( img_2_cols_V_din ),
    .if_full_n( img_2_cols_V_full_n ),
    .if_write( img_2_cols_V_write ),
    .if_dout( img_2_cols_V_dout ),
    .if_empty_n( img_2_cols_V_empty_n ),
    .if_read( img_2_cols_V_read )
);

FIFO_image_filter_img_2_cols_V_channel img_2_cols_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_2_cols_V_channel_U_ap_dummy_ce ),
    .if_write_ce( img_2_cols_V_channel_U_ap_dummy_ce ),
    .if_din( img_2_cols_V_channel_din ),
    .if_full_n( img_2_cols_V_channel_full_n ),
    .if_write( img_2_cols_V_channel_write ),
    .if_dout( img_2_cols_V_channel_dout ),
    .if_empty_n( img_2_cols_V_channel_empty_n ),
    .if_read( img_2_cols_V_channel_read )
);

FIFO_image_filter_img_2_Y_rows_V img_2_Y_rows_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_2_Y_rows_V_U_ap_dummy_ce ),
    .if_write_ce( img_2_Y_rows_V_U_ap_dummy_ce ),
    .if_din( img_2_Y_rows_V_din ),
    .if_full_n( img_2_Y_rows_V_full_n ),
    .if_write( img_2_Y_rows_V_write ),
    .if_dout( img_2_Y_rows_V_dout ),
    .if_empty_n( img_2_Y_rows_V_empty_n ),
    .if_read( img_2_Y_rows_V_read )
);

FIFO_image_filter_img_2_Y_rows_V_channel img_2_Y_rows_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_2_Y_rows_V_channel_U_ap_dummy_ce ),
    .if_write_ce( img_2_Y_rows_V_channel_U_ap_dummy_ce ),
    .if_din( img_2_Y_rows_V_channel_din ),
    .if_full_n( img_2_Y_rows_V_channel_full_n ),
    .if_write( img_2_Y_rows_V_channel_write ),
    .if_dout( img_2_Y_rows_V_channel_dout ),
    .if_empty_n( img_2_Y_rows_V_channel_empty_n ),
    .if_read( img_2_Y_rows_V_channel_read )
);

FIFO_image_filter_img_2_Y_cols_V img_2_Y_cols_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_2_Y_cols_V_U_ap_dummy_ce ),
    .if_write_ce( img_2_Y_cols_V_U_ap_dummy_ce ),
    .if_din( img_2_Y_cols_V_din ),
    .if_full_n( img_2_Y_cols_V_full_n ),
    .if_write( img_2_Y_cols_V_write ),
    .if_dout( img_2_Y_cols_V_dout ),
    .if_empty_n( img_2_Y_cols_V_empty_n ),
    .if_read( img_2_Y_cols_V_read )
);

FIFO_image_filter_img_2_Y_cols_V_channel img_2_Y_cols_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_2_Y_cols_V_channel_U_ap_dummy_ce ),
    .if_write_ce( img_2_Y_cols_V_channel_U_ap_dummy_ce ),
    .if_din( img_2_Y_cols_V_channel_din ),
    .if_full_n( img_2_Y_cols_V_channel_full_n ),
    .if_write( img_2_Y_cols_V_channel_write ),
    .if_dout( img_2_Y_cols_V_channel_dout ),
    .if_empty_n( img_2_Y_cols_V_channel_empty_n ),
    .if_read( img_2_Y_cols_V_channel_read )
);

FIFO_image_filter_img_2_UV_rows_V img_2_UV_rows_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_2_UV_rows_V_U_ap_dummy_ce ),
    .if_write_ce( img_2_UV_rows_V_U_ap_dummy_ce ),
    .if_din( img_2_UV_rows_V_din ),
    .if_full_n( img_2_UV_rows_V_full_n ),
    .if_write( img_2_UV_rows_V_write ),
    .if_dout( img_2_UV_rows_V_dout ),
    .if_empty_n( img_2_UV_rows_V_empty_n ),
    .if_read( img_2_UV_rows_V_read )
);

FIFO_image_filter_img_2_UV_rows_V_channel img_2_UV_rows_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_2_UV_rows_V_channel_U_ap_dummy_ce ),
    .if_write_ce( img_2_UV_rows_V_channel_U_ap_dummy_ce ),
    .if_din( img_2_UV_rows_V_channel_din ),
    .if_full_n( img_2_UV_rows_V_channel_full_n ),
    .if_write( img_2_UV_rows_V_channel_write ),
    .if_dout( img_2_UV_rows_V_channel_dout ),
    .if_empty_n( img_2_UV_rows_V_channel_empty_n ),
    .if_read( img_2_UV_rows_V_channel_read )
);

FIFO_image_filter_img_2_UV_cols_V img_2_UV_cols_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_2_UV_cols_V_U_ap_dummy_ce ),
    .if_write_ce( img_2_UV_cols_V_U_ap_dummy_ce ),
    .if_din( img_2_UV_cols_V_din ),
    .if_full_n( img_2_UV_cols_V_full_n ),
    .if_write( img_2_UV_cols_V_write ),
    .if_dout( img_2_UV_cols_V_dout ),
    .if_empty_n( img_2_UV_cols_V_empty_n ),
    .if_read( img_2_UV_cols_V_read )
);

FIFO_image_filter_img_2_UV_cols_V_channel img_2_UV_cols_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_2_UV_cols_V_channel_U_ap_dummy_ce ),
    .if_write_ce( img_2_UV_cols_V_channel_U_ap_dummy_ce ),
    .if_din( img_2_UV_cols_V_channel_din ),
    .if_full_n( img_2_UV_cols_V_channel_full_n ),
    .if_write( img_2_UV_cols_V_channel_write ),
    .if_dout( img_2_UV_cols_V_channel_dout ),
    .if_empty_n( img_2_UV_cols_V_channel_empty_n ),
    .if_read( img_2_UV_cols_V_channel_read )
);

FIFO_image_filter_img_3_rows_V img_3_rows_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_3_rows_V_U_ap_dummy_ce ),
    .if_write_ce( img_3_rows_V_U_ap_dummy_ce ),
    .if_din( img_3_rows_V_din ),
    .if_full_n( img_3_rows_V_full_n ),
    .if_write( img_3_rows_V_write ),
    .if_dout( img_3_rows_V_dout ),
    .if_empty_n( img_3_rows_V_empty_n ),
    .if_read( img_3_rows_V_read )
);

FIFO_image_filter_img_3_rows_V_channel img_3_rows_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_3_rows_V_channel_U_ap_dummy_ce ),
    .if_write_ce( img_3_rows_V_channel_U_ap_dummy_ce ),
    .if_din( img_3_rows_V_channel_din ),
    .if_full_n( img_3_rows_V_channel_full_n ),
    .if_write( img_3_rows_V_channel_write ),
    .if_dout( img_3_rows_V_channel_dout ),
    .if_empty_n( img_3_rows_V_channel_empty_n ),
    .if_read( img_3_rows_V_channel_read )
);

FIFO_image_filter_img_3_cols_V img_3_cols_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_3_cols_V_U_ap_dummy_ce ),
    .if_write_ce( img_3_cols_V_U_ap_dummy_ce ),
    .if_din( img_3_cols_V_din ),
    .if_full_n( img_3_cols_V_full_n ),
    .if_write( img_3_cols_V_write ),
    .if_dout( img_3_cols_V_dout ),
    .if_empty_n( img_3_cols_V_empty_n ),
    .if_read( img_3_cols_V_read )
);

FIFO_image_filter_img_3_cols_V_channel img_3_cols_V_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_3_cols_V_channel_U_ap_dummy_ce ),
    .if_write_ce( img_3_cols_V_channel_U_ap_dummy_ce ),
    .if_din( img_3_cols_V_channel_din ),
    .if_full_n( img_3_cols_V_channel_full_n ),
    .if_write( img_3_cols_V_channel_write ),
    .if_dout( img_3_cols_V_channel_dout ),
    .if_empty_n( img_3_cols_V_channel_empty_n ),
    .if_read( img_3_cols_V_channel_read )
);

FIFO_image_filter_img_3_rows_V_33 img_3_rows_V_33_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_3_rows_V_33_U_ap_dummy_ce ),
    .if_write_ce( img_3_rows_V_33_U_ap_dummy_ce ),
    .if_din( img_3_rows_V_33_din ),
    .if_full_n( img_3_rows_V_33_full_n ),
    .if_write( img_3_rows_V_33_write ),
    .if_dout( img_3_rows_V_33_dout ),
    .if_empty_n( img_3_rows_V_33_empty_n ),
    .if_read( img_3_rows_V_33_read )
);

FIFO_image_filter_img_3_cols_V_34 img_3_cols_V_34_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_3_cols_V_34_U_ap_dummy_ce ),
    .if_write_ce( img_3_cols_V_34_U_ap_dummy_ce ),
    .if_din( img_3_cols_V_34_din ),
    .if_full_n( img_3_cols_V_34_full_n ),
    .if_write( img_3_cols_V_34_write ),
    .if_dout( img_3_cols_V_34_dout ),
    .if_empty_n( img_3_cols_V_34_empty_n ),
    .if_read( img_3_cols_V_34_read )
);

FIFO_image_filter_mask_rows_V mask_rows_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( mask_rows_V_U_ap_dummy_ce ),
    .if_write_ce( mask_rows_V_U_ap_dummy_ce ),
    .if_din( mask_rows_V_din ),
    .if_full_n( mask_rows_V_full_n ),
    .if_write( mask_rows_V_write ),
    .if_dout( mask_rows_V_dout ),
    .if_empty_n( mask_rows_V_empty_n ),
    .if_read( mask_rows_V_read )
);

FIFO_image_filter_mask_cols_V mask_cols_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( mask_cols_V_U_ap_dummy_ce ),
    .if_write_ce( mask_cols_V_U_ap_dummy_ce ),
    .if_din( mask_cols_V_din ),
    .if_full_n( mask_cols_V_full_n ),
    .if_write( mask_cols_V_write ),
    .if_dout( mask_cols_V_dout ),
    .if_empty_n( mask_cols_V_empty_n ),
    .if_read( mask_cols_V_read )
);

FIFO_image_filter_dmask_rows_V dmask_rows_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( dmask_rows_V_U_ap_dummy_ce ),
    .if_write_ce( dmask_rows_V_U_ap_dummy_ce ),
    .if_din( dmask_rows_V_din ),
    .if_full_n( dmask_rows_V_full_n ),
    .if_write( dmask_rows_V_write ),
    .if_dout( dmask_rows_V_dout ),
    .if_empty_n( dmask_rows_V_empty_n ),
    .if_read( dmask_rows_V_read )
);

FIFO_image_filter_dmask_cols_V dmask_cols_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( dmask_cols_V_U_ap_dummy_ce ),
    .if_write_ce( dmask_cols_V_U_ap_dummy_ce ),
    .if_din( dmask_cols_V_din ),
    .if_full_n( dmask_cols_V_full_n ),
    .if_write( dmask_cols_V_write ),
    .if_dout( dmask_cols_V_dout ),
    .if_empty_n( dmask_cols_V_empty_n ),
    .if_read( dmask_cols_V_read )
);

FIFO_image_filter_img_0_data_stream_0_V img_0_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_0_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( img_0_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( img_0_data_stream_0_V_din ),
    .if_full_n( img_0_data_stream_0_V_full_n ),
    .if_write( img_0_data_stream_0_V_write ),
    .if_dout( img_0_data_stream_0_V_dout ),
    .if_empty_n( img_0_data_stream_0_V_empty_n ),
    .if_read( img_0_data_stream_0_V_read )
);

FIFO_image_filter_img_0_data_stream_1_V img_0_data_stream_1_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_0_data_stream_1_V_U_ap_dummy_ce ),
    .if_write_ce( img_0_data_stream_1_V_U_ap_dummy_ce ),
    .if_din( img_0_data_stream_1_V_din ),
    .if_full_n( img_0_data_stream_1_V_full_n ),
    .if_write( img_0_data_stream_1_V_write ),
    .if_dout( img_0_data_stream_1_V_dout ),
    .if_empty_n( img_0_data_stream_1_V_empty_n ),
    .if_read( img_0_data_stream_1_V_read )
);

FIFO_image_filter_img_1_data_stream_0_V img_1_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_1_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( img_1_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( img_1_data_stream_0_V_din ),
    .if_full_n( img_1_data_stream_0_V_full_n ),
    .if_write( img_1_data_stream_0_V_write ),
    .if_dout( img_1_data_stream_0_V_dout ),
    .if_empty_n( img_1_data_stream_0_V_empty_n ),
    .if_read( img_1_data_stream_0_V_read )
);

FIFO_image_filter_img_1_data_stream_1_V img_1_data_stream_1_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_1_data_stream_1_V_U_ap_dummy_ce ),
    .if_write_ce( img_1_data_stream_1_V_U_ap_dummy_ce ),
    .if_din( img_1_data_stream_1_V_din ),
    .if_full_n( img_1_data_stream_1_V_full_n ),
    .if_write( img_1_data_stream_1_V_write ),
    .if_dout( img_1_data_stream_1_V_dout ),
    .if_empty_n( img_1_data_stream_1_V_empty_n ),
    .if_read( img_1_data_stream_1_V_read )
);

FIFO_image_filter_img_2_data_stream_0_V img_2_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_2_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( img_2_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( img_2_data_stream_0_V_din ),
    .if_full_n( img_2_data_stream_0_V_full_n ),
    .if_write( img_2_data_stream_0_V_write ),
    .if_dout( img_2_data_stream_0_V_dout ),
    .if_empty_n( img_2_data_stream_0_V_empty_n ),
    .if_read( img_2_data_stream_0_V_read )
);

FIFO_image_filter_img_2_data_stream_1_V img_2_data_stream_1_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_2_data_stream_1_V_U_ap_dummy_ce ),
    .if_write_ce( img_2_data_stream_1_V_U_ap_dummy_ce ),
    .if_din( img_2_data_stream_1_V_din ),
    .if_full_n( img_2_data_stream_1_V_full_n ),
    .if_write( img_2_data_stream_1_V_write ),
    .if_dout( img_2_data_stream_1_V_dout ),
    .if_empty_n( img_2_data_stream_1_V_empty_n ),
    .if_read( img_2_data_stream_1_V_read )
);

FIFO_image_filter_img_1_data_stream_0_V_13 img_1_data_stream_0_V_13_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_1_data_stream_0_V_13_U_ap_dummy_ce ),
    .if_write_ce( img_1_data_stream_0_V_13_U_ap_dummy_ce ),
    .if_din( img_1_data_stream_0_V_13_din ),
    .if_full_n( img_1_data_stream_0_V_13_full_n ),
    .if_write( img_1_data_stream_0_V_13_write ),
    .if_dout( img_1_data_stream_0_V_13_dout ),
    .if_empty_n( img_1_data_stream_0_V_13_empty_n ),
    .if_read( img_1_data_stream_0_V_13_read )
);

FIFO_image_filter_img_1_data_stream_1_V_15 img_1_data_stream_1_V_15_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_1_data_stream_1_V_15_U_ap_dummy_ce ),
    .if_write_ce( img_1_data_stream_1_V_15_U_ap_dummy_ce ),
    .if_din( img_1_data_stream_1_V_15_din ),
    .if_full_n( img_1_data_stream_1_V_15_full_n ),
    .if_write( img_1_data_stream_1_V_15_write ),
    .if_dout( img_1_data_stream_1_V_15_dout ),
    .if_empty_n( img_1_data_stream_1_V_15_empty_n ),
    .if_read( img_1_data_stream_1_V_15_read )
);

FIFO_image_filter_img_1_data_stream_2_V img_1_data_stream_2_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_1_data_stream_2_V_U_ap_dummy_ce ),
    .if_write_ce( img_1_data_stream_2_V_U_ap_dummy_ce ),
    .if_din( img_1_data_stream_2_V_din ),
    .if_full_n( img_1_data_stream_2_V_full_n ),
    .if_write( img_1_data_stream_2_V_write ),
    .if_dout( img_1_data_stream_2_V_dout ),
    .if_empty_n( img_1_data_stream_2_V_empty_n ),
    .if_read( img_1_data_stream_2_V_read )
);

FIFO_image_filter_img_2_Y_data_stream_0_V img_2_Y_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_2_Y_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( img_2_Y_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( img_2_Y_data_stream_0_V_din ),
    .if_full_n( img_2_Y_data_stream_0_V_full_n ),
    .if_write( img_2_Y_data_stream_0_V_write ),
    .if_dout( img_2_Y_data_stream_0_V_dout ),
    .if_empty_n( img_2_Y_data_stream_0_V_empty_n ),
    .if_read( img_2_Y_data_stream_0_V_read )
);

FIFO_image_filter_img_2_UV_data_stream_0_V img_2_UV_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_2_UV_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( img_2_UV_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( img_2_UV_data_stream_0_V_din ),
    .if_full_n( img_2_UV_data_stream_0_V_full_n ),
    .if_write( img_2_UV_data_stream_0_V_write ),
    .if_dout( img_2_UV_data_stream_0_V_dout ),
    .if_empty_n( img_2_UV_data_stream_0_V_empty_n ),
    .if_read( img_2_UV_data_stream_0_V_read )
);

FIFO_image_filter_mask_data_stream_0_V mask_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( mask_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( mask_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( mask_data_stream_0_V_din ),
    .if_full_n( mask_data_stream_0_V_full_n ),
    .if_write( mask_data_stream_0_V_write ),
    .if_dout( mask_data_stream_0_V_dout ),
    .if_empty_n( mask_data_stream_0_V_empty_n ),
    .if_read( mask_data_stream_0_V_read )
);

FIFO_image_filter_dmask_data_stream_0_V dmask_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( dmask_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( dmask_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( dmask_data_stream_0_V_din ),
    .if_full_n( dmask_data_stream_0_V_full_n ),
    .if_write( dmask_data_stream_0_V_write ),
    .if_dout( dmask_data_stream_0_V_dout ),
    .if_empty_n( dmask_data_stream_0_V_empty_n ),
    .if_read( dmask_data_stream_0_V_read )
);

FIFO_image_filter_img_3_data_stream_0_V img_3_data_stream_0_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_3_data_stream_0_V_U_ap_dummy_ce ),
    .if_write_ce( img_3_data_stream_0_V_U_ap_dummy_ce ),
    .if_din( img_3_data_stream_0_V_din ),
    .if_full_n( img_3_data_stream_0_V_full_n ),
    .if_write( img_3_data_stream_0_V_write ),
    .if_dout( img_3_data_stream_0_V_dout ),
    .if_empty_n( img_3_data_stream_0_V_empty_n ),
    .if_read( img_3_data_stream_0_V_read )
);

FIFO_image_filter_img_3_data_stream_1_V img_3_data_stream_1_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_3_data_stream_1_V_U_ap_dummy_ce ),
    .if_write_ce( img_3_data_stream_1_V_U_ap_dummy_ce ),
    .if_din( img_3_data_stream_1_V_din ),
    .if_full_n( img_3_data_stream_1_V_full_n ),
    .if_write( img_3_data_stream_1_V_write ),
    .if_dout( img_3_data_stream_1_V_dout ),
    .if_empty_n( img_3_data_stream_1_V_empty_n ),
    .if_read( img_3_data_stream_1_V_read )
);

FIFO_image_filter_img_3_data_stream_2_V img_3_data_stream_2_V_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_3_data_stream_2_V_U_ap_dummy_ce ),
    .if_write_ce( img_3_data_stream_2_V_U_ap_dummy_ce ),
    .if_din( img_3_data_stream_2_V_din ),
    .if_full_n( img_3_data_stream_2_V_full_n ),
    .if_write( img_3_data_stream_2_V_write ),
    .if_dout( img_3_data_stream_2_V_dout ),
    .if_empty_n( img_3_data_stream_2_V_empty_n ),
    .if_read( img_3_data_stream_2_V_read )
);

FIFO_image_filter_img_3_data_stream_0_V_25 img_3_data_stream_0_V_25_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_3_data_stream_0_V_25_U_ap_dummy_ce ),
    .if_write_ce( img_3_data_stream_0_V_25_U_ap_dummy_ce ),
    .if_din( img_3_data_stream_0_V_25_din ),
    .if_full_n( img_3_data_stream_0_V_25_full_n ),
    .if_write( img_3_data_stream_0_V_25_write ),
    .if_dout( img_3_data_stream_0_V_25_dout ),
    .if_empty_n( img_3_data_stream_0_V_25_empty_n ),
    .if_read( img_3_data_stream_0_V_25_read )
);

FIFO_image_filter_img_3_data_stream_1_V_27 img_3_data_stream_1_V_27_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( img_3_data_stream_1_V_27_U_ap_dummy_ce ),
    .if_write_ce( img_3_data_stream_1_V_27_U_ap_dummy_ce ),
    .if_din( img_3_data_stream_1_V_27_din ),
    .if_full_n( img_3_data_stream_1_V_27_full_n ),
    .if_write( img_3_data_stream_1_V_27_write ),
    .if_dout( img_3_data_stream_1_V_27_dout ),
    .if_empty_n( img_3_data_stream_1_V_27_empty_n ),
    .if_read( img_3_data_stream_1_V_27_read )
);



/// ap_reg_procdone_image_filter_AXIvideo2Mat_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_AXIvideo2Mat_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_AXIvideo2Mat_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_AXIvideo2Mat_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_AXIvideo2Mat_U0_ap_done)) begin
            ap_reg_procdone_image_filter_AXIvideo2Mat_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_Block_proc_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_Block_proc_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_Block_proc_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_Block_proc_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done)) begin
            ap_reg_procdone_image_filter_Block_proc_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_Consume_1080_1920_0_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_Consume_1080_1920_0_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_Consume_1080_1920_0_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_Consume_1080_1920_0_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_Consume_1080_1920_0_U0_ap_done)) begin
            ap_reg_procdone_image_filter_Consume_1080_1920_0_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_Dilate_0_0_1080_1920_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_Dilate_0_0_1080_1920_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_Dilate_0_0_1080_1920_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_Dilate_0_0_1080_1920_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_Dilate_0_0_1080_1920_U0_ap_done)) begin
            ap_reg_procdone_image_filter_Dilate_0_0_1080_1920_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_Duplicate_1080_1920_16_16_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_Duplicate_1080_1920_16_16_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_Duplicate_1080_1920_16_16_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_Duplicate_1080_1920_16_16_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_Duplicate_1080_1920_16_16_U0_ap_done)) begin
            ap_reg_procdone_image_filter_Duplicate_1080_1920_16_16_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_FAST_t_opr_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_FAST_t_opr_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_FAST_t_opr_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_FAST_t_opr_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_FAST_t_opr_U0_ap_done)) begin
            ap_reg_procdone_image_filter_FAST_t_opr_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_Mat2AXIvideo_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_Mat2AXIvideo_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_Mat2AXIvideo_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_Mat2AXIvideo_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_Mat2AXIvideo_U0_ap_done)) begin
            ap_reg_procdone_image_filter_Mat2AXIvideo_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_PaintMask_32_0_1080_1920_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_PaintMask_32_0_1080_1920_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_PaintMask_32_0_1080_1920_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_PaintMask_32_0_1080_1920_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_PaintMask_32_0_1080_1920_U0_ap_done)) begin
            ap_reg_procdone_image_filter_PaintMask_32_0_1080_1920_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_Split_1080_1920_16_0_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_Split_1080_1920_16_0_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_Split_1080_1920_16_0_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_Split_1080_1920_16_0_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_Split_1080_1920_16_0_U0_ap_done)) begin
            ap_reg_procdone_image_filter_Split_1080_1920_16_0_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_UVdownsampling_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_UVdownsampling_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_UVdownsampling_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_UVdownsampling_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_UVdownsampling_U0_ap_done)) begin
            ap_reg_procdone_image_filter_UVdownsampling_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_image_filter_UVupsampling_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_image_filter_UVupsampling_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_image_filter_UVupsampling_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_image_filter_UVupsampling_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_UVupsampling_U0_ap_done)) begin
            ap_reg_procdone_image_filter_UVupsampling_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_dmask_cols_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_dmask_cols_V_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_dmask_cols_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_dmask_cols_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == dmask_cols_V_full_n))) begin
            ap_reg_ready_dmask_cols_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_dmask_rows_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_dmask_rows_V_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_dmask_rows_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_dmask_rows_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == dmask_rows_V_full_n))) begin
            ap_reg_ready_dmask_rows_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_image_filter_AXIvideo2Mat_U0_ap_ready assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_image_filter_AXIvideo2Mat_U0_ap_ready
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_image_filter_AXIvideo2Mat_U0_ap_ready <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_top_allready))) begin
            ap_reg_ready_image_filter_AXIvideo2Mat_U0_ap_ready <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_AXIvideo2Mat_U0_ap_ready)) begin
            ap_reg_ready_image_filter_AXIvideo2Mat_U0_ap_ready <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_image_filter_Block_proc_U0_ap_ready assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_image_filter_Block_proc_U0_ap_ready
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_image_filter_Block_proc_U0_ap_ready <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_top_allready))) begin
            ap_reg_ready_image_filter_Block_proc_U0_ap_ready <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == image_filter_Block_proc_U0_ap_ready)) begin
            ap_reg_ready_image_filter_Block_proc_U0_ap_ready <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_0_cols_V_channel1_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_0_cols_V_channel1_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_0_cols_V_channel1_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_0_cols_V_channel1_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_0_cols_V_channel1_full_n))) begin
            ap_reg_ready_img_0_cols_V_channel1_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_0_cols_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_0_cols_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_0_cols_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_0_cols_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_0_cols_V_channel_full_n))) begin
            ap_reg_ready_img_0_cols_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_0_rows_V_channel1_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_0_rows_V_channel1_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_0_rows_V_channel1_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_0_rows_V_channel1_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_0_rows_V_channel1_full_n))) begin
            ap_reg_ready_img_0_rows_V_channel1_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_0_rows_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_0_rows_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_0_rows_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_0_rows_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_0_rows_V_channel_full_n))) begin
            ap_reg_ready_img_0_rows_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_1_cols_V_32_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_1_cols_V_32_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_1_cols_V_32_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_1_cols_V_32_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_1_cols_V_32_full_n))) begin
            ap_reg_ready_img_1_cols_V_32_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_1_cols_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_1_cols_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_1_cols_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_1_cols_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_1_cols_V_channel_full_n))) begin
            ap_reg_ready_img_1_cols_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_1_cols_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_1_cols_V_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_1_cols_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_1_cols_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_1_cols_V_full_n))) begin
            ap_reg_ready_img_1_cols_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_1_rows_V_31_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_1_rows_V_31_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_1_rows_V_31_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_1_rows_V_31_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_1_rows_V_31_full_n))) begin
            ap_reg_ready_img_1_rows_V_31_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_1_rows_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_1_rows_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_1_rows_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_1_rows_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_1_rows_V_channel_full_n))) begin
            ap_reg_ready_img_1_rows_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_1_rows_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_1_rows_V_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_1_rows_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_1_rows_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_1_rows_V_full_n))) begin
            ap_reg_ready_img_1_rows_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_2_UV_cols_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_2_UV_cols_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_2_UV_cols_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_2_UV_cols_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_2_UV_cols_V_channel_full_n))) begin
            ap_reg_ready_img_2_UV_cols_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_2_UV_cols_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_2_UV_cols_V_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_2_UV_cols_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_2_UV_cols_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_2_UV_cols_V_full_n))) begin
            ap_reg_ready_img_2_UV_cols_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_2_UV_rows_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_2_UV_rows_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_2_UV_rows_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_2_UV_rows_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_2_UV_rows_V_channel_full_n))) begin
            ap_reg_ready_img_2_UV_rows_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_2_UV_rows_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_2_UV_rows_V_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_2_UV_rows_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_2_UV_rows_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_2_UV_rows_V_full_n))) begin
            ap_reg_ready_img_2_UV_rows_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_2_Y_cols_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_2_Y_cols_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_2_Y_cols_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_2_Y_cols_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_2_Y_cols_V_channel_full_n))) begin
            ap_reg_ready_img_2_Y_cols_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_2_Y_cols_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_2_Y_cols_V_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_2_Y_cols_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_2_Y_cols_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_2_Y_cols_V_full_n))) begin
            ap_reg_ready_img_2_Y_cols_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_2_Y_rows_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_2_Y_rows_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_2_Y_rows_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_2_Y_rows_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_2_Y_rows_V_channel_full_n))) begin
            ap_reg_ready_img_2_Y_rows_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_2_Y_rows_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_2_Y_rows_V_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_2_Y_rows_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_2_Y_rows_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_2_Y_rows_V_full_n))) begin
            ap_reg_ready_img_2_Y_rows_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_2_cols_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_2_cols_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_2_cols_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_2_cols_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_2_cols_V_channel_full_n))) begin
            ap_reg_ready_img_2_cols_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_2_cols_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_2_cols_V_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_2_cols_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_2_cols_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_2_cols_V_full_n))) begin
            ap_reg_ready_img_2_cols_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_2_rows_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_2_rows_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_2_rows_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_2_rows_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_2_rows_V_channel_full_n))) begin
            ap_reg_ready_img_2_rows_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_2_rows_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_2_rows_V_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_2_rows_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_2_rows_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_2_rows_V_full_n))) begin
            ap_reg_ready_img_2_rows_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_3_cols_V_34_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_3_cols_V_34_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_3_cols_V_34_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_3_cols_V_34_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_3_cols_V_34_full_n))) begin
            ap_reg_ready_img_3_cols_V_34_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_3_cols_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_3_cols_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_3_cols_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_3_cols_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_3_cols_V_channel_full_n))) begin
            ap_reg_ready_img_3_cols_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_3_cols_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_3_cols_V_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_3_cols_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_3_cols_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_3_cols_V_full_n))) begin
            ap_reg_ready_img_3_cols_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_3_rows_V_33_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_3_rows_V_33_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_3_rows_V_33_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_3_rows_V_33_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_3_rows_V_33_full_n))) begin
            ap_reg_ready_img_3_rows_V_33_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_3_rows_V_channel_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_3_rows_V_channel_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_3_rows_V_channel_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_3_rows_V_channel_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_3_rows_V_channel_full_n))) begin
            ap_reg_ready_img_3_rows_V_channel_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_img_3_rows_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_img_3_rows_V_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_img_3_rows_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_img_3_rows_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == img_3_rows_V_full_n))) begin
            ap_reg_ready_img_3_rows_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_mask_cols_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_mask_cols_V_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_mask_cols_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_mask_cols_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == mask_cols_V_full_n))) begin
            ap_reg_ready_mask_cols_V_full_n <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ready_mask_rows_V_full_n assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ready_mask_rows_V_full_n
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ready_mask_rows_V_full_n <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == image_filter_Block_proc_U0_ap_continue))) begin
            ap_reg_ready_mask_rows_V_full_n <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_done) & (ap_const_logic_1 == mask_rows_V_full_n))) begin
            ap_reg_ready_mask_rows_V_full_n <= ap_const_logic_1;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    ap_CS <= ap_const_logic_0;
end

/// ap_chn_write_image_filter_Block_proc_U0_dmask_cols_V assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_dmask_cols_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_dmask_cols_V_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_dmask_cols_V = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_dmask_cols_V = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_dmask_rows_V assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_dmask_rows_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_dmask_rows_V_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_dmask_rows_V = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_dmask_rows_V = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_0_cols_V_channel assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_0_cols_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_0_cols_V_channel_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_0_cols_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_0_cols_V_channel = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_0_cols_V_channel1 assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_0_cols_V_channel1_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_0_cols_V_channel1_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_0_cols_V_channel1 = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_0_cols_V_channel1 = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_0_rows_V_channel assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_0_rows_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_0_rows_V_channel_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_0_rows_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_0_rows_V_channel = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_0_rows_V_channel1 assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_0_rows_V_channel1_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_0_rows_V_channel1_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_0_rows_V_channel1 = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_0_rows_V_channel1 = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_1_cols_V assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_1_cols_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_1_cols_V_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_1_cols_V = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_1_cols_V = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_1_cols_V_32 assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_1_cols_V_32_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_1_cols_V_32_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_1_cols_V_32 = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_1_cols_V_32 = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_1_cols_V_channel assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_1_cols_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_1_cols_V_channel_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_1_cols_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_1_cols_V_channel = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_1_rows_V assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_1_rows_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_1_rows_V_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_1_rows_V = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_1_rows_V = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_1_rows_V_31 assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_1_rows_V_31_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_1_rows_V_31_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_1_rows_V_31 = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_1_rows_V_31 = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_1_rows_V_channel assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_1_rows_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_1_rows_V_channel_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_1_rows_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_1_rows_V_channel = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_2_UV_cols_V assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_2_UV_cols_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_2_UV_cols_V_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_2_UV_cols_V = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_2_UV_cols_V = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_2_UV_cols_V_channel assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_2_UV_cols_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_2_UV_cols_V_channel_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_2_UV_cols_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_2_UV_cols_V_channel = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_2_UV_rows_V assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_2_UV_rows_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_2_UV_rows_V_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_2_UV_rows_V = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_2_UV_rows_V = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_2_UV_rows_V_channel assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_2_UV_rows_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_2_UV_rows_V_channel_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_2_UV_rows_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_2_UV_rows_V_channel = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_2_Y_cols_V assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_2_Y_cols_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_2_Y_cols_V_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_2_Y_cols_V = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_2_Y_cols_V = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_2_Y_cols_V_channel assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_2_Y_cols_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_2_Y_cols_V_channel_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_2_Y_cols_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_2_Y_cols_V_channel = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_2_Y_rows_V assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_2_Y_rows_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_2_Y_rows_V_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_2_Y_rows_V = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_2_Y_rows_V = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_2_Y_rows_V_channel assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_2_Y_rows_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_2_Y_rows_V_channel_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_2_Y_rows_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_2_Y_rows_V_channel = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_2_cols_V assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_2_cols_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_2_cols_V_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_2_cols_V = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_2_cols_V = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_2_cols_V_channel assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_2_cols_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_2_cols_V_channel_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_2_cols_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_2_cols_V_channel = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_2_rows_V assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_2_rows_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_2_rows_V_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_2_rows_V = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_2_rows_V = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_2_rows_V_channel assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_2_rows_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_2_rows_V_channel_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_2_rows_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_2_rows_V_channel = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_3_cols_V assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_3_cols_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_3_cols_V_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_3_cols_V = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_3_cols_V = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_3_cols_V_34 assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_3_cols_V_34_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_3_cols_V_34_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_3_cols_V_34 = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_3_cols_V_34 = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_3_cols_V_channel assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_3_cols_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_3_cols_V_channel_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_3_cols_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_3_cols_V_channel = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_3_rows_V assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_3_rows_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_3_rows_V_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_3_rows_V = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_3_rows_V = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_3_rows_V_33 assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_3_rows_V_33_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_3_rows_V_33_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_3_rows_V_33 = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_3_rows_V_33 = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_img_3_rows_V_channel assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_img_3_rows_V_channel_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_img_3_rows_V_channel_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_img_3_rows_V_channel = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_img_3_rows_V_channel = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_mask_cols_V assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_mask_cols_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_mask_cols_V_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_mask_cols_V = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_mask_cols_V = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_chn_write_image_filter_Block_proc_U0_mask_rows_V assign process. ///
always @ (image_filter_Block_proc_U0_ap_done or ap_reg_ready_mask_rows_V_full_n)
begin
    if ((ap_const_logic_1 == ap_reg_ready_mask_rows_V_full_n)) begin
        ap_chn_write_image_filter_Block_proc_U0_mask_rows_V = ap_const_logic_0;
    end else begin
        ap_chn_write_image_filter_Block_proc_U0_mask_rows_V = image_filter_Block_proc_U0_ap_done;
    end
end

/// ap_idle assign process. ///
always @ (image_filter_Block_proc_U0_ap_idle or image_filter_AXIvideo2Mat_U0_ap_idle or image_filter_Duplicate_1080_1920_16_16_U0_ap_idle or image_filter_UVupsampling_U0_ap_idle or image_filter_Split_1080_1920_16_0_U0_ap_idle or image_filter_Consume_1080_1920_0_U0_ap_idle or image_filter_FAST_t_opr_U0_ap_idle or image_filter_Dilate_0_0_1080_1920_U0_ap_idle or image_filter_PaintMask_32_0_1080_1920_U0_ap_idle or image_filter_UVdownsampling_U0_ap_idle or image_filter_Mat2AXIvideo_U0_ap_idle or img_0_rows_V_channel_empty_n or img_0_rows_V_channel1_empty_n or img_0_cols_V_channel_empty_n or img_0_cols_V_channel1_empty_n or img_1_rows_V_empty_n or img_1_rows_V_channel_empty_n or img_1_cols_V_empty_n or img_1_cols_V_channel_empty_n or img_1_rows_V_31_empty_n or img_1_cols_V_32_empty_n or img_2_rows_V_empty_n or img_2_rows_V_channel_empty_n or img_2_cols_V_empty_n or img_2_cols_V_channel_empty_n or img_2_Y_rows_V_empty_n or img_2_Y_rows_V_channel_empty_n or img_2_Y_cols_V_empty_n or img_2_Y_cols_V_channel_empty_n or img_2_UV_rows_V_empty_n or img_2_UV_rows_V_channel_empty_n or img_2_UV_cols_V_empty_n or img_2_UV_cols_V_channel_empty_n or img_3_rows_V_empty_n or img_3_rows_V_channel_empty_n or img_3_cols_V_empty_n or img_3_cols_V_channel_empty_n or img_3_rows_V_33_empty_n or img_3_cols_V_34_empty_n or mask_rows_V_empty_n or mask_cols_V_empty_n or dmask_rows_V_empty_n or dmask_cols_V_empty_n)
begin
    if (((ap_const_logic_1 == image_filter_Block_proc_U0_ap_idle) & (ap_const_logic_1 == image_filter_AXIvideo2Mat_U0_ap_idle) & (ap_const_logic_1 == image_filter_Duplicate_1080_1920_16_16_U0_ap_idle) & (ap_const_logic_1 == image_filter_UVupsampling_U0_ap_idle) & (ap_const_logic_1 == image_filter_Split_1080_1920_16_0_U0_ap_idle) & (ap_const_logic_1 == image_filter_Consume_1080_1920_0_U0_ap_idle) & (ap_const_logic_1 == image_filter_FAST_t_opr_U0_ap_idle) & (ap_const_logic_1 == image_filter_Dilate_0_0_1080_1920_U0_ap_idle) & (ap_const_logic_1 == image_filter_PaintMask_32_0_1080_1920_U0_ap_idle) & (ap_const_logic_1 == image_filter_UVdownsampling_U0_ap_idle) & (ap_const_logic_1 == image_filter_Mat2AXIvideo_U0_ap_idle) & (ap_const_logic_0 == img_0_rows_V_channel_empty_n) & (ap_const_logic_0 == img_0_rows_V_channel1_empty_n) & (ap_const_logic_0 == img_0_cols_V_channel_empty_n) & (ap_const_logic_0 == img_0_cols_V_channel1_empty_n) & (ap_const_logic_0 == img_1_rows_V_empty_n) & (ap_const_logic_0 == img_1_rows_V_channel_empty_n) & (ap_const_logic_0 == img_1_cols_V_empty_n) & (ap_const_logic_0 == img_1_cols_V_channel_empty_n) & (ap_const_logic_0 == img_1_rows_V_31_empty_n) & (ap_const_logic_0 == img_1_cols_V_32_empty_n) & (ap_const_logic_0 == img_2_rows_V_empty_n) & (ap_const_logic_0 == img_2_rows_V_channel_empty_n) & (ap_const_logic_0 == img_2_cols_V_empty_n) & (ap_const_logic_0 == img_2_cols_V_channel_empty_n) & (ap_const_logic_0 == img_2_Y_rows_V_empty_n) & (ap_const_logic_0 == img_2_Y_rows_V_channel_empty_n) & (ap_const_logic_0 == img_2_Y_cols_V_empty_n) & (ap_const_logic_0 == img_2_Y_cols_V_channel_empty_n) & (ap_const_logic_0 == img_2_UV_rows_V_empty_n) & (ap_const_logic_0 == img_2_UV_rows_V_channel_empty_n) & (ap_const_logic_0 == img_2_UV_cols_V_empty_n) & (ap_const_logic_0 == img_2_UV_cols_V_channel_empty_n) & (ap_const_logic_0 == img_3_rows_V_empty_n) & (ap_const_logic_0 == img_3_rows_V_channel_empty_n) & (ap_const_logic_0 == img_3_cols_V_empty_n) & (ap_const_logic_0 == img_3_cols_V_channel_empty_n) & (ap_const_logic_0 == img_3_rows_V_33_empty_n) & (ap_const_logic_0 == img_3_cols_V_34_empty_n) & (ap_const_logic_0 == mask_rows_V_empty_n) & (ap_const_logic_0 == mask_cols_V_empty_n) & (ap_const_logic_0 == dmask_rows_V_empty_n) & (ap_const_logic_0 == dmask_cols_V_empty_n))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_sig_hs_done assign process. ///
always @ (image_filter_Mat2AXIvideo_U0_ap_done)
begin
    if ((ap_const_logic_1 == image_filter_Mat2AXIvideo_U0_ap_done)) begin
        ap_sig_hs_done = ap_const_logic_1;
    end else begin
        ap_sig_hs_done = ap_const_logic_0;
    end
end

/// ap_sig_ready_dmask_cols_V_full_n assign process. ///
always @ (dmask_cols_V_full_n or ap_reg_ready_dmask_cols_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_dmask_cols_V_full_n)) begin
        ap_sig_ready_dmask_cols_V_full_n = dmask_cols_V_full_n;
    end else begin
        ap_sig_ready_dmask_cols_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_dmask_rows_V_full_n assign process. ///
always @ (dmask_rows_V_full_n or ap_reg_ready_dmask_rows_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_dmask_rows_V_full_n)) begin
        ap_sig_ready_dmask_rows_V_full_n = dmask_rows_V_full_n;
    end else begin
        ap_sig_ready_dmask_rows_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_image_filter_AXIvideo2Mat_U0_ap_ready assign process. ///
always @ (image_filter_AXIvideo2Mat_U0_ap_ready or ap_reg_ready_image_filter_AXIvideo2Mat_U0_ap_ready)
begin
    if ((ap_const_logic_0 == ap_reg_ready_image_filter_AXIvideo2Mat_U0_ap_ready)) begin
        ap_sig_ready_image_filter_AXIvideo2Mat_U0_ap_ready = image_filter_AXIvideo2Mat_U0_ap_ready;
    end else begin
        ap_sig_ready_image_filter_AXIvideo2Mat_U0_ap_ready = ap_const_logic_1;
    end
end

/// ap_sig_ready_image_filter_Block_proc_U0_ap_ready assign process. ///
always @ (image_filter_Block_proc_U0_ap_ready or ap_reg_ready_image_filter_Block_proc_U0_ap_ready)
begin
    if ((ap_const_logic_0 == ap_reg_ready_image_filter_Block_proc_U0_ap_ready)) begin
        ap_sig_ready_image_filter_Block_proc_U0_ap_ready = image_filter_Block_proc_U0_ap_ready;
    end else begin
        ap_sig_ready_image_filter_Block_proc_U0_ap_ready = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_0_cols_V_channel1_full_n assign process. ///
always @ (img_0_cols_V_channel1_full_n or ap_reg_ready_img_0_cols_V_channel1_full_n)
begin
    if ((ap_reg_ready_img_0_cols_V_channel1_full_n == ap_const_logic_0)) begin
        ap_sig_ready_img_0_cols_V_channel1_full_n = img_0_cols_V_channel1_full_n;
    end else begin
        ap_sig_ready_img_0_cols_V_channel1_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_0_cols_V_channel_full_n assign process. ///
always @ (img_0_cols_V_channel_full_n or ap_reg_ready_img_0_cols_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_0_cols_V_channel_full_n)) begin
        ap_sig_ready_img_0_cols_V_channel_full_n = img_0_cols_V_channel_full_n;
    end else begin
        ap_sig_ready_img_0_cols_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_0_rows_V_channel1_full_n assign process. ///
always @ (img_0_rows_V_channel1_full_n or ap_reg_ready_img_0_rows_V_channel1_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_0_rows_V_channel1_full_n)) begin
        ap_sig_ready_img_0_rows_V_channel1_full_n = img_0_rows_V_channel1_full_n;
    end else begin
        ap_sig_ready_img_0_rows_V_channel1_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_0_rows_V_channel_full_n assign process. ///
always @ (img_0_rows_V_channel_full_n or ap_reg_ready_img_0_rows_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_0_rows_V_channel_full_n)) begin
        ap_sig_ready_img_0_rows_V_channel_full_n = img_0_rows_V_channel_full_n;
    end else begin
        ap_sig_ready_img_0_rows_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_1_cols_V_32_full_n assign process. ///
always @ (img_1_cols_V_32_full_n or ap_reg_ready_img_1_cols_V_32_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_1_cols_V_32_full_n)) begin
        ap_sig_ready_img_1_cols_V_32_full_n = img_1_cols_V_32_full_n;
    end else begin
        ap_sig_ready_img_1_cols_V_32_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_1_cols_V_channel_full_n assign process. ///
always @ (img_1_cols_V_channel_full_n or ap_reg_ready_img_1_cols_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_1_cols_V_channel_full_n)) begin
        ap_sig_ready_img_1_cols_V_channel_full_n = img_1_cols_V_channel_full_n;
    end else begin
        ap_sig_ready_img_1_cols_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_1_cols_V_full_n assign process. ///
always @ (img_1_cols_V_full_n or ap_reg_ready_img_1_cols_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_1_cols_V_full_n)) begin
        ap_sig_ready_img_1_cols_V_full_n = img_1_cols_V_full_n;
    end else begin
        ap_sig_ready_img_1_cols_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_1_rows_V_31_full_n assign process. ///
always @ (img_1_rows_V_31_full_n or ap_reg_ready_img_1_rows_V_31_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_1_rows_V_31_full_n)) begin
        ap_sig_ready_img_1_rows_V_31_full_n = img_1_rows_V_31_full_n;
    end else begin
        ap_sig_ready_img_1_rows_V_31_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_1_rows_V_channel_full_n assign process. ///
always @ (img_1_rows_V_channel_full_n or ap_reg_ready_img_1_rows_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_1_rows_V_channel_full_n)) begin
        ap_sig_ready_img_1_rows_V_channel_full_n = img_1_rows_V_channel_full_n;
    end else begin
        ap_sig_ready_img_1_rows_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_1_rows_V_full_n assign process. ///
always @ (img_1_rows_V_full_n or ap_reg_ready_img_1_rows_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_1_rows_V_full_n)) begin
        ap_sig_ready_img_1_rows_V_full_n = img_1_rows_V_full_n;
    end else begin
        ap_sig_ready_img_1_rows_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_2_UV_cols_V_channel_full_n assign process. ///
always @ (img_2_UV_cols_V_channel_full_n or ap_reg_ready_img_2_UV_cols_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_2_UV_cols_V_channel_full_n)) begin
        ap_sig_ready_img_2_UV_cols_V_channel_full_n = img_2_UV_cols_V_channel_full_n;
    end else begin
        ap_sig_ready_img_2_UV_cols_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_2_UV_cols_V_full_n assign process. ///
always @ (img_2_UV_cols_V_full_n or ap_reg_ready_img_2_UV_cols_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_2_UV_cols_V_full_n)) begin
        ap_sig_ready_img_2_UV_cols_V_full_n = img_2_UV_cols_V_full_n;
    end else begin
        ap_sig_ready_img_2_UV_cols_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_2_UV_rows_V_channel_full_n assign process. ///
always @ (img_2_UV_rows_V_channel_full_n or ap_reg_ready_img_2_UV_rows_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_2_UV_rows_V_channel_full_n)) begin
        ap_sig_ready_img_2_UV_rows_V_channel_full_n = img_2_UV_rows_V_channel_full_n;
    end else begin
        ap_sig_ready_img_2_UV_rows_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_2_UV_rows_V_full_n assign process. ///
always @ (img_2_UV_rows_V_full_n or ap_reg_ready_img_2_UV_rows_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_2_UV_rows_V_full_n)) begin
        ap_sig_ready_img_2_UV_rows_V_full_n = img_2_UV_rows_V_full_n;
    end else begin
        ap_sig_ready_img_2_UV_rows_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_2_Y_cols_V_channel_full_n assign process. ///
always @ (img_2_Y_cols_V_channel_full_n or ap_reg_ready_img_2_Y_cols_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_2_Y_cols_V_channel_full_n)) begin
        ap_sig_ready_img_2_Y_cols_V_channel_full_n = img_2_Y_cols_V_channel_full_n;
    end else begin
        ap_sig_ready_img_2_Y_cols_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_2_Y_cols_V_full_n assign process. ///
always @ (img_2_Y_cols_V_full_n or ap_reg_ready_img_2_Y_cols_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_2_Y_cols_V_full_n)) begin
        ap_sig_ready_img_2_Y_cols_V_full_n = img_2_Y_cols_V_full_n;
    end else begin
        ap_sig_ready_img_2_Y_cols_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_2_Y_rows_V_channel_full_n assign process. ///
always @ (img_2_Y_rows_V_channel_full_n or ap_reg_ready_img_2_Y_rows_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_2_Y_rows_V_channel_full_n)) begin
        ap_sig_ready_img_2_Y_rows_V_channel_full_n = img_2_Y_rows_V_channel_full_n;
    end else begin
        ap_sig_ready_img_2_Y_rows_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_2_Y_rows_V_full_n assign process. ///
always @ (img_2_Y_rows_V_full_n or ap_reg_ready_img_2_Y_rows_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_2_Y_rows_V_full_n)) begin
        ap_sig_ready_img_2_Y_rows_V_full_n = img_2_Y_rows_V_full_n;
    end else begin
        ap_sig_ready_img_2_Y_rows_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_2_cols_V_channel_full_n assign process. ///
always @ (img_2_cols_V_channel_full_n or ap_reg_ready_img_2_cols_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_2_cols_V_channel_full_n)) begin
        ap_sig_ready_img_2_cols_V_channel_full_n = img_2_cols_V_channel_full_n;
    end else begin
        ap_sig_ready_img_2_cols_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_2_cols_V_full_n assign process. ///
always @ (img_2_cols_V_full_n or ap_reg_ready_img_2_cols_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_2_cols_V_full_n)) begin
        ap_sig_ready_img_2_cols_V_full_n = img_2_cols_V_full_n;
    end else begin
        ap_sig_ready_img_2_cols_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_2_rows_V_channel_full_n assign process. ///
always @ (img_2_rows_V_channel_full_n or ap_reg_ready_img_2_rows_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_2_rows_V_channel_full_n)) begin
        ap_sig_ready_img_2_rows_V_channel_full_n = img_2_rows_V_channel_full_n;
    end else begin
        ap_sig_ready_img_2_rows_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_2_rows_V_full_n assign process. ///
always @ (img_2_rows_V_full_n or ap_reg_ready_img_2_rows_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_2_rows_V_full_n)) begin
        ap_sig_ready_img_2_rows_V_full_n = img_2_rows_V_full_n;
    end else begin
        ap_sig_ready_img_2_rows_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_3_cols_V_34_full_n assign process. ///
always @ (img_3_cols_V_34_full_n or ap_reg_ready_img_3_cols_V_34_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_3_cols_V_34_full_n)) begin
        ap_sig_ready_img_3_cols_V_34_full_n = img_3_cols_V_34_full_n;
    end else begin
        ap_sig_ready_img_3_cols_V_34_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_3_cols_V_channel_full_n assign process. ///
always @ (img_3_cols_V_channel_full_n or ap_reg_ready_img_3_cols_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_3_cols_V_channel_full_n)) begin
        ap_sig_ready_img_3_cols_V_channel_full_n = img_3_cols_V_channel_full_n;
    end else begin
        ap_sig_ready_img_3_cols_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_3_cols_V_full_n assign process. ///
always @ (img_3_cols_V_full_n or ap_reg_ready_img_3_cols_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_3_cols_V_full_n)) begin
        ap_sig_ready_img_3_cols_V_full_n = img_3_cols_V_full_n;
    end else begin
        ap_sig_ready_img_3_cols_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_3_rows_V_33_full_n assign process. ///
always @ (img_3_rows_V_33_full_n or ap_reg_ready_img_3_rows_V_33_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_3_rows_V_33_full_n)) begin
        ap_sig_ready_img_3_rows_V_33_full_n = img_3_rows_V_33_full_n;
    end else begin
        ap_sig_ready_img_3_rows_V_33_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_3_rows_V_channel_full_n assign process. ///
always @ (img_3_rows_V_channel_full_n or ap_reg_ready_img_3_rows_V_channel_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_3_rows_V_channel_full_n)) begin
        ap_sig_ready_img_3_rows_V_channel_full_n = img_3_rows_V_channel_full_n;
    end else begin
        ap_sig_ready_img_3_rows_V_channel_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_img_3_rows_V_full_n assign process. ///
always @ (img_3_rows_V_full_n or ap_reg_ready_img_3_rows_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_img_3_rows_V_full_n)) begin
        ap_sig_ready_img_3_rows_V_full_n = img_3_rows_V_full_n;
    end else begin
        ap_sig_ready_img_3_rows_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_mask_cols_V_full_n assign process. ///
always @ (mask_cols_V_full_n or ap_reg_ready_mask_cols_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_mask_cols_V_full_n)) begin
        ap_sig_ready_mask_cols_V_full_n = mask_cols_V_full_n;
    end else begin
        ap_sig_ready_mask_cols_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_ready_mask_rows_V_full_n assign process. ///
always @ (mask_rows_V_full_n or ap_reg_ready_mask_rows_V_full_n)
begin
    if ((ap_const_logic_0 == ap_reg_ready_mask_rows_V_full_n)) begin
        ap_sig_ready_mask_rows_V_full_n = mask_rows_V_full_n;
    end else begin
        ap_sig_ready_mask_rows_V_full_n = ap_const_logic_1;
    end
end

/// ap_sig_start_in_image_filter_AXIvideo2Mat_U0_ap_start assign process. ///
always @ (ap_start or ap_reg_ready_image_filter_AXIvideo2Mat_U0_ap_ready)
begin
    if (((ap_const_logic_1 == ap_start) & (ap_const_logic_0 == ap_reg_ready_image_filter_AXIvideo2Mat_U0_ap_ready))) begin
        ap_sig_start_in_image_filter_AXIvideo2Mat_U0_ap_start = ap_const_logic_1;
    end else begin
        ap_sig_start_in_image_filter_AXIvideo2Mat_U0_ap_start = ap_const_logic_0;
    end
end

/// ap_sig_start_in_image_filter_Block_proc_U0_ap_start assign process. ///
always @ (ap_start or ap_reg_ready_image_filter_Block_proc_U0_ap_ready)
begin
    if (((ap_const_logic_0 == ap_reg_ready_image_filter_Block_proc_U0_ap_ready) & (ap_const_logic_1 == ap_start))) begin
        ap_sig_start_in_image_filter_Block_proc_U0_ap_start = ap_const_logic_1;
    end else begin
        ap_sig_start_in_image_filter_Block_proc_U0_ap_start = ap_const_logic_0;
    end
end

/// ap_sig_top_allready assign process. ///
always @ (ap_sig_ready_image_filter_Block_proc_U0_ap_ready or ap_sig_ready_image_filter_AXIvideo2Mat_U0_ap_ready)
begin
    if (((ap_const_logic_1 == ap_sig_ready_image_filter_Block_proc_U0_ap_ready) & (ap_const_logic_1 == ap_sig_ready_image_filter_AXIvideo2Mat_U0_ap_ready))) begin
        ap_sig_top_allready = ap_const_logic_1;
    end else begin
        ap_sig_top_allready = ap_const_logic_0;
    end
end

/// image_filter_Block_proc_U0_ap_continue assign process. ///
always @ (ap_sig_ready_img_0_cols_V_channel1_full_n or ap_sig_ready_img_0_rows_V_channel_full_n or ap_sig_ready_img_0_rows_V_channel1_full_n or ap_sig_ready_img_0_cols_V_channel_full_n or ap_sig_ready_img_2_UV_rows_V_channel_full_n or ap_sig_ready_img_1_rows_V_full_n or ap_sig_ready_img_1_rows_V_channel_full_n or ap_sig_ready_img_1_cols_V_full_n or ap_sig_ready_img_1_cols_V_channel_full_n or ap_sig_ready_img_1_rows_V_31_full_n or ap_sig_ready_img_1_cols_V_32_full_n or ap_sig_ready_img_2_rows_V_full_n or ap_sig_ready_img_2_rows_V_channel_full_n or ap_sig_ready_img_2_cols_V_full_n or ap_sig_ready_img_2_cols_V_channel_full_n or ap_sig_ready_img_2_Y_rows_V_full_n or ap_sig_ready_img_2_Y_rows_V_channel_full_n or ap_sig_ready_img_2_Y_cols_V_full_n or ap_sig_ready_img_2_Y_cols_V_channel_full_n or ap_sig_ready_img_2_UV_rows_V_full_n or ap_sig_ready_img_2_UV_cols_V_full_n or ap_sig_ready_img_2_UV_cols_V_channel_full_n or ap_sig_ready_img_3_rows_V_full_n or ap_sig_ready_img_3_rows_V_channel_full_n or ap_sig_ready_img_3_cols_V_full_n or ap_sig_ready_img_3_cols_V_channel_full_n or ap_sig_ready_img_3_rows_V_33_full_n or ap_sig_ready_img_3_cols_V_34_full_n or ap_sig_ready_mask_rows_V_full_n or ap_sig_ready_mask_cols_V_full_n or ap_sig_ready_dmask_rows_V_full_n or ap_sig_ready_dmask_cols_V_full_n)
begin
    if (((ap_const_logic_1 == ap_sig_ready_img_0_cols_V_channel1_full_n) & (ap_const_logic_1 == ap_sig_ready_img_0_rows_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_img_0_rows_V_channel1_full_n) & (ap_const_logic_1 == ap_sig_ready_img_0_cols_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_img_2_UV_rows_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_img_1_rows_V_full_n) & (ap_const_logic_1 == ap_sig_ready_img_1_rows_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_img_1_cols_V_full_n) & (ap_const_logic_1 == ap_sig_ready_img_1_cols_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_img_1_rows_V_31_full_n) & (ap_const_logic_1 == ap_sig_ready_img_1_cols_V_32_full_n) & (ap_const_logic_1 == ap_sig_ready_img_2_rows_V_full_n) & (ap_const_logic_1 == ap_sig_ready_img_2_rows_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_img_2_cols_V_full_n) & (ap_const_logic_1 == ap_sig_ready_img_2_cols_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_img_2_Y_rows_V_full_n) & (ap_const_logic_1 == ap_sig_ready_img_2_Y_rows_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_img_2_Y_cols_V_full_n) & (ap_const_logic_1 == ap_sig_ready_img_2_Y_cols_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_img_2_UV_rows_V_full_n) & (ap_const_logic_1 == ap_sig_ready_img_2_UV_cols_V_full_n) & (ap_const_logic_1 == ap_sig_ready_img_2_UV_cols_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_img_3_rows_V_full_n) & (ap_const_logic_1 == ap_sig_ready_img_3_rows_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_img_3_cols_V_full_n) & (ap_const_logic_1 == ap_sig_ready_img_3_cols_V_channel_full_n) & (ap_const_logic_1 == ap_sig_ready_img_3_rows_V_33_full_n) & (ap_const_logic_1 == ap_sig_ready_img_3_cols_V_34_full_n) & (ap_const_logic_1 == ap_sig_ready_mask_rows_V_full_n) & (ap_const_logic_1 == ap_sig_ready_mask_cols_V_full_n) & (ap_const_logic_1 == ap_sig_ready_dmask_rows_V_full_n) & (ap_const_logic_1 == ap_sig_ready_dmask_cols_V_full_n))) begin
        image_filter_Block_proc_U0_ap_continue = ap_const_logic_1;
    end else begin
        image_filter_Block_proc_U0_ap_continue = ap_const_logic_0;
    end
end
assign ap_done = ap_sig_hs_done;
assign ap_ready = ap_sig_top_allready;

/// ap_rst_n_inv assign process. ///
always @ (ap_rst_n)
begin
    ap_rst_n_inv = ~ap_rst_n;
end
assign ap_sig_hs_continue = ap_const_logic_1;
assign dmask_cols_V_U_ap_dummy_ce = ap_const_logic_1;
assign dmask_cols_V_din = image_filter_Block_proc_U0_ap_return_31;
assign dmask_cols_V_read = image_filter_PaintMask_32_0_1080_1920_U0_ap_ready;
assign dmask_cols_V_write = ap_chn_write_image_filter_Block_proc_U0_dmask_cols_V;
assign dmask_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
assign dmask_data_stream_0_V_din = image_filter_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_din;
assign dmask_data_stream_0_V_read = image_filter_PaintMask_32_0_1080_1920_U0_p_mask_data_stream_V_read;
assign dmask_data_stream_0_V_write = image_filter_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_write;
assign dmask_rows_V_U_ap_dummy_ce = ap_const_logic_1;
assign dmask_rows_V_din = image_filter_Block_proc_U0_ap_return_30;
assign dmask_rows_V_read = image_filter_PaintMask_32_0_1080_1920_U0_ap_ready;
assign dmask_rows_V_write = ap_chn_write_image_filter_Block_proc_U0_dmask_rows_V;
assign image_filter_AXIvideo2Mat_U0_ap_continue = ap_const_logic_1;
assign image_filter_AXIvideo2Mat_U0_ap_start = (img_0_rows_V_channel_empty_n & img_0_cols_V_channel_empty_n & ap_sig_start_in_image_filter_AXIvideo2Mat_U0_ap_start);
assign image_filter_AXIvideo2Mat_U0_img_cols_V_read = img_0_cols_V_channel_dout;
assign image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_full_n = img_0_data_stream_0_V_full_n;
assign image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_full_n = img_0_data_stream_1_V_full_n;
assign image_filter_AXIvideo2Mat_U0_img_rows_V_read = img_0_rows_V_channel_dout;
assign image_filter_AXIvideo2Mat_U0_video_in_TDATA = video_in_TDATA;
assign image_filter_AXIvideo2Mat_U0_video_in_TDEST = video_in_TDEST;
assign image_filter_AXIvideo2Mat_U0_video_in_TID = video_in_TID;
assign image_filter_AXIvideo2Mat_U0_video_in_TKEEP = video_in_TKEEP;
assign image_filter_AXIvideo2Mat_U0_video_in_TLAST = video_in_TLAST;
assign image_filter_AXIvideo2Mat_U0_video_in_TSTRB = video_in_TSTRB;
assign image_filter_AXIvideo2Mat_U0_video_in_TUSER = video_in_TUSER;
assign image_filter_AXIvideo2Mat_U0_video_in_TVALID = video_in_TVALID;
assign image_filter_Block_proc_U0_ap_start = ap_sig_start_in_image_filter_Block_proc_U0_ap_start;
assign image_filter_Block_proc_U0_cols = cols;
assign image_filter_Block_proc_U0_rows = rows;
assign image_filter_CONTROL_BUS_s_axi_U_ap_dummy_ce = ap_const_logic_1;
assign image_filter_Consume_1080_1920_0_U0_ap_continue = ap_const_logic_1;
assign image_filter_Consume_1080_1920_0_U0_ap_start = (img_2_UV_rows_V_channel_empty_n & img_2_UV_cols_V_channel_empty_n);
assign image_filter_Consume_1080_1920_0_U0_src_cols_V_read = img_2_UV_cols_V_channel_dout;
assign image_filter_Consume_1080_1920_0_U0_src_data_stream_V_dout = img_2_UV_data_stream_0_V_dout;
assign image_filter_Consume_1080_1920_0_U0_src_data_stream_V_empty_n = img_2_UV_data_stream_0_V_empty_n;
assign image_filter_Consume_1080_1920_0_U0_src_rows_V_read = img_2_UV_rows_V_channel_dout;
assign image_filter_Dilate_0_0_1080_1920_U0_ap_continue = ap_const_logic_1;
assign image_filter_Dilate_0_0_1080_1920_U0_ap_start = (mask_rows_V_empty_n & mask_cols_V_empty_n);
assign image_filter_Dilate_0_0_1080_1920_U0_p_dst_data_stream_V_full_n = dmask_data_stream_0_V_full_n;
assign image_filter_Dilate_0_0_1080_1920_U0_p_src_cols_V_read = mask_cols_V_dout;
assign image_filter_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_dout = mask_data_stream_0_V_dout;
assign image_filter_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_empty_n = mask_data_stream_0_V_empty_n;
assign image_filter_Dilate_0_0_1080_1920_U0_p_src_rows_V_read = mask_rows_V_dout;
assign image_filter_Duplicate_1080_1920_16_16_U0_ap_continue = ap_const_logic_1;
assign image_filter_Duplicate_1080_1920_16_16_U0_ap_start = (img_0_rows_V_channel1_empty_n & img_0_cols_V_channel1_empty_n & img_1_rows_V_empty_n & img_1_cols_V_empty_n & img_2_rows_V_empty_n & img_2_cols_V_empty_n);
assign image_filter_Duplicate_1080_1920_16_16_U0_dst1_cols_V_read = img_1_cols_V_dout;
assign image_filter_Duplicate_1080_1920_16_16_U0_dst1_data_stream_0_V_full_n = img_1_data_stream_0_V_full_n;
assign image_filter_Duplicate_1080_1920_16_16_U0_dst1_data_stream_1_V_full_n = img_1_data_stream_1_V_full_n;
assign image_filter_Duplicate_1080_1920_16_16_U0_dst1_rows_V_read = img_1_rows_V_dout;
assign image_filter_Duplicate_1080_1920_16_16_U0_dst2_cols_V_read = img_2_cols_V_dout;
assign image_filter_Duplicate_1080_1920_16_16_U0_dst2_data_stream_0_V_full_n = img_2_data_stream_0_V_full_n;
assign image_filter_Duplicate_1080_1920_16_16_U0_dst2_data_stream_1_V_full_n = img_2_data_stream_1_V_full_n;
assign image_filter_Duplicate_1080_1920_16_16_U0_dst2_rows_V_read = img_2_rows_V_dout;
assign image_filter_Duplicate_1080_1920_16_16_U0_src_cols_V_read = img_0_cols_V_channel1_dout;
assign image_filter_Duplicate_1080_1920_16_16_U0_src_data_stream_0_V_dout = img_0_data_stream_0_V_dout;
assign image_filter_Duplicate_1080_1920_16_16_U0_src_data_stream_0_V_empty_n = img_0_data_stream_0_V_empty_n;
assign image_filter_Duplicate_1080_1920_16_16_U0_src_data_stream_1_V_dout = img_0_data_stream_1_V_dout;
assign image_filter_Duplicate_1080_1920_16_16_U0_src_data_stream_1_V_empty_n = img_0_data_stream_1_V_empty_n;
assign image_filter_Duplicate_1080_1920_16_16_U0_src_rows_V_read = img_0_rows_V_channel1_dout;
assign image_filter_FAST_t_opr_U0_ap_continue = ap_const_logic_1;
assign image_filter_FAST_t_opr_U0_ap_start = (img_2_Y_rows_V_channel_empty_n & img_2_Y_cols_V_channel_empty_n);
assign image_filter_FAST_t_opr_U0_p_mask_data_stream_V_full_n = mask_data_stream_0_V_full_n;
assign image_filter_FAST_t_opr_U0_p_src_cols_V_read = img_2_Y_cols_V_channel_dout;
assign image_filter_FAST_t_opr_U0_p_src_data_stream_V_dout = img_2_Y_data_stream_0_V_dout;
assign image_filter_FAST_t_opr_U0_p_src_data_stream_V_empty_n = img_2_Y_data_stream_0_V_empty_n;
assign image_filter_FAST_t_opr_U0_p_src_rows_V_read = img_2_Y_rows_V_channel_dout;
assign image_filter_Mat2AXIvideo_U0_ap_continue = ap_sig_hs_continue;
assign image_filter_Mat2AXIvideo_U0_ap_start = (img_3_rows_V_33_empty_n & img_3_cols_V_34_empty_n);
assign image_filter_Mat2AXIvideo_U0_img_cols_V_read = img_3_cols_V_34_dout;
assign image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_dout = img_3_data_stream_0_V_25_dout;
assign image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_empty_n = img_3_data_stream_0_V_25_empty_n;
assign image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_dout = img_3_data_stream_1_V_27_dout;
assign image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_empty_n = img_3_data_stream_1_V_27_empty_n;
assign image_filter_Mat2AXIvideo_U0_img_rows_V_read = img_3_rows_V_33_dout;
assign image_filter_Mat2AXIvideo_U0_video_out_TREADY = video_out_TREADY;
assign image_filter_PaintMask_32_0_1080_1920_U0_ap_continue = ap_const_logic_1;
assign image_filter_PaintMask_32_0_1080_1920_U0_ap_start = (img_1_rows_V_31_empty_n & img_1_cols_V_32_empty_n & img_3_rows_V_empty_n & img_3_cols_V_empty_n & dmask_rows_V_empty_n & dmask_cols_V_empty_n);
assign image_filter_PaintMask_32_0_1080_1920_U0_p_dst_cols_V_read = img_3_cols_V_dout;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_0_V_full_n = img_3_data_stream_0_V_full_n;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_1_V_full_n = img_3_data_stream_1_V_full_n;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_2_V_full_n = img_3_data_stream_2_V_full_n;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_dst_rows_V_read = img_3_rows_V_dout;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_mask_cols_V_read = dmask_cols_V_dout;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_mask_data_stream_V_dout = dmask_data_stream_0_V_dout;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_mask_data_stream_V_empty_n = dmask_data_stream_0_V_empty_n;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_mask_rows_V_read = dmask_rows_V_dout;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_src_cols_V_read = img_1_cols_V_32_dout;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_0_V_dout = img_1_data_stream_0_V_13_dout;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_0_V_empty_n = img_1_data_stream_0_V_13_empty_n;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_1_V_dout = img_1_data_stream_1_V_15_dout;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_1_V_empty_n = img_1_data_stream_1_V_15_empty_n;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_2_V_dout = img_1_data_stream_2_V_dout;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_2_V_empty_n = img_1_data_stream_2_V_empty_n;
assign image_filter_PaintMask_32_0_1080_1920_U0_p_src_rows_V_read = img_1_rows_V_31_dout;
assign image_filter_Split_1080_1920_16_0_U0_ap_continue = ap_const_logic_1;
assign image_filter_Split_1080_1920_16_0_U0_ap_start = (img_2_rows_V_channel_empty_n & img_2_cols_V_channel_empty_n & img_2_Y_rows_V_empty_n & img_2_Y_cols_V_empty_n & img_2_UV_rows_V_empty_n & img_2_UV_cols_V_empty_n);
assign image_filter_Split_1080_1920_16_0_U0_dst0_cols_V_read = img_2_Y_cols_V_dout;
assign image_filter_Split_1080_1920_16_0_U0_dst0_data_stream_V_full_n = img_2_Y_data_stream_0_V_full_n;
assign image_filter_Split_1080_1920_16_0_U0_dst0_rows_V_read = img_2_Y_rows_V_dout;
assign image_filter_Split_1080_1920_16_0_U0_dst1_cols_V_read = img_2_UV_cols_V_dout;
assign image_filter_Split_1080_1920_16_0_U0_dst1_data_stream_V_full_n = img_2_UV_data_stream_0_V_full_n;
assign image_filter_Split_1080_1920_16_0_U0_dst1_rows_V_read = img_2_UV_rows_V_dout;
assign image_filter_Split_1080_1920_16_0_U0_src_cols_V_read = img_2_cols_V_channel_dout;
assign image_filter_Split_1080_1920_16_0_U0_src_data_stream_0_V_dout = img_2_data_stream_0_V_dout;
assign image_filter_Split_1080_1920_16_0_U0_src_data_stream_0_V_empty_n = img_2_data_stream_0_V_empty_n;
assign image_filter_Split_1080_1920_16_0_U0_src_data_stream_1_V_dout = img_2_data_stream_1_V_dout;
assign image_filter_Split_1080_1920_16_0_U0_src_data_stream_1_V_empty_n = img_2_data_stream_1_V_empty_n;
assign image_filter_Split_1080_1920_16_0_U0_src_rows_V_read = img_2_rows_V_channel_dout;
assign image_filter_UVdownsampling_U0_ap_continue = ap_const_logic_1;
assign image_filter_UVdownsampling_U0_ap_start = (img_3_rows_V_channel_empty_n & img_3_cols_V_channel_empty_n);
assign image_filter_UVdownsampling_U0_yuv422_data_stream_0_V_full_n = img_3_data_stream_0_V_25_full_n;
assign image_filter_UVdownsampling_U0_yuv422_data_stream_1_V_full_n = img_3_data_stream_1_V_27_full_n;
assign image_filter_UVdownsampling_U0_yuv444_cols_V_read = img_3_cols_V_channel_dout;
assign image_filter_UVdownsampling_U0_yuv444_data_stream_0_V_dout = img_3_data_stream_0_V_dout;
assign image_filter_UVdownsampling_U0_yuv444_data_stream_0_V_empty_n = img_3_data_stream_0_V_empty_n;
assign image_filter_UVdownsampling_U0_yuv444_data_stream_1_V_dout = img_3_data_stream_1_V_dout;
assign image_filter_UVdownsampling_U0_yuv444_data_stream_1_V_empty_n = img_3_data_stream_1_V_empty_n;
assign image_filter_UVdownsampling_U0_yuv444_data_stream_2_V_dout = img_3_data_stream_2_V_dout;
assign image_filter_UVdownsampling_U0_yuv444_data_stream_2_V_empty_n = img_3_data_stream_2_V_empty_n;
assign image_filter_UVdownsampling_U0_yuv444_rows_V_read = img_3_rows_V_channel_dout;
assign image_filter_UVupsampling_U0_ap_continue = ap_const_logic_1;
assign image_filter_UVupsampling_U0_ap_start = (img_1_rows_V_channel_empty_n & img_1_cols_V_channel_empty_n);
assign image_filter_UVupsampling_U0_yuv422_cols_V_read = img_1_cols_V_channel_dout;
assign image_filter_UVupsampling_U0_yuv422_data_stream_0_V_dout = img_1_data_stream_0_V_dout;
assign image_filter_UVupsampling_U0_yuv422_data_stream_0_V_empty_n = img_1_data_stream_0_V_empty_n;
assign image_filter_UVupsampling_U0_yuv422_data_stream_1_V_dout = img_1_data_stream_1_V_dout;
assign image_filter_UVupsampling_U0_yuv422_data_stream_1_V_empty_n = img_1_data_stream_1_V_empty_n;
assign image_filter_UVupsampling_U0_yuv422_rows_V_read = img_1_rows_V_channel_dout;
assign image_filter_UVupsampling_U0_yuv444_data_stream_0_V_full_n = img_1_data_stream_0_V_13_full_n;
assign image_filter_UVupsampling_U0_yuv444_data_stream_1_V_full_n = img_1_data_stream_1_V_15_full_n;
assign image_filter_UVupsampling_U0_yuv444_data_stream_2_V_full_n = img_1_data_stream_2_V_full_n;
assign img_0_cols_V_channel1_U_ap_dummy_ce = ap_const_logic_1;
assign img_0_cols_V_channel1_din = image_filter_Block_proc_U0_ap_return_3;
assign img_0_cols_V_channel1_read = image_filter_Duplicate_1080_1920_16_16_U0_ap_ready;
assign img_0_cols_V_channel1_write = ap_chn_write_image_filter_Block_proc_U0_img_0_cols_V_channel1;
assign img_0_cols_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign img_0_cols_V_channel_din = image_filter_Block_proc_U0_ap_return_2;
assign img_0_cols_V_channel_read = image_filter_AXIvideo2Mat_U0_ap_ready;
assign img_0_cols_V_channel_write = ap_chn_write_image_filter_Block_proc_U0_img_0_cols_V_channel;
assign img_0_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_0_data_stream_0_V_din = image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_din;
assign img_0_data_stream_0_V_read = image_filter_Duplicate_1080_1920_16_16_U0_src_data_stream_0_V_read;
assign img_0_data_stream_0_V_write = image_filter_AXIvideo2Mat_U0_img_data_stream_0_V_write;
assign img_0_data_stream_1_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_0_data_stream_1_V_din = image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_din;
assign img_0_data_stream_1_V_read = image_filter_Duplicate_1080_1920_16_16_U0_src_data_stream_1_V_read;
assign img_0_data_stream_1_V_write = image_filter_AXIvideo2Mat_U0_img_data_stream_1_V_write;
assign img_0_rows_V_channel1_U_ap_dummy_ce = ap_const_logic_1;
assign img_0_rows_V_channel1_din = image_filter_Block_proc_U0_ap_return_1;
assign img_0_rows_V_channel1_read = image_filter_Duplicate_1080_1920_16_16_U0_ap_ready;
assign img_0_rows_V_channel1_write = ap_chn_write_image_filter_Block_proc_U0_img_0_rows_V_channel1;
assign img_0_rows_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign img_0_rows_V_channel_din = image_filter_Block_proc_U0_ap_return_0;
assign img_0_rows_V_channel_read = image_filter_AXIvideo2Mat_U0_ap_ready;
assign img_0_rows_V_channel_write = ap_chn_write_image_filter_Block_proc_U0_img_0_rows_V_channel;
assign img_1_cols_V_32_U_ap_dummy_ce = ap_const_logic_1;
assign img_1_cols_V_32_din = image_filter_Block_proc_U0_ap_return_9;
assign img_1_cols_V_32_read = image_filter_PaintMask_32_0_1080_1920_U0_ap_ready;
assign img_1_cols_V_32_write = ap_chn_write_image_filter_Block_proc_U0_img_1_cols_V_32;
assign img_1_cols_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_1_cols_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign img_1_cols_V_channel_din = image_filter_Block_proc_U0_ap_return_7;
assign img_1_cols_V_channel_read = image_filter_UVupsampling_U0_ap_ready;
assign img_1_cols_V_channel_write = ap_chn_write_image_filter_Block_proc_U0_img_1_cols_V_channel;
assign img_1_cols_V_din = image_filter_Block_proc_U0_ap_return_6;
assign img_1_cols_V_read = image_filter_Duplicate_1080_1920_16_16_U0_ap_ready;
assign img_1_cols_V_write = ap_chn_write_image_filter_Block_proc_U0_img_1_cols_V;
assign img_1_data_stream_0_V_13_U_ap_dummy_ce = ap_const_logic_1;
assign img_1_data_stream_0_V_13_din = image_filter_UVupsampling_U0_yuv444_data_stream_0_V_din;
assign img_1_data_stream_0_V_13_read = image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_0_V_read;
assign img_1_data_stream_0_V_13_write = image_filter_UVupsampling_U0_yuv444_data_stream_0_V_write;
assign img_1_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_1_data_stream_0_V_din = image_filter_Duplicate_1080_1920_16_16_U0_dst1_data_stream_0_V_din;
assign img_1_data_stream_0_V_read = image_filter_UVupsampling_U0_yuv422_data_stream_0_V_read;
assign img_1_data_stream_0_V_write = image_filter_Duplicate_1080_1920_16_16_U0_dst1_data_stream_0_V_write;
assign img_1_data_stream_1_V_15_U_ap_dummy_ce = ap_const_logic_1;
assign img_1_data_stream_1_V_15_din = image_filter_UVupsampling_U0_yuv444_data_stream_1_V_din;
assign img_1_data_stream_1_V_15_read = image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_1_V_read;
assign img_1_data_stream_1_V_15_write = image_filter_UVupsampling_U0_yuv444_data_stream_1_V_write;
assign img_1_data_stream_1_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_1_data_stream_1_V_din = image_filter_Duplicate_1080_1920_16_16_U0_dst1_data_stream_1_V_din;
assign img_1_data_stream_1_V_read = image_filter_UVupsampling_U0_yuv422_data_stream_1_V_read;
assign img_1_data_stream_1_V_write = image_filter_Duplicate_1080_1920_16_16_U0_dst1_data_stream_1_V_write;
assign img_1_data_stream_2_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_1_data_stream_2_V_din = image_filter_UVupsampling_U0_yuv444_data_stream_2_V_din;
assign img_1_data_stream_2_V_read = image_filter_PaintMask_32_0_1080_1920_U0_p_src_data_stream_2_V_read;
assign img_1_data_stream_2_V_write = image_filter_UVupsampling_U0_yuv444_data_stream_2_V_write;
assign img_1_rows_V_31_U_ap_dummy_ce = ap_const_logic_1;
assign img_1_rows_V_31_din = image_filter_Block_proc_U0_ap_return_8;
assign img_1_rows_V_31_read = image_filter_PaintMask_32_0_1080_1920_U0_ap_ready;
assign img_1_rows_V_31_write = ap_chn_write_image_filter_Block_proc_U0_img_1_rows_V_31;
assign img_1_rows_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_1_rows_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign img_1_rows_V_channel_din = image_filter_Block_proc_U0_ap_return_5;
assign img_1_rows_V_channel_read = image_filter_UVupsampling_U0_ap_ready;
assign img_1_rows_V_channel_write = ap_chn_write_image_filter_Block_proc_U0_img_1_rows_V_channel;
assign img_1_rows_V_din = image_filter_Block_proc_U0_ap_return_4;
assign img_1_rows_V_read = image_filter_Duplicate_1080_1920_16_16_U0_ap_ready;
assign img_1_rows_V_write = ap_chn_write_image_filter_Block_proc_U0_img_1_rows_V;
assign img_2_UV_cols_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_2_UV_cols_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign img_2_UV_cols_V_channel_din = image_filter_Block_proc_U0_ap_return_21;
assign img_2_UV_cols_V_channel_read = image_filter_Consume_1080_1920_0_U0_ap_ready;
assign img_2_UV_cols_V_channel_write = ap_chn_write_image_filter_Block_proc_U0_img_2_UV_cols_V_channel;
assign img_2_UV_cols_V_din = image_filter_Block_proc_U0_ap_return_20;
assign img_2_UV_cols_V_read = image_filter_Split_1080_1920_16_0_U0_ap_ready;
assign img_2_UV_cols_V_write = ap_chn_write_image_filter_Block_proc_U0_img_2_UV_cols_V;
assign img_2_UV_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_2_UV_data_stream_0_V_din = image_filter_Split_1080_1920_16_0_U0_dst1_data_stream_V_din;
assign img_2_UV_data_stream_0_V_read = image_filter_Consume_1080_1920_0_U0_src_data_stream_V_read;
assign img_2_UV_data_stream_0_V_write = image_filter_Split_1080_1920_16_0_U0_dst1_data_stream_V_write;
assign img_2_UV_rows_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_2_UV_rows_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign img_2_UV_rows_V_channel_din = image_filter_Block_proc_U0_ap_return_19;
assign img_2_UV_rows_V_channel_read = image_filter_Consume_1080_1920_0_U0_ap_ready;
assign img_2_UV_rows_V_channel_write = ap_chn_write_image_filter_Block_proc_U0_img_2_UV_rows_V_channel;
assign img_2_UV_rows_V_din = image_filter_Block_proc_U0_ap_return_18;
assign img_2_UV_rows_V_read = image_filter_Split_1080_1920_16_0_U0_ap_ready;
assign img_2_UV_rows_V_write = ap_chn_write_image_filter_Block_proc_U0_img_2_UV_rows_V;
assign img_2_Y_cols_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_2_Y_cols_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign img_2_Y_cols_V_channel_din = image_filter_Block_proc_U0_ap_return_17;
assign img_2_Y_cols_V_channel_read = image_filter_FAST_t_opr_U0_ap_ready;
assign img_2_Y_cols_V_channel_write = ap_chn_write_image_filter_Block_proc_U0_img_2_Y_cols_V_channel;
assign img_2_Y_cols_V_din = image_filter_Block_proc_U0_ap_return_16;
assign img_2_Y_cols_V_read = image_filter_Split_1080_1920_16_0_U0_ap_ready;
assign img_2_Y_cols_V_write = ap_chn_write_image_filter_Block_proc_U0_img_2_Y_cols_V;
assign img_2_Y_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_2_Y_data_stream_0_V_din = image_filter_Split_1080_1920_16_0_U0_dst0_data_stream_V_din;
assign img_2_Y_data_stream_0_V_read = image_filter_FAST_t_opr_U0_p_src_data_stream_V_read;
assign img_2_Y_data_stream_0_V_write = image_filter_Split_1080_1920_16_0_U0_dst0_data_stream_V_write;
assign img_2_Y_rows_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_2_Y_rows_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign img_2_Y_rows_V_channel_din = image_filter_Block_proc_U0_ap_return_15;
assign img_2_Y_rows_V_channel_read = image_filter_FAST_t_opr_U0_ap_ready;
assign img_2_Y_rows_V_channel_write = ap_chn_write_image_filter_Block_proc_U0_img_2_Y_rows_V_channel;
assign img_2_Y_rows_V_din = image_filter_Block_proc_U0_ap_return_14;
assign img_2_Y_rows_V_read = image_filter_Split_1080_1920_16_0_U0_ap_ready;
assign img_2_Y_rows_V_write = ap_chn_write_image_filter_Block_proc_U0_img_2_Y_rows_V;
assign img_2_cols_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_2_cols_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign img_2_cols_V_channel_din = image_filter_Block_proc_U0_ap_return_13;
assign img_2_cols_V_channel_read = image_filter_Split_1080_1920_16_0_U0_ap_ready;
assign img_2_cols_V_channel_write = ap_chn_write_image_filter_Block_proc_U0_img_2_cols_V_channel;
assign img_2_cols_V_din = image_filter_Block_proc_U0_ap_return_12;
assign img_2_cols_V_read = image_filter_Duplicate_1080_1920_16_16_U0_ap_ready;
assign img_2_cols_V_write = ap_chn_write_image_filter_Block_proc_U0_img_2_cols_V;
assign img_2_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_2_data_stream_0_V_din = image_filter_Duplicate_1080_1920_16_16_U0_dst2_data_stream_0_V_din;
assign img_2_data_stream_0_V_read = image_filter_Split_1080_1920_16_0_U0_src_data_stream_0_V_read;
assign img_2_data_stream_0_V_write = image_filter_Duplicate_1080_1920_16_16_U0_dst2_data_stream_0_V_write;
assign img_2_data_stream_1_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_2_data_stream_1_V_din = image_filter_Duplicate_1080_1920_16_16_U0_dst2_data_stream_1_V_din;
assign img_2_data_stream_1_V_read = image_filter_Split_1080_1920_16_0_U0_src_data_stream_1_V_read;
assign img_2_data_stream_1_V_write = image_filter_Duplicate_1080_1920_16_16_U0_dst2_data_stream_1_V_write;
assign img_2_rows_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_2_rows_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign img_2_rows_V_channel_din = image_filter_Block_proc_U0_ap_return_11;
assign img_2_rows_V_channel_read = image_filter_Split_1080_1920_16_0_U0_ap_ready;
assign img_2_rows_V_channel_write = ap_chn_write_image_filter_Block_proc_U0_img_2_rows_V_channel;
assign img_2_rows_V_din = image_filter_Block_proc_U0_ap_return_10;
assign img_2_rows_V_read = image_filter_Duplicate_1080_1920_16_16_U0_ap_ready;
assign img_2_rows_V_write = ap_chn_write_image_filter_Block_proc_U0_img_2_rows_V;
assign img_3_cols_V_34_U_ap_dummy_ce = ap_const_logic_1;
assign img_3_cols_V_34_din = image_filter_Block_proc_U0_ap_return_27;
assign img_3_cols_V_34_read = image_filter_Mat2AXIvideo_U0_ap_ready;
assign img_3_cols_V_34_write = ap_chn_write_image_filter_Block_proc_U0_img_3_cols_V_34;
assign img_3_cols_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_3_cols_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign img_3_cols_V_channel_din = image_filter_Block_proc_U0_ap_return_25;
assign img_3_cols_V_channel_read = image_filter_UVdownsampling_U0_ap_ready;
assign img_3_cols_V_channel_write = ap_chn_write_image_filter_Block_proc_U0_img_3_cols_V_channel;
assign img_3_cols_V_din = image_filter_Block_proc_U0_ap_return_24;
assign img_3_cols_V_read = image_filter_PaintMask_32_0_1080_1920_U0_ap_ready;
assign img_3_cols_V_write = ap_chn_write_image_filter_Block_proc_U0_img_3_cols_V;
assign img_3_data_stream_0_V_25_U_ap_dummy_ce = ap_const_logic_1;
assign img_3_data_stream_0_V_25_din = image_filter_UVdownsampling_U0_yuv422_data_stream_0_V_din;
assign img_3_data_stream_0_V_25_read = image_filter_Mat2AXIvideo_U0_img_data_stream_0_V_read;
assign img_3_data_stream_0_V_25_write = image_filter_UVdownsampling_U0_yuv422_data_stream_0_V_write;
assign img_3_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_3_data_stream_0_V_din = image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_0_V_din;
assign img_3_data_stream_0_V_read = image_filter_UVdownsampling_U0_yuv444_data_stream_0_V_read;
assign img_3_data_stream_0_V_write = image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_0_V_write;
assign img_3_data_stream_1_V_27_U_ap_dummy_ce = ap_const_logic_1;
assign img_3_data_stream_1_V_27_din = image_filter_UVdownsampling_U0_yuv422_data_stream_1_V_din;
assign img_3_data_stream_1_V_27_read = image_filter_Mat2AXIvideo_U0_img_data_stream_1_V_read;
assign img_3_data_stream_1_V_27_write = image_filter_UVdownsampling_U0_yuv422_data_stream_1_V_write;
assign img_3_data_stream_1_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_3_data_stream_1_V_din = image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_1_V_din;
assign img_3_data_stream_1_V_read = image_filter_UVdownsampling_U0_yuv444_data_stream_1_V_read;
assign img_3_data_stream_1_V_write = image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_1_V_write;
assign img_3_data_stream_2_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_3_data_stream_2_V_din = image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_2_V_din;
assign img_3_data_stream_2_V_read = image_filter_UVdownsampling_U0_yuv444_data_stream_2_V_read;
assign img_3_data_stream_2_V_write = image_filter_PaintMask_32_0_1080_1920_U0_p_dst_data_stream_2_V_write;
assign img_3_rows_V_33_U_ap_dummy_ce = ap_const_logic_1;
assign img_3_rows_V_33_din = image_filter_Block_proc_U0_ap_return_26;
assign img_3_rows_V_33_read = image_filter_Mat2AXIvideo_U0_ap_ready;
assign img_3_rows_V_33_write = ap_chn_write_image_filter_Block_proc_U0_img_3_rows_V_33;
assign img_3_rows_V_U_ap_dummy_ce = ap_const_logic_1;
assign img_3_rows_V_channel_U_ap_dummy_ce = ap_const_logic_1;
assign img_3_rows_V_channel_din = image_filter_Block_proc_U0_ap_return_23;
assign img_3_rows_V_channel_read = image_filter_UVdownsampling_U0_ap_ready;
assign img_3_rows_V_channel_write = ap_chn_write_image_filter_Block_proc_U0_img_3_rows_V_channel;
assign img_3_rows_V_din = image_filter_Block_proc_U0_ap_return_22;
assign img_3_rows_V_read = image_filter_PaintMask_32_0_1080_1920_U0_ap_ready;
assign img_3_rows_V_write = ap_chn_write_image_filter_Block_proc_U0_img_3_rows_V;
assign mask_cols_V_U_ap_dummy_ce = ap_const_logic_1;
assign mask_cols_V_din = image_filter_Block_proc_U0_ap_return_29;
assign mask_cols_V_read = image_filter_Dilate_0_0_1080_1920_U0_ap_ready;
assign mask_cols_V_write = ap_chn_write_image_filter_Block_proc_U0_mask_cols_V;
assign mask_data_stream_0_V_U_ap_dummy_ce = ap_const_logic_1;
assign mask_data_stream_0_V_din = image_filter_FAST_t_opr_U0_p_mask_data_stream_V_din;
assign mask_data_stream_0_V_read = image_filter_Dilate_0_0_1080_1920_U0_p_src_data_stream_V_read;
assign mask_data_stream_0_V_write = image_filter_FAST_t_opr_U0_p_mask_data_stream_V_write;
assign mask_rows_V_U_ap_dummy_ce = ap_const_logic_1;
assign mask_rows_V_din = image_filter_Block_proc_U0_ap_return_28;
assign mask_rows_V_read = image_filter_Dilate_0_0_1080_1920_U0_ap_ready;
assign mask_rows_V_write = ap_chn_write_image_filter_Block_proc_U0_mask_rows_V;
assign video_in_TREADY = image_filter_AXIvideo2Mat_U0_video_in_TREADY;
assign video_out_TDATA = image_filter_Mat2AXIvideo_U0_video_out_TDATA;
assign video_out_TDEST = image_filter_Mat2AXIvideo_U0_video_out_TDEST;
assign video_out_TID = image_filter_Mat2AXIvideo_U0_video_out_TID;
assign video_out_TKEEP = image_filter_Mat2AXIvideo_U0_video_out_TKEEP;
assign video_out_TLAST = image_filter_Mat2AXIvideo_U0_video_out_TLAST;
assign video_out_TSTRB = image_filter_Mat2AXIvideo_U0_video_out_TSTRB;
assign video_out_TUSER = image_filter_Mat2AXIvideo_U0_video_out_TUSER;
assign video_out_TVALID = image_filter_Mat2AXIvideo_U0_video_out_TVALID;


endmodule //image_filter

